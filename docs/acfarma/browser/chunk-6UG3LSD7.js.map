{
  "version": 3,
  "sources": ["src/app/services/product-cart.service.ts", "src/app/services/quantity-cart.service.ts", "src/app/components/product-quantity/product-quantity.component.ts", "src/app/components/product-quantity/product-quantity.component.html"],
  "sourcesContent": ["import { Injectable } from '@angular/core';\r\nimport { IProductCart } from '../models/IProductCart.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class ProductCartService {\r\n  private itens: IProductCart[] = [];\r\n  private priceTotal: number = 0;\r\n\r\n  constructor() {\r\n    this.getCart();\r\n  }\r\n\r\n  getCart(): IProductCart[] {\r\n    //armazenar na local store\r\n    if (localStorage.getItem('cart')) {\r\n      this.itens = JSON.parse(localStorage.getItem('cart') ?? '');\r\n    }\r\n    this.updatedPriceTotal();\r\n    return this.itens;\r\n  }\r\n\r\n  setProductCart(product: IProductCart): void {\r\n    \r\n    let index = -1;\r\n    for(let i in this.itens){\r\n      if(this.itens[i].id === product.id) index = parseInt(i);\r\n    }\r\n    if(index > -1) this.itens[index].quantityProducts += 1\r\n    else this.itens.push(product);\r\n    \r\n    //adicionar ao cart do local store como string\r\n    localStorage.setItem('cart', JSON.stringify(this.itens));    \r\n  }\r\n\r\n  getQuantityProducts(id: number): number{\r\n    // this.updatedPriceTotal();\r\n    \r\n    const product = this.itens.find(item => item.id === id);   \r\n    return product?.quantityProducts || 1;\r\n  }\r\n  \r\n  setQuantityProductsById(id: number, quantity: number){\r\n    for (let i in this.itens) {\r\n      if (this.itens[i].id === id) {\r\n        this.itens[i].quantityProducts = quantity;                \r\n      }\r\n    }\r\n    this.updatedPriceTotal();\r\n    localStorage.setItem('cart', JSON.stringify(this.itens));\r\n  }\r\n\r\n  updatedPriceTotal(){\r\n    let priceTotal = 0;\r\n    for(let i of this.itens){\r\n      priceTotal += (i.price * i.quantityProducts);      \r\n    } \r\n    this.setPriceTotal(priceTotal) \r\n    document.getElementById('bagPriceTotal')!.innerHTML = \"R$\"+this.priceTotal.toFixed(2);     \r\n  }\r\n  \r\n  setPriceTotal(newPrice:number):void{\r\n    this.priceTotal = newPrice;\r\n  }\r\n\r\n  getPriceTotal():number{ \r\n    return Number(this.priceTotal.toFixed(2));\r\n  }\r\n}\r\n", "import { Injectable } from '@angular/core';\r\nimport { IProductCart } from '../models/IProductCart.interface';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class QuantityCartService {\r\n  itens: IProductCart[] = [];\r\n  quantityInCart: number = 1;\r\n  constructor() {\r\n    this.updatedQuantityInCart();\r\n  }\r\n\r\n  updatedQuantityInCart(): void {\r\n    this.itens = JSON.parse(localStorage.getItem('cart') || '');\r\n    \r\n    let quantityInCart = 0;\r\n    this.itens.map((item) => {\r\n      quantityInCart += item.quantityProducts;      \r\n    });\r\n    this.setTotalInCart(quantityInCart);\r\n    document.getElementById('quantityInBag')!.innerHTML = `${this.quantityInCart}`;           \r\n  }\r\n  \r\n  setTotalInCart(value: number): void {\r\n    this.quantityInCart = value;\r\n  }\r\n  getTotalInCart(): number {\r\n    return this.quantityInCart;\r\n  }\r\n\r\n  clearCart(): void {\r\n    this.itens = [];\r\n    localStorage.clear();\r\n  }\r\n\r\n  deleteProductInCart(id: number){\r\n    this.itens = JSON.parse(localStorage.getItem('cart') || '');  \r\n    this.itens = this.itens.filter(item => item.id !== id)  \r\n    localStorage.setItem('cart', JSON.stringify(this.itens));\r\n    this.updatedQuantityInCart();\r\n  }\r\n}\r\n", "import { Component, EventEmitter, Input, OnChanges, OnInit, Output, signal, SimpleChanges, WritableSignal } from '@angular/core';\r\nimport { ProductCartService } from '../../services/product-cart.service';\r\nimport { QuantityCartService } from '../../services/quantity-cart.service';\r\n\r\n@Component({\r\n  selector: 'app-product-quantity',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './product-quantity.component.html',\r\n  styleUrl: './product-quantity.component.css'\r\n})\r\nexport class ProductQuantityComponent implements OnInit{\r\n\r\n  constructor(private productCartService : ProductCartService,\r\n    private quantityCartService: QuantityCartService){}\r\n\r\n  ngOnInit(): void {\r\n    this.quantity.set(this.getQuantity(this.id()));          \r\n  }\r\n\r\n  public id: WritableSignal<number> = signal(0);\r\n  @Input() set inputId(id: number){\r\n    this.id.set(id);\r\n  }\r\n  \r\n  public isShowText = signal(false);\r\n  @Input() set inputShowText(ishowText: boolean){\r\n    this.isShowText.set(ishowText);\r\n  }\r\n  \r\n  public quantity:WritableSignal<number> = signal(1);\r\n  @Output() quantityOuput: EventEmitter<number> = new EventEmitter<number>();\r\n\r\n  onHandleIncrease(): void {\r\n    this.quantity.update((oldValue:number) => ++oldValue);\r\n    this.quantityOuput.emit(this.quantity());\r\n  }\r\n  onHandleDecrease(): void {\r\n    if(this.quantity() > 1){\r\n      this.quantity.update((oldValue:number) => --oldValue);\r\n      this.quantityOuput.emit(this.quantity())\r\n    }\r\n  }\r\n  \r\n  getQuantity(id: number):number{\r\n    return this.productCartService.getQuantityProducts(id);\r\n    \r\n  }\r\n}\r\n", "<div class=\"quantity__container\">\r\n    @if (isShowText()) {\r\n        <span class=\"quantity-text\">Quantidade</span>\r\n    }\r\n    <div class=\"quantity__content\">\r\n        <button type=\"button\" class=\"btn-quantity\" (click)=\"onHandleDecrease()\">-</button>\r\n        <span class=\"current-quantity\">{{quantity()}}</span>\r\n        <button type=\"button\" class=\"btn-quantity\" (click)=\"onHandleIncrease()\">+</button>\r\n    </div>\r\n</div>"],
  "mappings": "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",
  "names": []
}

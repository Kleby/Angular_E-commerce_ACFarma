{"version":3,"sources":["node_modules/@angular/router/fesm2022/router.mjs","node_modules/@angular/platform-browser/fesm2022/animations.mjs","src/app/components/card/card.component.ts","src/app/components/card/card.component.html","src/assets/db/fakerDB.ts","src/app/services/product.service.ts","src/app/pages/home/home.component.ts","src/app/pages/home/home.component.html","src/app/pages/not-found/not-found.component.ts","src/app/pages/not-found/not-found.component.html","node_modules/@fortawesome/free-regular-svg-icons/index.mjs","node_modules/@angular/forms/fesm2022/forms.mjs","node_modules/@angular/cdk/fesm2022/platform.mjs","node_modules/@angular/cdk/fesm2022/coercion.mjs","node_modules/@angular/cdk/fesm2022/layout.mjs","node_modules/@angular/cdk/fesm2022/a11y.mjs","node_modules/@angular/cdk/fesm2022/bidi.mjs","node_modules/@angular/material/fesm2022/core.mjs","node_modules/@angular/material/fesm2022/slide-toggle.mjs","src/app/components/message-add/message-add.component.ts","src/app/components/message-add/message-add.component.html","src/app/pages/product/product.component.ts","src/app/pages/product/product.component.html","src/app/components/message-delete/message-delete.component.ts","src/app/components/message-delete/message-delete.component.html","src/app/components/cart-card/cart-card.component.ts","src/app/components/cart-card/cart-card.component.html","src/app/pages/cart/cart.component.ts","src/app/pages/cart/cart.component.html","src/app/pages/contact/contact.component.ts","src/app/pages/contact/contact.component.html","src/app/app.routes.ts","node_modules/@angular/platform-browser/fesm2022/animations/async.mjs","src/app/app.config.ts","node_modules/primeng/fesm2022/primeng-utils.mjs","node_modules/primeng/fesm2022/primeng-api.mjs","node_modules/primeng/fesm2022/primeng-baseicon.mjs","node_modules/primeng/fesm2022/primeng-icons-spinner.mjs","node_modules/primeng/fesm2022/primeng-ripple.mjs","node_modules/primeng/fesm2022/primeng-button.mjs","src/app/templates/navbar/navbar.component.ts","src/app/templates/navbar/navbar.component.html","node_modules/primeng/fesm2022/primeng-icons-angledown.mjs","node_modules/primeng/fesm2022/primeng-icons-angleright.mjs","node_modules/primeng/fesm2022/primeng-icons-bars.mjs","node_modules/primeng/fesm2022/primeng-tooltip.mjs","node_modules/primeng/fesm2022/primeng-menubar.mjs","src/app/templates/header/header.component.ts","src/app/templates/header/header.component.html","src/app/templates/footer/footer.component.ts","src/app/templates/footer/footer.component.html","src/app/app.component.ts","src/app/app.component.html","src/main.ts"],"sourcesContent":["/**\n * @license Angular v17.2.2\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { ɵisPromise, ɵRuntimeError, Injectable, EventEmitter, inject, ViewContainerRef, ChangeDetectorRef, EnvironmentInjector, Directive, Input, Output, InjectionToken, reflectComponentType, Component, createEnvironmentInjector, ɵisNgModule, isStandalone, ɵisInjectable, runInInjectionContext, Compiler, NgModuleFactory, NgZone, afterNextRender, ɵConsole, ɵPendingTasks, ɵɵsanitizeUrlOrResourceUrl, booleanAttribute, Attribute, HostBinding, HostListener, Optional, ContentChildren, makeEnvironmentProviders, APP_BOOTSTRAP_LISTENER, ENVIRONMENT_INITIALIZER, Injector, ApplicationRef, InjectFlags, APP_INITIALIZER, SkipSelf, NgModule, Inject, Version } from '@angular/core';\nimport { isObservable, from, of, BehaviorSubject, combineLatest, EmptyError, concat, defer, pipe, throwError, EMPTY, ConnectableObservable, Subject, Subscription } from 'rxjs';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, Location, ViewportScroller, LOCATION_INITIALIZED, LocationStrategy, HashLocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { map, switchMap, take, startWith, filter, mergeMap, first, concatMap, tap, catchError, scan, defaultIfEmpty, last as last$1, takeLast, mapTo, finalize, refCount, takeUntil, mergeAll } from 'rxjs/operators';\nimport * as i1 from '@angular/platform-browser';\n\n/**\n * The primary routing outlet.\n *\n * @publicApi\n */\nconst PRIMARY_OUTLET = 'primary';\n/**\n * A private symbol used to store the value of `Route.title` inside the `Route.data` if it is a\n * static string or `Route.resolve` if anything else. This allows us to reuse the existing route\n * data/resolvers to support the title feature without new instrumentation in the `Router` pipeline.\n */\nconst RouteTitleKey = /* @__PURE__ */Symbol('RouteTitle');\nclass ParamsAsMap {\n  constructor(params) {\n    this.params = params || {};\n  }\n  has(name) {\n    return Object.prototype.hasOwnProperty.call(this.params, name);\n  }\n  get(name) {\n    if (this.has(name)) {\n      const v = this.params[name];\n      return Array.isArray(v) ? v[0] : v;\n    }\n    return null;\n  }\n  getAll(name) {\n    if (this.has(name)) {\n      const v = this.params[name];\n      return Array.isArray(v) ? v : [v];\n    }\n    return [];\n  }\n  get keys() {\n    return Object.keys(this.params);\n  }\n}\n/**\n * Converts a `Params` instance to a `ParamMap`.\n * @param params The instance to convert.\n * @returns The new map instance.\n *\n * @publicApi\n */\nfunction convertToParamMap(params) {\n  return new ParamsAsMap(params);\n}\n/**\n * Matches the route configuration (`route`) against the actual URL (`segments`).\n *\n * When no matcher is defined on a `Route`, this is the matcher used by the Router by default.\n *\n * @param segments The remaining unmatched segments in the current navigation\n * @param segmentGroup The current segment group being matched\n * @param route The `Route` to match against.\n *\n * @see {@link UrlMatchResult}\n * @see {@link Route}\n *\n * @returns The resulting match information or `null` if the `route` should not match.\n * @publicApi\n */\nfunction defaultUrlMatcher(segments, segmentGroup, route) {\n  const parts = route.path.split('/');\n  if (parts.length > segments.length) {\n    // The actual URL is shorter than the config, no match\n    return null;\n  }\n  if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || parts.length < segments.length)) {\n    // The config is longer than the actual URL but we are looking for a full match, return null\n    return null;\n  }\n  const posParams = {};\n  // Check each config part against the actual URL\n  for (let index = 0; index < parts.length; index++) {\n    const part = parts[index];\n    const segment = segments[index];\n    const isParameter = part.startsWith(':');\n    if (isParameter) {\n      posParams[part.substring(1)] = segment;\n    } else if (part !== segment.path) {\n      // The actual URL part does not match the config, no match\n      return null;\n    }\n  }\n  return {\n    consumed: segments.slice(0, parts.length),\n    posParams\n  };\n}\nfunction shallowEqualArrays(a, b) {\n  if (a.length !== b.length) return false;\n  for (let i = 0; i < a.length; ++i) {\n    if (!shallowEqual(a[i], b[i])) return false;\n  }\n  return true;\n}\nfunction shallowEqual(a, b) {\n  // While `undefined` should never be possible, it would sometimes be the case in IE 11\n  // and pre-chromium Edge. The check below accounts for this edge case.\n  const k1 = a ? getDataKeys(a) : undefined;\n  const k2 = b ? getDataKeys(b) : undefined;\n  if (!k1 || !k2 || k1.length != k2.length) {\n    return false;\n  }\n  let key;\n  for (let i = 0; i < k1.length; i++) {\n    key = k1[i];\n    if (!equalArraysOrString(a[key], b[key])) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\n * Gets the keys of an object, including `symbol` keys.\n */\nfunction getDataKeys(obj) {\n  return [...Object.keys(obj), ...Object.getOwnPropertySymbols(obj)];\n}\n/**\n * Test equality for arrays of strings or a string.\n */\nfunction equalArraysOrString(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) return false;\n    const aSorted = [...a].sort();\n    const bSorted = [...b].sort();\n    return aSorted.every((val, index) => bSorted[index] === val);\n  } else {\n    return a === b;\n  }\n}\n/**\n * Return the last element of an array.\n */\nfunction last(a) {\n  return a.length > 0 ? a[a.length - 1] : null;\n}\nfunction wrapIntoObservable(value) {\n  if (isObservable(value)) {\n    return value;\n  }\n  if (ɵisPromise(value)) {\n    // Use `Promise.resolve()` to wrap promise-like instances.\n    // Required ie when a Resolver returns a AngularJS `$q` promise to correctly trigger the\n    // change detection.\n    return from(Promise.resolve(value));\n  }\n  return of(value);\n}\nconst pathCompareMap = {\n  'exact': equalSegmentGroups,\n  'subset': containsSegmentGroup\n};\nconst paramCompareMap = {\n  'exact': equalParams,\n  'subset': containsParams,\n  'ignored': () => true\n};\nfunction containsTree(container, containee, options) {\n  return pathCompareMap[options.paths](container.root, containee.root, options.matrixParams) && paramCompareMap[options.queryParams](container.queryParams, containee.queryParams) && !(options.fragment === 'exact' && container.fragment !== containee.fragment);\n}\nfunction equalParams(container, containee) {\n  // TODO: This does not handle array params correctly.\n  return shallowEqual(container, containee);\n}\nfunction equalSegmentGroups(container, containee, matrixParams) {\n  if (!equalPath(container.segments, containee.segments)) return false;\n  if (!matrixParamsMatch(container.segments, containee.segments, matrixParams)) {\n    return false;\n  }\n  if (container.numberOfChildren !== containee.numberOfChildren) return false;\n  for (const c in containee.children) {\n    if (!container.children[c]) return false;\n    if (!equalSegmentGroups(container.children[c], containee.children[c], matrixParams)) return false;\n  }\n  return true;\n}\nfunction containsParams(container, containee) {\n  return Object.keys(containee).length <= Object.keys(container).length && Object.keys(containee).every(key => equalArraysOrString(container[key], containee[key]));\n}\nfunction containsSegmentGroup(container, containee, matrixParams) {\n  return containsSegmentGroupHelper(container, containee, containee.segments, matrixParams);\n}\nfunction containsSegmentGroupHelper(container, containee, containeePaths, matrixParams) {\n  if (container.segments.length > containeePaths.length) {\n    const current = container.segments.slice(0, containeePaths.length);\n    if (!equalPath(current, containeePaths)) return false;\n    if (containee.hasChildren()) return false;\n    if (!matrixParamsMatch(current, containeePaths, matrixParams)) return false;\n    return true;\n  } else if (container.segments.length === containeePaths.length) {\n    if (!equalPath(container.segments, containeePaths)) return false;\n    if (!matrixParamsMatch(container.segments, containeePaths, matrixParams)) return false;\n    for (const c in containee.children) {\n      if (!container.children[c]) return false;\n      if (!containsSegmentGroup(container.children[c], containee.children[c], matrixParams)) {\n        return false;\n      }\n    }\n    return true;\n  } else {\n    const current = containeePaths.slice(0, container.segments.length);\n    const next = containeePaths.slice(container.segments.length);\n    if (!equalPath(container.segments, current)) return false;\n    if (!matrixParamsMatch(container.segments, current, matrixParams)) return false;\n    if (!container.children[PRIMARY_OUTLET]) return false;\n    return containsSegmentGroupHelper(container.children[PRIMARY_OUTLET], containee, next, matrixParams);\n  }\n}\nfunction matrixParamsMatch(containerPaths, containeePaths, options) {\n  return containeePaths.every((containeeSegment, i) => {\n    return paramCompareMap[options](containerPaths[i].parameters, containeeSegment.parameters);\n  });\n}\n/**\n * @description\n *\n * Represents the parsed URL.\n *\n * Since a router state is a tree, and the URL is nothing but a serialized state, the URL is a\n * serialized tree.\n * UrlTree is a data structure that provides a lot of affordances in dealing with URLs\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree =\n *       router.parseUrl('/team/33/(user/victor//support:help)?debug=true#fragment');\n *     const f = tree.fragment; // return 'fragment'\n *     const q = tree.queryParams; // returns {debug: 'true'}\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments; // returns 2 segments 'team' and '33'\n *     g.children[PRIMARY_OUTLET].segments; // returns 2 segments 'user' and 'victor'\n *     g.children['support'].segments; // return 1 segment 'help'\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlTree {\n  constructor( /** The root segment group of the URL tree */\n  root = new UrlSegmentGroup([], {}), /** The query params of the URL */\n  queryParams = {}, /** The fragment of the URL */\n  fragment = null) {\n    this.root = root;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      if (root.segments.length > 0) {\n        throw new ɵRuntimeError(4015 /* RuntimeErrorCode.INVALID_ROOT_URL_SEGMENT */, 'The root `UrlSegmentGroup` should not contain `segments`. ' + 'Instead, these segments belong in the `children` so they can be associated with a named outlet.');\n      }\n    }\n  }\n  get queryParamMap() {\n    this._queryParamMap ??= convertToParamMap(this.queryParams);\n    return this._queryParamMap;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return DEFAULT_SERIALIZER.serialize(this);\n  }\n}\n/**\n * @description\n *\n * Represents the parsed URL segment group.\n *\n * See `UrlTree` for more information.\n *\n * @publicApi\n */\nclass UrlSegmentGroup {\n  constructor( /** The URL segments of this group. See `UrlSegment` for more information */\n  segments, /** The list of children of this group */\n  children) {\n    this.segments = segments;\n    this.children = children;\n    /** The parent node in the url tree */\n    this.parent = null;\n    Object.values(children).forEach(v => v.parent = this);\n  }\n  /** Whether the segment has child segments */\n  hasChildren() {\n    return this.numberOfChildren > 0;\n  }\n  /** Number of child segments */\n  get numberOfChildren() {\n    return Object.keys(this.children).length;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return serializePaths(this);\n  }\n}\n/**\n * @description\n *\n * Represents a single URL segment.\n *\n * A UrlSegment is a part of a URL between the two slashes. It contains a path and the matrix\n * parameters associated with the segment.\n *\n * @usageNotes\n * ### Example\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const tree: UrlTree = router.parseUrl('/team;id=33');\n *     const g: UrlSegmentGroup = tree.root.children[PRIMARY_OUTLET];\n *     const s: UrlSegment[] = g.segments;\n *     s[0].path; // returns 'team'\n *     s[0].parameters; // returns {id: 33}\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass UrlSegment {\n  constructor( /** The path part of a URL segment */\n  path, /** The matrix parameters associated with a segment */\n  parameters) {\n    this.path = path;\n    this.parameters = parameters;\n  }\n  get parameterMap() {\n    this._parameterMap ??= convertToParamMap(this.parameters);\n    return this._parameterMap;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return serializePath(this);\n  }\n}\nfunction equalSegments(as, bs) {\n  return equalPath(as, bs) && as.every((a, i) => shallowEqual(a.parameters, bs[i].parameters));\n}\nfunction equalPath(as, bs) {\n  if (as.length !== bs.length) return false;\n  return as.every((a, i) => a.path === bs[i].path);\n}\nfunction mapChildrenIntoArray(segment, fn) {\n  let res = [];\n  Object.entries(segment.children).forEach(([childOutlet, child]) => {\n    if (childOutlet === PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  Object.entries(segment.children).forEach(([childOutlet, child]) => {\n    if (childOutlet !== PRIMARY_OUTLET) {\n      res = res.concat(fn(child, childOutlet));\n    }\n  });\n  return res;\n}\n/**\n * @description\n *\n * Serializes and deserializes a URL string into a URL tree.\n *\n * The url serialization strategy is customizable. You can\n * make all URLs case insensitive by providing a custom UrlSerializer.\n *\n * See `DefaultUrlSerializer` for an example of a URL serializer.\n *\n * @publicApi\n */\nlet UrlSerializer = /*#__PURE__*/(() => {\n  class UrlSerializer {\n    static {\n      this.ɵfac = function UrlSerializer_Factory(t) {\n        return new (t || UrlSerializer)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: UrlSerializer,\n        factory: () => (() => new DefaultUrlSerializer())(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return UrlSerializer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * A default implementation of the `UrlSerializer`.\n *\n * Example URLs:\n *\n * ```\n * /inbox/33(popup:compose)\n * /inbox/33;open=true/messages/44\n * ```\n *\n * DefaultUrlSerializer uses parentheses to serialize secondary segments (e.g., popup:compose), the\n * colon syntax to specify the outlet, and the ';parameter=value' syntax (e.g., open=true) to\n * specify route specific parameters.\n *\n * @publicApi\n */\nclass DefaultUrlSerializer {\n  /** Parses a url into a `UrlTree` */\n  parse(url) {\n    const p = new UrlParser(url);\n    return new UrlTree(p.parseRootSegment(), p.parseQueryParams(), p.parseFragment());\n  }\n  /** Converts a `UrlTree` into a url */\n  serialize(tree) {\n    const segment = `/${serializeSegment(tree.root, true)}`;\n    const query = serializeQueryParams(tree.queryParams);\n    const fragment = typeof tree.fragment === `string` ? `#${encodeUriFragment(tree.fragment)}` : '';\n    return `${segment}${query}${fragment}`;\n  }\n}\nconst DEFAULT_SERIALIZER = /*#__PURE__*/new DefaultUrlSerializer();\nfunction serializePaths(segment) {\n  return segment.segments.map(p => serializePath(p)).join('/');\n}\nfunction serializeSegment(segment, root) {\n  if (!segment.hasChildren()) {\n    return serializePaths(segment);\n  }\n  if (root) {\n    const primary = segment.children[PRIMARY_OUTLET] ? serializeSegment(segment.children[PRIMARY_OUTLET], false) : '';\n    const children = [];\n    Object.entries(segment.children).forEach(([k, v]) => {\n      if (k !== PRIMARY_OUTLET) {\n        children.push(`${k}:${serializeSegment(v, false)}`);\n      }\n    });\n    return children.length > 0 ? `${primary}(${children.join('//')})` : primary;\n  } else {\n    const children = mapChildrenIntoArray(segment, (v, k) => {\n      if (k === PRIMARY_OUTLET) {\n        return [serializeSegment(segment.children[PRIMARY_OUTLET], false)];\n      }\n      return [`${k}:${serializeSegment(v, false)}`];\n    });\n    // use no parenthesis if the only child is a primary outlet route\n    if (Object.keys(segment.children).length === 1 && segment.children[PRIMARY_OUTLET] != null) {\n      return `${serializePaths(segment)}/${children[0]}`;\n    }\n    return `${serializePaths(segment)}/(${children.join('//')})`;\n  }\n}\n/**\n * Encodes a URI string with the default encoding. This function will only ever be called from\n * `encodeUriQuery` or `encodeUriSegment` as it's the base set of encodings to be used. We need\n * a custom encoding because encodeURIComponent is too aggressive and encodes stuff that doesn't\n * have to be encoded per https://url.spec.whatwg.org.\n */\nfunction encodeUriString(s) {\n  return encodeURIComponent(s).replace(/%40/g, '@').replace(/%3A/gi, ':').replace(/%24/g, '$').replace(/%2C/gi, ',');\n}\n/**\n * This function should be used to encode both keys and values in a query string key/value. In\n * the following URL, you need to call encodeUriQuery on \"k\" and \"v\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriQuery(s) {\n  return encodeUriString(s).replace(/%3B/gi, ';');\n}\n/**\n * This function should be used to encode a URL fragment. In the following URL, you need to call\n * encodeUriFragment on \"f\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriFragment(s) {\n  return encodeURI(s);\n}\n/**\n * This function should be run on any URI segment as well as the key and value in a key/value\n * pair for matrix params. In the following URL, you need to call encodeUriSegment on \"html\",\n * \"mk\", and \"mv\":\n *\n * http://www.site.org/html;mk=mv?k=v#f\n */\nfunction encodeUriSegment(s) {\n  return encodeUriString(s).replace(/\\(/g, '%28').replace(/\\)/g, '%29').replace(/%26/gi, '&');\n}\nfunction decode(s) {\n  return decodeURIComponent(s);\n}\n// Query keys/values should have the \"+\" replaced first, as \"+\" in a query string is \" \".\n// decodeURIComponent function will not decode \"+\" as a space.\nfunction decodeQuery(s) {\n  return decode(s.replace(/\\+/g, '%20'));\n}\nfunction serializePath(path) {\n  return `${encodeUriSegment(path.path)}${serializeMatrixParams(path.parameters)}`;\n}\nfunction serializeMatrixParams(params) {\n  return Object.entries(params).map(([key, value]) => `;${encodeUriSegment(key)}=${encodeUriSegment(value)}`).join('');\n}\nfunction serializeQueryParams(params) {\n  const strParams = Object.entries(params).map(([name, value]) => {\n    return Array.isArray(value) ? value.map(v => `${encodeUriQuery(name)}=${encodeUriQuery(v)}`).join('&') : `${encodeUriQuery(name)}=${encodeUriQuery(value)}`;\n  }).filter(s => s);\n  return strParams.length ? `?${strParams.join('&')}` : '';\n}\nconst SEGMENT_RE = /^[^\\/()?;#]+/;\nfunction matchSegments(str) {\n  const match = str.match(SEGMENT_RE);\n  return match ? match[0] : '';\n}\nconst MATRIX_PARAM_SEGMENT_RE = /^[^\\/()?;=#]+/;\nfunction matchMatrixKeySegments(str) {\n  const match = str.match(MATRIX_PARAM_SEGMENT_RE);\n  return match ? match[0] : '';\n}\nconst QUERY_PARAM_RE = /^[^=?&#]+/;\n// Return the name of the query param at the start of the string or an empty string\nfunction matchQueryParams(str) {\n  const match = str.match(QUERY_PARAM_RE);\n  return match ? match[0] : '';\n}\nconst QUERY_PARAM_VALUE_RE = /^[^&#]+/;\n// Return the value of the query param at the start of the string or an empty string\nfunction matchUrlQueryParamValue(str) {\n  const match = str.match(QUERY_PARAM_VALUE_RE);\n  return match ? match[0] : '';\n}\nclass UrlParser {\n  constructor(url) {\n    this.url = url;\n    this.remaining = url;\n  }\n  parseRootSegment() {\n    this.consumeOptional('/');\n    if (this.remaining === '' || this.peekStartsWith('?') || this.peekStartsWith('#')) {\n      return new UrlSegmentGroup([], {});\n    }\n    // The root segment group never has segments\n    return new UrlSegmentGroup([], this.parseChildren());\n  }\n  parseQueryParams() {\n    const params = {};\n    if (this.consumeOptional('?')) {\n      do {\n        this.parseQueryParam(params);\n      } while (this.consumeOptional('&'));\n    }\n    return params;\n  }\n  parseFragment() {\n    return this.consumeOptional('#') ? decodeURIComponent(this.remaining) : null;\n  }\n  parseChildren() {\n    if (this.remaining === '') {\n      return {};\n    }\n    this.consumeOptional('/');\n    const segments = [];\n    if (!this.peekStartsWith('(')) {\n      segments.push(this.parseSegment());\n    }\n    while (this.peekStartsWith('/') && !this.peekStartsWith('//') && !this.peekStartsWith('/(')) {\n      this.capture('/');\n      segments.push(this.parseSegment());\n    }\n    let children = {};\n    if (this.peekStartsWith('/(')) {\n      this.capture('/');\n      children = this.parseParens(true);\n    }\n    let res = {};\n    if (this.peekStartsWith('(')) {\n      res = this.parseParens(false);\n    }\n    if (segments.length > 0 || Object.keys(children).length > 0) {\n      res[PRIMARY_OUTLET] = new UrlSegmentGroup(segments, children);\n    }\n    return res;\n  }\n  // parse a segment with its matrix parameters\n  // ie `name;k1=v1;k2`\n  parseSegment() {\n    const path = matchSegments(this.remaining);\n    if (path === '' && this.peekStartsWith(';')) {\n      throw new ɵRuntimeError(4009 /* RuntimeErrorCode.EMPTY_PATH_WITH_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Empty path url segment cannot have parameters: '${this.remaining}'.`);\n    }\n    this.capture(path);\n    return new UrlSegment(decode(path), this.parseMatrixParams());\n  }\n  parseMatrixParams() {\n    const params = {};\n    while (this.consumeOptional(';')) {\n      this.parseParam(params);\n    }\n    return params;\n  }\n  parseParam(params) {\n    const key = matchMatrixKeySegments(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let value = '';\n    if (this.consumeOptional('=')) {\n      const valueMatch = matchSegments(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n    params[decode(key)] = decode(value);\n  }\n  // Parse a single query parameter `name[=value]`\n  parseQueryParam(params) {\n    const key = matchQueryParams(this.remaining);\n    if (!key) {\n      return;\n    }\n    this.capture(key);\n    let value = '';\n    if (this.consumeOptional('=')) {\n      const valueMatch = matchUrlQueryParamValue(this.remaining);\n      if (valueMatch) {\n        value = valueMatch;\n        this.capture(value);\n      }\n    }\n    const decodedKey = decodeQuery(key);\n    const decodedVal = decodeQuery(value);\n    if (params.hasOwnProperty(decodedKey)) {\n      // Append to existing values\n      let currentVal = params[decodedKey];\n      if (!Array.isArray(currentVal)) {\n        currentVal = [currentVal];\n        params[decodedKey] = currentVal;\n      }\n      currentVal.push(decodedVal);\n    } else {\n      // Create a new value\n      params[decodedKey] = decodedVal;\n    }\n  }\n  // parse `(a/b//outlet_name:c/d)`\n  parseParens(allowPrimary) {\n    const segments = {};\n    this.capture('(');\n    while (!this.consumeOptional(')') && this.remaining.length > 0) {\n      const path = matchSegments(this.remaining);\n      const next = this.remaining[path.length];\n      // if is is not one of these characters, then the segment was unescaped\n      // or the group was not closed\n      if (next !== '/' && next !== ')' && next !== ';') {\n        throw new ɵRuntimeError(4010 /* RuntimeErrorCode.UNPARSABLE_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot parse url '${this.url}'`);\n      }\n      let outletName = undefined;\n      if (path.indexOf(':') > -1) {\n        outletName = path.slice(0, path.indexOf(':'));\n        this.capture(outletName);\n        this.capture(':');\n      } else if (allowPrimary) {\n        outletName = PRIMARY_OUTLET;\n      }\n      const children = this.parseChildren();\n      segments[outletName] = Object.keys(children).length === 1 ? children[PRIMARY_OUTLET] : new UrlSegmentGroup([], children);\n      this.consumeOptional('//');\n    }\n    return segments;\n  }\n  peekStartsWith(str) {\n    return this.remaining.startsWith(str);\n  }\n  // Consumes the prefix when it is present and returns whether it has been consumed\n  consumeOptional(str) {\n    if (this.peekStartsWith(str)) {\n      this.remaining = this.remaining.substring(str.length);\n      return true;\n    }\n    return false;\n  }\n  capture(str) {\n    if (!this.consumeOptional(str)) {\n      throw new ɵRuntimeError(4011 /* RuntimeErrorCode.UNEXPECTED_VALUE_IN_URL */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Expected \"${str}\".`);\n    }\n  }\n}\nfunction createRoot(rootCandidate) {\n  return rootCandidate.segments.length > 0 ? new UrlSegmentGroup([], {\n    [PRIMARY_OUTLET]: rootCandidate\n  }) : rootCandidate;\n}\n/**\n * Recursively\n * - merges primary segment children into their parents\n * - drops empty children (those which have no segments and no children themselves). This latter\n * prevents serializing a group into something like `/a(aux:)`, where `aux` is an empty child\n * segment.\n * - merges named outlets without a primary segment sibling into the children. This prevents\n * serializing a URL like `//(a:a)(b:b) instead of `/(a:a//b:b)` when the aux b route lives on the\n * root but the `a` route lives under an empty path primary route.\n */\nfunction squashSegmentGroup(segmentGroup) {\n  const newChildren = {};\n  for (const [childOutlet, child] of Object.entries(segmentGroup.children)) {\n    const childCandidate = squashSegmentGroup(child);\n    // moves named children in an empty path primary child into this group\n    if (childOutlet === PRIMARY_OUTLET && childCandidate.segments.length === 0 && childCandidate.hasChildren()) {\n      for (const [grandChildOutlet, grandChild] of Object.entries(childCandidate.children)) {\n        newChildren[grandChildOutlet] = grandChild;\n      }\n    } // don't add empty children\n    else if (childCandidate.segments.length > 0 || childCandidate.hasChildren()) {\n      newChildren[childOutlet] = childCandidate;\n    }\n  }\n  const s = new UrlSegmentGroup(segmentGroup.segments, newChildren);\n  return mergeTrivialChildren(s);\n}\n/**\n * When possible, merges the primary outlet child into the parent `UrlSegmentGroup`.\n *\n * When a segment group has only one child which is a primary outlet, merges that child into the\n * parent. That is, the child segment group's segments are merged into the `s` and the child's\n * children become the children of `s`. Think of this like a 'squash', merging the child segment\n * group into the parent.\n */\nfunction mergeTrivialChildren(s) {\n  if (s.numberOfChildren === 1 && s.children[PRIMARY_OUTLET]) {\n    const c = s.children[PRIMARY_OUTLET];\n    return new UrlSegmentGroup(s.segments.concat(c.segments), c.children);\n  }\n  return s;\n}\nfunction isUrlTree(v) {\n  return v instanceof UrlTree;\n}\n\n/**\n * Creates a `UrlTree` relative to an `ActivatedRouteSnapshot`.\n *\n * @publicApi\n *\n *\n * @param relativeTo The `ActivatedRouteSnapshot` to apply the commands to\n * @param commands An array of URL fragments with which to construct the new URL tree.\n * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n * segments, followed by the parameters for each segment.\n * The fragments are applied to the one provided in the `relativeTo` parameter.\n * @param queryParams The query parameters for the `UrlTree`. `null` if the `UrlTree` does not have\n *     any query parameters.\n * @param fragment The fragment for the `UrlTree`. `null` if the `UrlTree` does not have a fragment.\n *\n * @usageNotes\n *\n * ```\n * // create /team/33/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, 'user', 11]);\n *\n * // create /team/33;expand=true/user/11\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {expand: true}, 'user', 11]);\n *\n * // you can collapse static segments like this (this works only with the first passed-in value):\n * createUrlTreeFromSnapshot(snapshot, ['/team/33/user', userId]);\n *\n * // If the first segment can contain slashes, and you do not want the router to split it,\n * // you can do the following:\n * createUrlTreeFromSnapshot(snapshot, [{segmentPath: '/one/two'}]);\n *\n * // create /team/33/(user/11//right:chat)\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right:\n * 'chat'}}], null, null);\n *\n * // remove the right secondary node\n * createUrlTreeFromSnapshot(snapshot, ['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n *\n * // For the examples below, assume the current URL is for the `/team/33/user/11` and the\n * `ActivatedRouteSnapshot` points to `user/11`:\n *\n * // navigate to /team/33/user/11/details\n * createUrlTreeFromSnapshot(snapshot, ['details']);\n *\n * // navigate to /team/33/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../22']);\n *\n * // navigate to /team/44/user/22\n * createUrlTreeFromSnapshot(snapshot, ['../../team/44/user/22']);\n * ```\n */\nfunction createUrlTreeFromSnapshot(relativeTo, commands, queryParams = null, fragment = null) {\n  const relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeTo);\n  return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, queryParams, fragment);\n}\nfunction createSegmentGroupFromRoute(route) {\n  let targetGroup;\n  function createSegmentGroupFromRouteRecursive(currentRoute) {\n    const childOutlets = {};\n    for (const childSnapshot of currentRoute.children) {\n      const root = createSegmentGroupFromRouteRecursive(childSnapshot);\n      childOutlets[childSnapshot.outlet] = root;\n    }\n    const segmentGroup = new UrlSegmentGroup(currentRoute.url, childOutlets);\n    if (currentRoute === route) {\n      targetGroup = segmentGroup;\n    }\n    return segmentGroup;\n  }\n  const rootCandidate = createSegmentGroupFromRouteRecursive(route.root);\n  const rootSegmentGroup = createRoot(rootCandidate);\n  return targetGroup ?? rootSegmentGroup;\n}\nfunction createUrlTreeFromSegmentGroup(relativeTo, commands, queryParams, fragment) {\n  let root = relativeTo;\n  while (root.parent) {\n    root = root.parent;\n  }\n  // There are no commands so the `UrlTree` goes to the same path as the one created from the\n  // `UrlSegmentGroup`. All we need to do is update the `queryParams` and `fragment` without\n  // applying any other logic.\n  if (commands.length === 0) {\n    return tree(root, root, root, queryParams, fragment);\n  }\n  const nav = computeNavigation(commands);\n  if (nav.toRoot()) {\n    return tree(root, root, new UrlSegmentGroup([], {}), queryParams, fragment);\n  }\n  const position = findStartingPositionForTargetGroup(nav, root, relativeTo);\n  const newSegmentGroup = position.processChildren ? updateSegmentGroupChildren(position.segmentGroup, position.index, nav.commands) : updateSegmentGroup(position.segmentGroup, position.index, nav.commands);\n  return tree(root, position.segmentGroup, newSegmentGroup, queryParams, fragment);\n}\nfunction isMatrixParams(command) {\n  return typeof command === 'object' && command != null && !command.outlets && !command.segmentPath;\n}\n/**\n * Determines if a given command has an `outlets` map. When we encounter a command\n * with an outlets k/v map, we need to apply each outlet individually to the existing segment.\n */\nfunction isCommandWithOutlets(command) {\n  return typeof command === 'object' && command != null && command.outlets;\n}\nfunction tree(oldRoot, oldSegmentGroup, newSegmentGroup, queryParams, fragment) {\n  let qp = {};\n  if (queryParams) {\n    Object.entries(queryParams).forEach(([name, value]) => {\n      qp[name] = Array.isArray(value) ? value.map(v => `${v}`) : `${value}`;\n    });\n  }\n  let rootCandidate;\n  if (oldRoot === oldSegmentGroup) {\n    rootCandidate = newSegmentGroup;\n  } else {\n    rootCandidate = replaceSegment(oldRoot, oldSegmentGroup, newSegmentGroup);\n  }\n  const newRoot = createRoot(squashSegmentGroup(rootCandidate));\n  return new UrlTree(newRoot, qp, fragment);\n}\n/**\n * Replaces the `oldSegment` which is located in some child of the `current` with the `newSegment`.\n * This also has the effect of creating new `UrlSegmentGroup` copies to update references. This\n * shouldn't be necessary but the fallback logic for an invalid ActivatedRoute in the creation uses\n * the Router's current url tree. If we don't create new segment groups, we end up modifying that\n * value.\n */\nfunction replaceSegment(current, oldSegment, newSegment) {\n  const children = {};\n  Object.entries(current.children).forEach(([outletName, c]) => {\n    if (c === oldSegment) {\n      children[outletName] = newSegment;\n    } else {\n      children[outletName] = replaceSegment(c, oldSegment, newSegment);\n    }\n  });\n  return new UrlSegmentGroup(current.segments, children);\n}\nclass Navigation {\n  constructor(isAbsolute, numberOfDoubleDots, commands) {\n    this.isAbsolute = isAbsolute;\n    this.numberOfDoubleDots = numberOfDoubleDots;\n    this.commands = commands;\n    if (isAbsolute && commands.length > 0 && isMatrixParams(commands[0])) {\n      throw new ɵRuntimeError(4003 /* RuntimeErrorCode.ROOT_SEGMENT_MATRIX_PARAMS */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Root segment cannot have matrix parameters');\n    }\n    const cmdWithOutlet = commands.find(isCommandWithOutlets);\n    if (cmdWithOutlet && cmdWithOutlet !== last(commands)) {\n      throw new ɵRuntimeError(4004 /* RuntimeErrorCode.MISPLACED_OUTLETS_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) && '{outlets:{}} has to be the last command');\n    }\n  }\n  toRoot() {\n    return this.isAbsolute && this.commands.length === 1 && this.commands[0] == '/';\n  }\n}\n/** Transforms commands to a normalized `Navigation` */\nfunction computeNavigation(commands) {\n  if (typeof commands[0] === 'string' && commands.length === 1 && commands[0] === '/') {\n    return new Navigation(true, 0, commands);\n  }\n  let numberOfDoubleDots = 0;\n  let isAbsolute = false;\n  const res = commands.reduce((res, cmd, cmdIdx) => {\n    if (typeof cmd === 'object' && cmd != null) {\n      if (cmd.outlets) {\n        const outlets = {};\n        Object.entries(cmd.outlets).forEach(([name, commands]) => {\n          outlets[name] = typeof commands === 'string' ? commands.split('/') : commands;\n        });\n        return [...res, {\n          outlets\n        }];\n      }\n      if (cmd.segmentPath) {\n        return [...res, cmd.segmentPath];\n      }\n    }\n    if (!(typeof cmd === 'string')) {\n      return [...res, cmd];\n    }\n    if (cmdIdx === 0) {\n      cmd.split('/').forEach((urlPart, partIndex) => {\n        if (partIndex == 0 && urlPart === '.') {\n          // skip './a'\n        } else if (partIndex == 0 && urlPart === '') {\n          //  '/a'\n          isAbsolute = true;\n        } else if (urlPart === '..') {\n          //  '../a'\n          numberOfDoubleDots++;\n        } else if (urlPart != '') {\n          res.push(urlPart);\n        }\n      });\n      return res;\n    }\n    return [...res, cmd];\n  }, []);\n  return new Navigation(isAbsolute, numberOfDoubleDots, res);\n}\nclass Position {\n  constructor(segmentGroup, processChildren, index) {\n    this.segmentGroup = segmentGroup;\n    this.processChildren = processChildren;\n    this.index = index;\n  }\n}\nfunction findStartingPositionForTargetGroup(nav, root, target) {\n  if (nav.isAbsolute) {\n    return new Position(root, true, 0);\n  }\n  if (!target) {\n    // `NaN` is used only to maintain backwards compatibility with incorrectly mocked\n    // `ActivatedRouteSnapshot` in tests. In prior versions of this code, the position here was\n    // determined based on an internal property that was rarely mocked, resulting in `NaN`. In\n    // reality, this code path should _never_ be touched since `target` is not allowed to be falsey.\n    return new Position(root, false, NaN);\n  }\n  if (target.parent === null) {\n    return new Position(target, true, 0);\n  }\n  const modifier = isMatrixParams(nav.commands[0]) ? 0 : 1;\n  const index = target.segments.length - 1 + modifier;\n  return createPositionApplyingDoubleDots(target, index, nav.numberOfDoubleDots);\n}\nfunction createPositionApplyingDoubleDots(group, index, numberOfDoubleDots) {\n  let g = group;\n  let ci = index;\n  let dd = numberOfDoubleDots;\n  while (dd > ci) {\n    dd -= ci;\n    g = g.parent;\n    if (!g) {\n      throw new ɵRuntimeError(4005 /* RuntimeErrorCode.INVALID_DOUBLE_DOTS */, (typeof ngDevMode === 'undefined' || ngDevMode) && \"Invalid number of '../'\");\n    }\n    ci = g.segments.length;\n  }\n  return new Position(g, false, ci - dd);\n}\nfunction getOutlets(commands) {\n  if (isCommandWithOutlets(commands[0])) {\n    return commands[0].outlets;\n  }\n  return {\n    [PRIMARY_OUTLET]: commands\n  };\n}\nfunction updateSegmentGroup(segmentGroup, startIndex, commands) {\n  segmentGroup ??= new UrlSegmentGroup([], {});\n  if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n    return updateSegmentGroupChildren(segmentGroup, startIndex, commands);\n  }\n  const m = prefixedWith(segmentGroup, startIndex, commands);\n  const slicedCommands = commands.slice(m.commandIndex);\n  if (m.match && m.pathIndex < segmentGroup.segments.length) {\n    const g = new UrlSegmentGroup(segmentGroup.segments.slice(0, m.pathIndex), {});\n    g.children[PRIMARY_OUTLET] = new UrlSegmentGroup(segmentGroup.segments.slice(m.pathIndex), segmentGroup.children);\n    return updateSegmentGroupChildren(g, 0, slicedCommands);\n  } else if (m.match && slicedCommands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else if (m.match && !segmentGroup.hasChildren()) {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  } else if (m.match) {\n    return updateSegmentGroupChildren(segmentGroup, 0, slicedCommands);\n  } else {\n    return createNewSegmentGroup(segmentGroup, startIndex, commands);\n  }\n}\nfunction updateSegmentGroupChildren(segmentGroup, startIndex, commands) {\n  if (commands.length === 0) {\n    return new UrlSegmentGroup(segmentGroup.segments, {});\n  } else {\n    const outlets = getOutlets(commands);\n    const children = {};\n    // If the set of commands applies to anything other than the primary outlet and the child\n    // segment is an empty path primary segment on its own, we want to apply the commands to the\n    // empty child path rather than here. The outcome is that the empty primary child is effectively\n    // removed from the final output UrlTree. Imagine the following config:\n    //\n    // {path: '', children: [{path: '**', outlet: 'popup'}]}.\n    //\n    // Navigation to /(popup:a) will activate the child outlet correctly Given a follow-up\n    // navigation with commands\n    // ['/', {outlets: {'popup': 'b'}}], we _would not_ want to apply the outlet commands to the\n    // root segment because that would result in\n    // //(popup:a)(popup:b) since the outlet command got applied one level above where it appears in\n    // the `ActivatedRoute` rather than updating the existing one.\n    //\n    // Because empty paths do not appear in the URL segments and the fact that the segments used in\n    // the output `UrlTree` are squashed to eliminate these empty paths where possible\n    // https://github.com/angular/angular/blob/13f10de40e25c6900ca55bd83b36bd533dacfa9e/packages/router/src/url_tree.ts#L755\n    // it can be hard to determine what is the right thing to do when applying commands to a\n    // `UrlSegmentGroup` that is created from an \"unsquashed\"/expanded `ActivatedRoute` tree.\n    // This code effectively \"squashes\" empty path primary routes when they have no siblings on\n    // the same level of the tree.\n    if (Object.keys(outlets).some(o => o !== PRIMARY_OUTLET) && segmentGroup.children[PRIMARY_OUTLET] && segmentGroup.numberOfChildren === 1 && segmentGroup.children[PRIMARY_OUTLET].segments.length === 0) {\n      const childrenOfEmptyChild = updateSegmentGroupChildren(segmentGroup.children[PRIMARY_OUTLET], startIndex, commands);\n      return new UrlSegmentGroup(segmentGroup.segments, childrenOfEmptyChild.children);\n    }\n    Object.entries(outlets).forEach(([outlet, commands]) => {\n      if (typeof commands === 'string') {\n        commands = [commands];\n      }\n      if (commands !== null) {\n        children[outlet] = updateSegmentGroup(segmentGroup.children[outlet], startIndex, commands);\n      }\n    });\n    Object.entries(segmentGroup.children).forEach(([childOutlet, child]) => {\n      if (outlets[childOutlet] === undefined) {\n        children[childOutlet] = child;\n      }\n    });\n    return new UrlSegmentGroup(segmentGroup.segments, children);\n  }\n}\nfunction prefixedWith(segmentGroup, startIndex, commands) {\n  let currentCommandIndex = 0;\n  let currentPathIndex = startIndex;\n  const noMatch = {\n    match: false,\n    pathIndex: 0,\n    commandIndex: 0\n  };\n  while (currentPathIndex < segmentGroup.segments.length) {\n    if (currentCommandIndex >= commands.length) return noMatch;\n    const path = segmentGroup.segments[currentPathIndex];\n    const command = commands[currentCommandIndex];\n    // Do not try to consume command as part of the prefixing if it has outlets because it can\n    // contain outlets other than the one being processed. Consuming the outlets command would\n    // result in other outlets being ignored.\n    if (isCommandWithOutlets(command)) {\n      break;\n    }\n    const curr = `${command}`;\n    const next = currentCommandIndex < commands.length - 1 ? commands[currentCommandIndex + 1] : null;\n    if (currentPathIndex > 0 && curr === undefined) break;\n    if (curr && next && typeof next === 'object' && next.outlets === undefined) {\n      if (!compare(curr, next, path)) return noMatch;\n      currentCommandIndex += 2;\n    } else {\n      if (!compare(curr, {}, path)) return noMatch;\n      currentCommandIndex++;\n    }\n    currentPathIndex++;\n  }\n  return {\n    match: true,\n    pathIndex: currentPathIndex,\n    commandIndex: currentCommandIndex\n  };\n}\nfunction createNewSegmentGroup(segmentGroup, startIndex, commands) {\n  const paths = segmentGroup.segments.slice(0, startIndex);\n  let i = 0;\n  while (i < commands.length) {\n    const command = commands[i];\n    if (isCommandWithOutlets(command)) {\n      const children = createNewSegmentChildren(command.outlets);\n      return new UrlSegmentGroup(paths, children);\n    }\n    // if we start with an object literal, we need to reuse the path part from the segment\n    if (i === 0 && isMatrixParams(commands[0])) {\n      const p = segmentGroup.segments[startIndex];\n      paths.push(new UrlSegment(p.path, stringify(commands[0])));\n      i++;\n      continue;\n    }\n    const curr = isCommandWithOutlets(command) ? command.outlets[PRIMARY_OUTLET] : `${command}`;\n    const next = i < commands.length - 1 ? commands[i + 1] : null;\n    if (curr && next && isMatrixParams(next)) {\n      paths.push(new UrlSegment(curr, stringify(next)));\n      i += 2;\n    } else {\n      paths.push(new UrlSegment(curr, {}));\n      i++;\n    }\n  }\n  return new UrlSegmentGroup(paths, {});\n}\nfunction createNewSegmentChildren(outlets) {\n  const children = {};\n  Object.entries(outlets).forEach(([outlet, commands]) => {\n    if (typeof commands === 'string') {\n      commands = [commands];\n    }\n    if (commands !== null) {\n      children[outlet] = createNewSegmentGroup(new UrlSegmentGroup([], {}), 0, commands);\n    }\n  });\n  return children;\n}\nfunction stringify(params) {\n  const res = {};\n  Object.entries(params).forEach(([k, v]) => res[k] = `${v}`);\n  return res;\n}\nfunction compare(path, params, segment) {\n  return path == segment.path && shallowEqual(params, segment.parameters);\n}\nconst IMPERATIVE_NAVIGATION = 'imperative';\n/**\n * Identifies the type of a router event.\n *\n * @publicApi\n */\nvar EventType = /*#__PURE__*/function (EventType) {\n  EventType[EventType[\"NavigationStart\"] = 0] = \"NavigationStart\";\n  EventType[EventType[\"NavigationEnd\"] = 1] = \"NavigationEnd\";\n  EventType[EventType[\"NavigationCancel\"] = 2] = \"NavigationCancel\";\n  EventType[EventType[\"NavigationError\"] = 3] = \"NavigationError\";\n  EventType[EventType[\"RoutesRecognized\"] = 4] = \"RoutesRecognized\";\n  EventType[EventType[\"ResolveStart\"] = 5] = \"ResolveStart\";\n  EventType[EventType[\"ResolveEnd\"] = 6] = \"ResolveEnd\";\n  EventType[EventType[\"GuardsCheckStart\"] = 7] = \"GuardsCheckStart\";\n  EventType[EventType[\"GuardsCheckEnd\"] = 8] = \"GuardsCheckEnd\";\n  EventType[EventType[\"RouteConfigLoadStart\"] = 9] = \"RouteConfigLoadStart\";\n  EventType[EventType[\"RouteConfigLoadEnd\"] = 10] = \"RouteConfigLoadEnd\";\n  EventType[EventType[\"ChildActivationStart\"] = 11] = \"ChildActivationStart\";\n  EventType[EventType[\"ChildActivationEnd\"] = 12] = \"ChildActivationEnd\";\n  EventType[EventType[\"ActivationStart\"] = 13] = \"ActivationStart\";\n  EventType[EventType[\"ActivationEnd\"] = 14] = \"ActivationEnd\";\n  EventType[EventType[\"Scroll\"] = 15] = \"Scroll\";\n  EventType[EventType[\"NavigationSkipped\"] = 16] = \"NavigationSkipped\";\n  return EventType;\n}(EventType || {});\n/**\n * Base for events the router goes through, as opposed to events tied to a specific\n * route. Fired one time for any given navigation.\n *\n * The following code shows how a class subscribes to router events.\n *\n * ```ts\n * import {Event, RouterEvent, Router} from '@angular/router';\n *\n * class MyService {\n *   constructor(public router: Router) {\n *     router.events.pipe(\n *        filter((e: Event | RouterEvent): e is RouterEvent => e instanceof RouterEvent)\n *     ).subscribe((e: RouterEvent) => {\n *       // Do something\n *     });\n *   }\n * }\n * ```\n *\n * @see {@link Event}\n * @see [Router events summary](guide/router-reference#router-events)\n * @publicApi\n */\nclass RouterEvent {\n  constructor( /** A unique ID that the router assigns to every router navigation. */\n  id, /** The URL that is the destination for this navigation. */\n  url) {\n    this.id = id;\n    this.url = url;\n  }\n}\n/**\n * An event triggered when a navigation starts.\n *\n * @publicApi\n */\nclass NavigationStart extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  navigationTrigger = 'imperative', /** @docsNotRequired */\n  restoredState = null) {\n    super(id, url);\n    this.type = EventType.NavigationStart;\n    this.navigationTrigger = navigationTrigger;\n    this.restoredState = restoredState;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationStart(id: ${this.id}, url: '${this.url}')`;\n  }\n}\n/**\n * An event triggered when a navigation ends successfully.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationCancel}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationEnd extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.type = EventType.NavigationEnd;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}')`;\n  }\n}\n/**\n * A code for the `NavigationCancel` event of the `Router` to indicate the\n * reason a navigation failed.\n *\n * @publicApi\n */\nvar NavigationCancellationCode = /*#__PURE__*/function (NavigationCancellationCode) {\n  /**\n   * A navigation failed because a guard returned a `UrlTree` to redirect.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"Redirect\"] = 0] = \"Redirect\";\n  /**\n   * A navigation failed because a more recent navigation started.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"SupersededByNewNavigation\"] = 1] = \"SupersededByNewNavigation\";\n  /**\n   * A navigation failed because one of the resolvers completed without emitting a value.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"NoDataFromResolver\"] = 2] = \"NoDataFromResolver\";\n  /**\n   * A navigation failed because a guard returned `false`.\n   */\n  NavigationCancellationCode[NavigationCancellationCode[\"GuardRejected\"] = 3] = \"GuardRejected\";\n  return NavigationCancellationCode;\n}(NavigationCancellationCode || {});\n/**\n * A code for the `NavigationSkipped` event of the `Router` to indicate the\n * reason a navigation was skipped.\n *\n * @publicApi\n */\nvar NavigationSkippedCode = /*#__PURE__*/function (NavigationSkippedCode) {\n  /**\n   * A navigation was skipped because the navigation URL was the same as the current Router URL.\n   */\n  NavigationSkippedCode[NavigationSkippedCode[\"IgnoredSameUrlNavigation\"] = 0] = \"IgnoredSameUrlNavigation\";\n  /**\n   * A navigation was skipped because the configured `UrlHandlingStrategy` return `false` for both\n   * the current Router URL and the target of the navigation.\n   *\n   * @see {@link UrlHandlingStrategy}\n   */\n  NavigationSkippedCode[NavigationSkippedCode[\"IgnoredByUrlHandlingStrategy\"] = 1] = \"IgnoredByUrlHandlingStrategy\";\n  return NavigationSkippedCode;\n}(NavigationSkippedCode || {});\n/**\n * An event triggered when a navigation is canceled, directly or indirectly.\n * This can happen for several reasons including when a route guard\n * returns `false` or initiates a redirect by returning a `UrlTree`.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationError}\n *\n * @publicApi\n */\nclass NavigationCancel extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url,\n  /**\n   * A description of why the navigation was cancelled. For debug purposes only. Use `code`\n   * instead for a stable cancellation reason that can be used in production.\n   */\n  reason,\n  /**\n   * A code to indicate why the navigation was canceled. This cancellation code is stable for\n   * the reason and can be relied on whereas the `reason` string could change and should not be\n   * used in production.\n   */\n  code) {\n    super(id, url);\n    this.reason = reason;\n    this.code = code;\n    this.type = EventType.NavigationCancel;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationCancel(id: ${this.id}, url: '${this.url}')`;\n  }\n}\n/**\n * An event triggered when a navigation is skipped.\n * This can happen for a couple reasons including onSameUrlHandling\n * is set to `ignore` and the navigation URL is not different than the\n * current state.\n *\n * @publicApi\n */\nclass NavigationSkipped extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url,\n  /**\n   * A description of why the navigation was skipped. For debug purposes only. Use `code`\n   * instead for a stable skipped reason that can be used in production.\n   */\n  reason,\n  /**\n   * A code to indicate why the navigation was skipped. This code is stable for\n   * the reason and can be relied on whereas the `reason` string could change and should not be\n   * used in production.\n   */\n  code) {\n    super(id, url);\n    this.reason = reason;\n    this.code = code;\n    this.type = EventType.NavigationSkipped;\n  }\n}\n/**\n * An event triggered when a navigation fails due to an unexpected error.\n *\n * @see {@link NavigationStart}\n * @see {@link NavigationEnd}\n * @see {@link NavigationCancel}\n *\n * @publicApi\n */\nclass NavigationError extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  error,\n  /**\n   * The target of the navigation when the error occurred.\n   *\n   * Note that this can be `undefined` because an error could have occurred before the\n   * `RouterStateSnapshot` was created for the navigation.\n   */\n  target) {\n    super(id, url);\n    this.error = error;\n    this.target = target;\n    this.type = EventType.NavigationError;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `NavigationError(id: ${this.id}, url: '${this.url}', error: ${this.error})`;\n  }\n}\n/**\n * An event triggered when routes are recognized.\n *\n * @publicApi\n */\nclass RoutesRecognized extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.RoutesRecognized;\n  }\n  /** @docsNotRequired */\n  toString() {\n    return `RoutesRecognized(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the start of the Guard phase of routing.\n *\n * @see {@link GuardsCheckEnd}\n *\n * @publicApi\n */\nclass GuardsCheckStart extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.GuardsCheckStart;\n  }\n  toString() {\n    return `GuardsCheckStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the end of the Guard phase of routing.\n *\n * @see {@link GuardsCheckStart}\n *\n * @publicApi\n */\nclass GuardsCheckEnd extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state, /** @docsNotRequired */\n  shouldActivate) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.shouldActivate = shouldActivate;\n    this.type = EventType.GuardsCheckEnd;\n  }\n  toString() {\n    return `GuardsCheckEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state}, shouldActivate: ${this.shouldActivate})`;\n  }\n}\n/**\n * An event triggered at the start of the Resolve phase of routing.\n *\n * Runs in the \"resolve\" phase whether or not there is anything to resolve.\n * In future, may change to only run when there are things to be resolved.\n *\n * @see {@link ResolveEnd}\n *\n * @publicApi\n */\nclass ResolveStart extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.ResolveStart;\n  }\n  toString() {\n    return `ResolveStart(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered at the end of the Resolve phase of routing.\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ResolveEnd extends RouterEvent {\n  constructor( /** @docsNotRequired */\n  id, /** @docsNotRequired */\n  url, /** @docsNotRequired */\n  urlAfterRedirects, /** @docsNotRequired */\n  state) {\n    super(id, url);\n    this.urlAfterRedirects = urlAfterRedirects;\n    this.state = state;\n    this.type = EventType.ResolveEnd;\n  }\n  toString() {\n    return `ResolveEnd(id: ${this.id}, url: '${this.url}', urlAfterRedirects: '${this.urlAfterRedirects}', state: ${this.state})`;\n  }\n}\n/**\n * An event triggered before lazy loading a route configuration.\n *\n * @see {@link RouteConfigLoadEnd}\n *\n * @publicApi\n */\nclass RouteConfigLoadStart {\n  constructor( /** @docsNotRequired */\n  route) {\n    this.route = route;\n    this.type = EventType.RouteConfigLoadStart;\n  }\n  toString() {\n    return `RouteConfigLoadStart(path: ${this.route.path})`;\n  }\n}\n/**\n * An event triggered when a route has been lazy loaded.\n *\n * @see {@link RouteConfigLoadStart}\n *\n * @publicApi\n */\nclass RouteConfigLoadEnd {\n  constructor( /** @docsNotRequired */\n  route) {\n    this.route = route;\n    this.type = EventType.RouteConfigLoadEnd;\n  }\n  toString() {\n    return `RouteConfigLoadEnd(path: ${this.route.path})`;\n  }\n}\n/**\n * An event triggered at the start of the child-activation\n * part of the Resolve phase of routing.\n * @see {@link ChildActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ChildActivationStart {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ChildActivationStart;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ChildActivationStart(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the end of the child-activation part\n * of the Resolve phase of routing.\n * @see {@link ChildActivationStart}\n * @see {@link ResolveStart}\n * @publicApi\n */\nclass ChildActivationEnd {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ChildActivationEnd;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ChildActivationEnd(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the start of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationEnd}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationStart {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ActivationStart;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ActivationStart(path: '${path}')`;\n  }\n}\n/**\n * An event triggered at the end of the activation part\n * of the Resolve phase of routing.\n * @see {@link ActivationStart}\n * @see {@link ResolveStart}\n *\n * @publicApi\n */\nclass ActivationEnd {\n  constructor( /** @docsNotRequired */\n  snapshot) {\n    this.snapshot = snapshot;\n    this.type = EventType.ActivationEnd;\n  }\n  toString() {\n    const path = this.snapshot.routeConfig && this.snapshot.routeConfig.path || '';\n    return `ActivationEnd(path: '${path}')`;\n  }\n}\n/**\n * An event triggered by scrolling.\n *\n * @publicApi\n */\nclass Scroll {\n  constructor( /** @docsNotRequired */\n  routerEvent, /** @docsNotRequired */\n  position, /** @docsNotRequired */\n  anchor) {\n    this.routerEvent = routerEvent;\n    this.position = position;\n    this.anchor = anchor;\n    this.type = EventType.Scroll;\n  }\n  toString() {\n    const pos = this.position ? `${this.position[0]}, ${this.position[1]}` : null;\n    return `Scroll(anchor: '${this.anchor}', position: '${pos}')`;\n  }\n}\nclass BeforeActivateRoutes {}\nclass RedirectRequest {\n  constructor(url) {\n    this.url = url;\n  }\n}\nfunction stringifyEvent(routerEvent) {\n  switch (routerEvent.type) {\n    case EventType.ActivationEnd:\n      return `ActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ActivationStart:\n      return `ActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationEnd:\n      return `ChildActivationEnd(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.ChildActivationStart:\n      return `ChildActivationStart(path: '${routerEvent.snapshot.routeConfig?.path || ''}')`;\n    case EventType.GuardsCheckEnd:\n      return `GuardsCheckEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state}, shouldActivate: ${routerEvent.shouldActivate})`;\n    case EventType.GuardsCheckStart:\n      return `GuardsCheckStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.NavigationCancel:\n      return `NavigationCancel(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.NavigationSkipped:\n      return `NavigationSkipped(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.NavigationEnd:\n      return `NavigationEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}')`;\n    case EventType.NavigationError:\n      return `NavigationError(id: ${routerEvent.id}, url: '${routerEvent.url}', error: ${routerEvent.error})`;\n    case EventType.NavigationStart:\n      return `NavigationStart(id: ${routerEvent.id}, url: '${routerEvent.url}')`;\n    case EventType.ResolveEnd:\n      return `ResolveEnd(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.ResolveStart:\n      return `ResolveStart(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.RouteConfigLoadEnd:\n      return `RouteConfigLoadEnd(path: ${routerEvent.route.path})`;\n    case EventType.RouteConfigLoadStart:\n      return `RouteConfigLoadStart(path: ${routerEvent.route.path})`;\n    case EventType.RoutesRecognized:\n      return `RoutesRecognized(id: ${routerEvent.id}, url: '${routerEvent.url}', urlAfterRedirects: '${routerEvent.urlAfterRedirects}', state: ${routerEvent.state})`;\n    case EventType.Scroll:\n      const pos = routerEvent.position ? `${routerEvent.position[0]}, ${routerEvent.position[1]}` : null;\n      return `Scroll(anchor: '${routerEvent.anchor}', position: '${pos}')`;\n  }\n}\n\n/**\n * Store contextual information about a `RouterOutlet`\n *\n * @publicApi\n */\nclass OutletContext {\n  constructor() {\n    this.outlet = null;\n    this.route = null;\n    this.injector = null;\n    this.children = new ChildrenOutletContexts();\n    this.attachRef = null;\n  }\n}\n/**\n * Store contextual information about the children (= nested) `RouterOutlet`\n *\n * @publicApi\n */\nlet ChildrenOutletContexts = /*#__PURE__*/(() => {\n  class ChildrenOutletContexts {\n    constructor() {\n      // contexts for child outlets, by name.\n      this.contexts = new Map();\n    }\n    /** Called when a `RouterOutlet` directive is instantiated */\n    onChildOutletCreated(childName, outlet) {\n      const context = this.getOrCreateContext(childName);\n      context.outlet = outlet;\n      this.contexts.set(childName, context);\n    }\n    /**\n     * Called when a `RouterOutlet` directive is destroyed.\n     * We need to keep the context as the outlet could be destroyed inside a NgIf and might be\n     * re-created later.\n     */\n    onChildOutletDestroyed(childName) {\n      const context = this.getContext(childName);\n      if (context) {\n        context.outlet = null;\n        context.attachRef = null;\n      }\n    }\n    /**\n     * Called when the corresponding route is deactivated during navigation.\n     * Because the component get destroyed, all children outlet are destroyed.\n     */\n    onOutletDeactivated() {\n      const contexts = this.contexts;\n      this.contexts = new Map();\n      return contexts;\n    }\n    onOutletReAttached(contexts) {\n      this.contexts = contexts;\n    }\n    getOrCreateContext(childName) {\n      let context = this.getContext(childName);\n      if (!context) {\n        context = new OutletContext();\n        this.contexts.set(childName, context);\n      }\n      return context;\n    }\n    getContext(childName) {\n      return this.contexts.get(childName) || null;\n    }\n    static {\n      this.ɵfac = function ChildrenOutletContexts_Factory(t) {\n        return new (t || ChildrenOutletContexts)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ChildrenOutletContexts,\n        factory: ChildrenOutletContexts.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ChildrenOutletContexts;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass Tree {\n  constructor(root) {\n    this._root = root;\n  }\n  get root() {\n    return this._root.value;\n  }\n  /**\n   * @internal\n   */\n  parent(t) {\n    const p = this.pathFromRoot(t);\n    return p.length > 1 ? p[p.length - 2] : null;\n  }\n  /**\n   * @internal\n   */\n  children(t) {\n    const n = findNode(t, this._root);\n    return n ? n.children.map(t => t.value) : [];\n  }\n  /**\n   * @internal\n   */\n  firstChild(t) {\n    const n = findNode(t, this._root);\n    return n && n.children.length > 0 ? n.children[0].value : null;\n  }\n  /**\n   * @internal\n   */\n  siblings(t) {\n    const p = findPath(t, this._root);\n    if (p.length < 2) return [];\n    const c = p[p.length - 2].children.map(c => c.value);\n    return c.filter(cc => cc !== t);\n  }\n  /**\n   * @internal\n   */\n  pathFromRoot(t) {\n    return findPath(t, this._root).map(s => s.value);\n  }\n}\n// DFS for the node matching the value\nfunction findNode(value, node) {\n  if (value === node.value) return node;\n  for (const child of node.children) {\n    const node = findNode(value, child);\n    if (node) return node;\n  }\n  return null;\n}\n// Return the path to the node with the given value using DFS\nfunction findPath(value, node) {\n  if (value === node.value) return [node];\n  for (const child of node.children) {\n    const path = findPath(value, child);\n    if (path.length) {\n      path.unshift(node);\n      return path;\n    }\n  }\n  return [];\n}\nclass TreeNode {\n  constructor(value, children) {\n    this.value = value;\n    this.children = children;\n  }\n  toString() {\n    return `TreeNode(${this.value})`;\n  }\n}\n// Return the list of T indexed by outlet name\nfunction nodeChildrenAsMap(node) {\n  const map = {};\n  if (node) {\n    node.children.forEach(child => map[child.value.outlet] = child);\n  }\n  return map;\n}\n\n/**\n * Represents the state of the router as a tree of activated routes.\n *\n * @usageNotes\n *\n * Every node in the route tree is an `ActivatedRoute` instance\n * that knows about the \"consumed\" URL segments, the extracted parameters,\n * and the resolved data.\n * Use the `ActivatedRoute` properties to traverse the tree from any node.\n *\n * The following fragment shows how a component gets the root node\n * of the current state to establish its own route tree:\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const root: ActivatedRoute = state.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @see {@link ActivatedRoute}\n * @see [Getting route information](guide/router#getting-route-information)\n *\n * @publicApi\n */\nclass RouterState extends Tree {\n  /** @internal */\n  constructor(root, /** The current snapshot of the router state */\n  snapshot) {\n    super(root);\n    this.snapshot = snapshot;\n    setRouterState(this, root);\n  }\n  toString() {\n    return this.snapshot.toString();\n  }\n}\nfunction createEmptyState(rootComponent) {\n  const snapshot = createEmptyStateSnapshot(rootComponent);\n  const emptyUrl = new BehaviorSubject([new UrlSegment('', {})]);\n  const emptyParams = new BehaviorSubject({});\n  const emptyData = new BehaviorSubject({});\n  const emptyQueryParams = new BehaviorSubject({});\n  const fragment = new BehaviorSubject('');\n  const activated = new ActivatedRoute(emptyUrl, emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, snapshot.root);\n  activated.snapshot = snapshot.root;\n  return new RouterState(new TreeNode(activated, []), snapshot);\n}\nfunction createEmptyStateSnapshot(rootComponent) {\n  const emptyParams = {};\n  const emptyData = {};\n  const emptyQueryParams = {};\n  const fragment = '';\n  const activated = new ActivatedRouteSnapshot([], emptyParams, emptyQueryParams, fragment, emptyData, PRIMARY_OUTLET, rootComponent, null, {});\n  return new RouterStateSnapshot('', new TreeNode(activated, []));\n}\n/**\n * Provides access to information about a route associated with a component\n * that is loaded in an outlet.\n * Use to traverse the `RouterState` tree and extract information from nodes.\n *\n * The following example shows how to construct a component using information from a\n * currently activated route.\n *\n * Note: the observables in this class only emit when the current and previous values differ based\n * on shallow equality. For example, changing deeply nested properties in resolved `data` will not\n * cause the `ActivatedRoute.data` `Observable` to emit a new value.\n *\n * {@example router/activated-route/module.ts region=\"activated-route\"\n *     header=\"activated-route.component.ts\"}\n *\n * @see [Getting route information](guide/router#getting-route-information)\n *\n * @publicApi\n */\nclass ActivatedRoute {\n  /** @internal */\n  constructor( /** @internal */\n  urlSubject, /** @internal */\n  paramsSubject, /** @internal */\n  queryParamsSubject, /** @internal */\n  fragmentSubject, /** @internal */\n  dataSubject, /** The outlet name of the route, a constant. */\n  outlet, /** The component of the route, a constant. */\n  component, futureSnapshot) {\n    this.urlSubject = urlSubject;\n    this.paramsSubject = paramsSubject;\n    this.queryParamsSubject = queryParamsSubject;\n    this.fragmentSubject = fragmentSubject;\n    this.dataSubject = dataSubject;\n    this.outlet = outlet;\n    this.component = component;\n    this._futureSnapshot = futureSnapshot;\n    this.title = this.dataSubject?.pipe(map(d => d[RouteTitleKey])) ?? of(undefined);\n    // TODO(atscott): Verify that these can be changed to `.asObservable()` with TGP.\n    this.url = urlSubject;\n    this.params = paramsSubject;\n    this.queryParams = queryParamsSubject;\n    this.fragment = fragmentSubject;\n    this.data = dataSubject;\n  }\n  /** The configuration used to match this route. */\n  get routeConfig() {\n    return this._futureSnapshot.routeConfig;\n  }\n  /** The root of the router state. */\n  get root() {\n    return this._routerState.root;\n  }\n  /** The parent of this route in the router state tree. */\n  get parent() {\n    return this._routerState.parent(this);\n  }\n  /** The first child of this route in the router state tree. */\n  get firstChild() {\n    return this._routerState.firstChild(this);\n  }\n  /** The children of this route in the router state tree. */\n  get children() {\n    return this._routerState.children(this);\n  }\n  /** The path from the root of the router state tree to this route. */\n  get pathFromRoot() {\n    return this._routerState.pathFromRoot(this);\n  }\n  /**\n   * An Observable that contains a map of the required and optional parameters\n   * specific to the route.\n   * The map supports retrieving single and multiple values from the same parameter.\n   */\n  get paramMap() {\n    this._paramMap ??= this.params.pipe(map(p => convertToParamMap(p)));\n    return this._paramMap;\n  }\n  /**\n   * An Observable that contains a map of the query parameters available to all routes.\n   * The map supports retrieving single and multiple values from the query parameter.\n   */\n  get queryParamMap() {\n    this._queryParamMap ??= this.queryParams.pipe(map(p => convertToParamMap(p)));\n    return this._queryParamMap;\n  }\n  toString() {\n    return this.snapshot ? this.snapshot.toString() : `Future(${this._futureSnapshot})`;\n  }\n}\n/**\n * Returns the inherited params, data, and resolve for a given route.\n *\n * By default, we do not inherit parent data unless the current route is path-less or the parent\n * route is component-less.\n */\nfunction getInherited(route, parent, paramsInheritanceStrategy = 'emptyOnly') {\n  let inherited;\n  const {\n    routeConfig\n  } = route;\n  if (parent !== null && (paramsInheritanceStrategy === 'always' ||\n  // inherit parent data if route is empty path\n  routeConfig?.path === '' ||\n  // inherit parent data if parent was componentless\n  !parent.component && !parent.routeConfig?.loadComponent)) {\n    inherited = {\n      params: {\n        ...parent.params,\n        ...route.params\n      },\n      data: {\n        ...parent.data,\n        ...route.data\n      },\n      resolve: {\n        // Snapshots are created with data inherited from parent and guards (i.e. canActivate) can\n        // change data because it's not frozen...\n        // This first line could be deleted chose to break/disallow mutating the `data` object in\n        // guards.\n        // Note that data from parents still override this mutated data so anyone relying on this\n        // might be surprised that it doesn't work if parent data is inherited but otherwise does.\n        ...route.data,\n        // Ensure inherited resolved data overrides inherited static data\n        ...parent.data,\n        // static data from the current route overrides any inherited data\n        ...routeConfig?.data,\n        // resolved data from current route overrides everything\n        ...route._resolvedData\n      }\n    };\n  } else {\n    inherited = {\n      params: {\n        ...route.params\n      },\n      data: {\n        ...route.data\n      },\n      resolve: {\n        ...route.data,\n        ...(route._resolvedData ?? {})\n      }\n    };\n  }\n  if (routeConfig && hasStaticTitle(routeConfig)) {\n    inherited.resolve[RouteTitleKey] = routeConfig.title;\n  }\n  return inherited;\n}\n/**\n * @description\n *\n * Contains the information about a route associated with a component loaded in an\n * outlet at a particular moment in time. ActivatedRouteSnapshot can also be used to\n * traverse the router state tree.\n *\n * The following example initializes a component with route information extracted\n * from the snapshot of the root node at the time of creation.\n *\n * ```\n * @Component({templateUrl:'./my-component.html'})\n * class MyComponent {\n *   constructor(route: ActivatedRoute) {\n *     const id: string = route.snapshot.params.id;\n *     const url: string = route.snapshot.url.join('');\n *     const user = route.snapshot.data.user;\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass ActivatedRouteSnapshot {\n  /** The resolved route title */\n  get title() {\n    // Note: This _must_ be a getter because the data is mutated in the resolvers. Title will not be\n    // available at the time of class instantiation.\n    return this.data?.[RouteTitleKey];\n  }\n  /** @internal */\n  constructor( /** The URL segments matched by this route */\n  url,\n  /**\n   *  The matrix parameters scoped to this route.\n   *\n   *  You can compute all params (or data) in the router state or to get params outside\n   *  of an activated component by traversing the `RouterState` tree as in the following\n   *  example:\n   *  ```\n   *  collectRouteParams(router: Router) {\n   *    let params = {};\n   *    let stack: ActivatedRouteSnapshot[] = [router.routerState.snapshot.root];\n   *    while (stack.length > 0) {\n   *      const route = stack.pop()!;\n   *      params = {...params, ...route.params};\n   *      stack.push(...route.children);\n   *    }\n   *    return params;\n   *  }\n   *  ```\n   */\n  params, /** The query parameters shared by all the routes */\n  queryParams, /** The URL fragment shared by all the routes */\n  fragment, /** The static and resolved data of this route */\n  data, /** The outlet name of the route */\n  outlet, /** The component of the route */\n  component, routeConfig, resolve) {\n    this.url = url;\n    this.params = params;\n    this.queryParams = queryParams;\n    this.fragment = fragment;\n    this.data = data;\n    this.outlet = outlet;\n    this.component = component;\n    this.routeConfig = routeConfig;\n    this._resolve = resolve;\n  }\n  /** The root of the router state */\n  get root() {\n    return this._routerState.root;\n  }\n  /** The parent of this route in the router state tree */\n  get parent() {\n    return this._routerState.parent(this);\n  }\n  /** The first child of this route in the router state tree */\n  get firstChild() {\n    return this._routerState.firstChild(this);\n  }\n  /** The children of this route in the router state tree */\n  get children() {\n    return this._routerState.children(this);\n  }\n  /** The path from the root of the router state tree to this route */\n  get pathFromRoot() {\n    return this._routerState.pathFromRoot(this);\n  }\n  get paramMap() {\n    this._paramMap ??= convertToParamMap(this.params);\n    return this._paramMap;\n  }\n  get queryParamMap() {\n    this._queryParamMap ??= convertToParamMap(this.queryParams);\n    return this._queryParamMap;\n  }\n  toString() {\n    const url = this.url.map(segment => segment.toString()).join('/');\n    const matched = this.routeConfig ? this.routeConfig.path : '';\n    return `Route(url:'${url}', path:'${matched}')`;\n  }\n}\n/**\n * @description\n *\n * Represents the state of the router at a moment in time.\n *\n * This is a tree of activated route snapshots. Every node in this tree knows about\n * the \"consumed\" URL segments, the extracted parameters, and the resolved data.\n *\n * The following example shows how a component is initialized with information\n * from the snapshot of the root node's state at the time of creation.\n *\n * ```\n * @Component({templateUrl:'template.html'})\n * class MyComponent {\n *   constructor(router: Router) {\n *     const state: RouterState = router.routerState;\n *     const snapshot: RouterStateSnapshot = state.snapshot;\n *     const root: ActivatedRouteSnapshot = snapshot.root;\n *     const child = root.firstChild;\n *     const id: Observable<string> = child.params.map(p => p.id);\n *     //...\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nclass RouterStateSnapshot extends Tree {\n  /** @internal */\n  constructor( /** The url from which this snapshot was created */\n  url, root) {\n    super(root);\n    this.url = url;\n    setRouterState(this, root);\n  }\n  toString() {\n    return serializeNode(this._root);\n  }\n}\nfunction setRouterState(state, node) {\n  node.value._routerState = state;\n  node.children.forEach(c => setRouterState(state, c));\n}\nfunction serializeNode(node) {\n  const c = node.children.length > 0 ? ` { ${node.children.map(serializeNode).join(', ')} } ` : '';\n  return `${node.value}${c}`;\n}\n/**\n * The expectation is that the activate route is created with the right set of parameters.\n * So we push new values into the observables only when they are not the initial values.\n * And we detect that by checking if the snapshot field is set.\n */\nfunction advanceActivatedRoute(route) {\n  if (route.snapshot) {\n    const currentSnapshot = route.snapshot;\n    const nextSnapshot = route._futureSnapshot;\n    route.snapshot = nextSnapshot;\n    if (!shallowEqual(currentSnapshot.queryParams, nextSnapshot.queryParams)) {\n      route.queryParamsSubject.next(nextSnapshot.queryParams);\n    }\n    if (currentSnapshot.fragment !== nextSnapshot.fragment) {\n      route.fragmentSubject.next(nextSnapshot.fragment);\n    }\n    if (!shallowEqual(currentSnapshot.params, nextSnapshot.params)) {\n      route.paramsSubject.next(nextSnapshot.params);\n    }\n    if (!shallowEqualArrays(currentSnapshot.url, nextSnapshot.url)) {\n      route.urlSubject.next(nextSnapshot.url);\n    }\n    if (!shallowEqual(currentSnapshot.data, nextSnapshot.data)) {\n      route.dataSubject.next(nextSnapshot.data);\n    }\n  } else {\n    route.snapshot = route._futureSnapshot;\n    // this is for resolved data\n    route.dataSubject.next(route._futureSnapshot.data);\n  }\n}\nfunction equalParamsAndUrlSegments(a, b) {\n  const equalUrlParams = shallowEqual(a.params, b.params) && equalSegments(a.url, b.url);\n  const parentsMismatch = !a.parent !== !b.parent;\n  return equalUrlParams && !parentsMismatch && (!a.parent || equalParamsAndUrlSegments(a.parent, b.parent));\n}\nfunction hasStaticTitle(config) {\n  return typeof config.title === 'string' || config.title === null;\n}\n\n/**\n * @description\n *\n * Acts as a placeholder that Angular dynamically fills based on the current router state.\n *\n * Each outlet can have a unique name, determined by the optional `name` attribute.\n * The name cannot be set or changed dynamically. If not set, default value is \"primary\".\n *\n * ```\n * <router-outlet></router-outlet>\n * <router-outlet name='left'></router-outlet>\n * <router-outlet name='right'></router-outlet>\n * ```\n *\n * Named outlets can be the targets of secondary routes.\n * The `Route` object for a secondary route has an `outlet` property to identify the target outlet:\n *\n * `{path: <base-path>, component: <component>, outlet: <target_outlet_name>}`\n *\n * Using named outlets and secondary routes, you can target multiple outlets in\n * the same `RouterLink` directive.\n *\n * The router keeps track of separate branches in a navigation tree for each named outlet and\n * generates a representation of that tree in the URL.\n * The URL for a secondary route uses the following syntax to specify both the primary and secondary\n * routes at the same time:\n *\n * `http://base-path/primary-route-path(outlet-name:route-path)`\n *\n * A router outlet emits an activate event when a new component is instantiated,\n * deactivate event when a component is destroyed.\n * An attached event emits when the `RouteReuseStrategy` instructs the outlet to reattach the\n * subtree, and the detached event emits when the `RouteReuseStrategy` instructs the outlet to\n * detach the subtree.\n *\n * ```\n * <router-outlet\n *   (activate)='onActivate($event)'\n *   (deactivate)='onDeactivate($event)'\n *   (attach)='onAttach($event)'\n *   (detach)='onDetach($event)'></router-outlet>\n * ```\n *\n * @see [Routing tutorial](guide/router-tutorial-toh#named-outlets \"Example of a named\n * outlet and secondary route configuration\").\n * @see {@link RouterLink}\n * @see {@link Route}\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterOutlet = /*#__PURE__*/(() => {\n  class RouterOutlet {\n    constructor() {\n      this.activated = null;\n      this._activatedRoute = null;\n      /**\n       * The name of the outlet\n       *\n       * @see [named outlets](guide/router-tutorial-toh#displaying-multiple-routes-in-named-outlets)\n       */\n      this.name = PRIMARY_OUTLET;\n      this.activateEvents = new EventEmitter();\n      this.deactivateEvents = new EventEmitter();\n      /**\n       * Emits an attached component instance when the `RouteReuseStrategy` instructs to re-attach a\n       * previously detached subtree.\n       **/\n      this.attachEvents = new EventEmitter();\n      /**\n       * Emits a detached component instance when the `RouteReuseStrategy` instructs to detach the\n       * subtree.\n       */\n      this.detachEvents = new EventEmitter();\n      this.parentContexts = inject(ChildrenOutletContexts);\n      this.location = inject(ViewContainerRef);\n      this.changeDetector = inject(ChangeDetectorRef);\n      this.environmentInjector = inject(EnvironmentInjector);\n      this.inputBinder = inject(INPUT_BINDER, {\n        optional: true\n      });\n      /** @nodoc */\n      this.supportsBindingToComponentInputs = true;\n    }\n    /** @internal */\n    get activatedComponentRef() {\n      return this.activated;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (changes['name']) {\n        const {\n          firstChange,\n          previousValue\n        } = changes['name'];\n        if (firstChange) {\n          // The first change is handled by ngOnInit. Because ngOnChanges doesn't get called when no\n          // input is set at all, we need to centrally handle the first change there.\n          return;\n        }\n        // unregister with the old name\n        if (this.isTrackedInParentContexts(previousValue)) {\n          this.deactivate();\n          this.parentContexts.onChildOutletDestroyed(previousValue);\n        }\n        // register the new name\n        this.initializeOutletWithName();\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      // Ensure that the registered outlet is this one before removing it on the context.\n      if (this.isTrackedInParentContexts(this.name)) {\n        this.parentContexts.onChildOutletDestroyed(this.name);\n      }\n      this.inputBinder?.unsubscribeFromRouteData(this);\n    }\n    isTrackedInParentContexts(outletName) {\n      return this.parentContexts.getContext(outletName)?.outlet === this;\n    }\n    /** @nodoc */\n    ngOnInit() {\n      this.initializeOutletWithName();\n    }\n    initializeOutletWithName() {\n      this.parentContexts.onChildOutletCreated(this.name, this);\n      if (this.activated) {\n        return;\n      }\n      // If the outlet was not instantiated at the time the route got activated we need to populate\n      // the outlet when it is initialized (ie inside a NgIf)\n      const context = this.parentContexts.getContext(this.name);\n      if (context?.route) {\n        if (context.attachRef) {\n          // `attachRef` is populated when there is an existing component to mount\n          this.attach(context.attachRef, context.route);\n        } else {\n          // otherwise the component defined in the configuration is created\n          this.activateWith(context.route, context.injector);\n        }\n      }\n    }\n    get isActivated() {\n      return !!this.activated;\n    }\n    /**\n     * @returns The currently activated component instance.\n     * @throws An error if the outlet is not activated.\n     */\n    get component() {\n      if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      return this.activated.instance;\n    }\n    get activatedRoute() {\n      if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      return this._activatedRoute;\n    }\n    get activatedRouteData() {\n      if (this._activatedRoute) {\n        return this._activatedRoute.snapshot.data;\n      }\n      return {};\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to detach the subtree\n     */\n    detach() {\n      if (!this.activated) throw new ɵRuntimeError(4012 /* RuntimeErrorCode.OUTLET_NOT_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Outlet is not activated');\n      this.location.detach();\n      const cmp = this.activated;\n      this.activated = null;\n      this._activatedRoute = null;\n      this.detachEvents.emit(cmp.instance);\n      return cmp;\n    }\n    /**\n     * Called when the `RouteReuseStrategy` instructs to re-attach a previously detached subtree\n     */\n    attach(ref, activatedRoute) {\n      this.activated = ref;\n      this._activatedRoute = activatedRoute;\n      this.location.insert(ref.hostView);\n      this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n      this.attachEvents.emit(ref.instance);\n    }\n    deactivate() {\n      if (this.activated) {\n        const c = this.component;\n        this.activated.destroy();\n        this.activated = null;\n        this._activatedRoute = null;\n        this.deactivateEvents.emit(c);\n      }\n    }\n    activateWith(activatedRoute, environmentInjector) {\n      if (this.isActivated) {\n        throw new ɵRuntimeError(4013 /* RuntimeErrorCode.OUTLET_ALREADY_ACTIVATED */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Cannot activate an already activated outlet');\n      }\n      this._activatedRoute = activatedRoute;\n      const location = this.location;\n      const snapshot = activatedRoute.snapshot;\n      const component = snapshot.component;\n      const childContexts = this.parentContexts.getOrCreateContext(this.name).children;\n      const injector = new OutletInjector(activatedRoute, childContexts, location.injector);\n      this.activated = location.createComponent(component, {\n        index: location.length,\n        injector,\n        environmentInjector: environmentInjector ?? this.environmentInjector\n      });\n      // Calling `markForCheck` to make sure we will run the change detection when the\n      // `RouterOutlet` is inside a `ChangeDetectionStrategy.OnPush` component.\n      this.changeDetector.markForCheck();\n      this.inputBinder?.bindActivatedRouteToOutletComponent(this);\n      this.activateEvents.emit(this.activated.instance);\n    }\n    static {\n      this.ɵfac = function RouterOutlet_Factory(t) {\n        return new (t || RouterOutlet)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RouterOutlet,\n        selectors: [[\"router-outlet\"]],\n        inputs: {\n          name: \"name\"\n        },\n        outputs: {\n          activateEvents: \"activate\",\n          deactivateEvents: \"deactivate\",\n          attachEvents: \"attach\",\n          detachEvents: \"detach\"\n        },\n        exportAs: [\"outlet\"],\n        standalone: true,\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return RouterOutlet;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass OutletInjector {\n  constructor(route, childContexts, parent) {\n    this.route = route;\n    this.childContexts = childContexts;\n    this.parent = parent;\n  }\n  get(token, notFoundValue) {\n    if (token === ActivatedRoute) {\n      return this.route;\n    }\n    if (token === ChildrenOutletContexts) {\n      return this.childContexts;\n    }\n    return this.parent.get(token, notFoundValue);\n  }\n}\nconst INPUT_BINDER = /*#__PURE__*/new InjectionToken('');\n/**\n * Injectable used as a tree-shakable provider for opting in to binding router data to component\n * inputs.\n *\n * The RouterOutlet registers itself with this service when an `ActivatedRoute` is attached or\n * activated. When this happens, the service subscribes to the `ActivatedRoute` observables (params,\n * queryParams, data) and sets the inputs of the component using `ComponentRef.setInput`.\n * Importantly, when an input does not have an item in the route data with a matching key, this\n * input is set to `undefined`. If it were not done this way, the previous information would be\n * retained if the data got removed from the route (i.e. if a query parameter is removed).\n *\n * The `RouterOutlet` should unregister itself when destroyed via `unsubscribeFromRouteData` so that\n * the subscriptions are cleaned up.\n */\nlet RoutedComponentInputBinder = /*#__PURE__*/(() => {\n  class RoutedComponentInputBinder {\n    constructor() {\n      this.outletDataSubscriptions = new Map();\n    }\n    bindActivatedRouteToOutletComponent(outlet) {\n      this.unsubscribeFromRouteData(outlet);\n      this.subscribeToRouteData(outlet);\n    }\n    unsubscribeFromRouteData(outlet) {\n      this.outletDataSubscriptions.get(outlet)?.unsubscribe();\n      this.outletDataSubscriptions.delete(outlet);\n    }\n    subscribeToRouteData(outlet) {\n      const {\n        activatedRoute\n      } = outlet;\n      const dataSubscription = combineLatest([activatedRoute.queryParams, activatedRoute.params, activatedRoute.data]).pipe(switchMap(([queryParams, params, data], index) => {\n        data = {\n          ...queryParams,\n          ...params,\n          ...data\n        };\n        // Get the first result from the data subscription synchronously so it's available to\n        // the component as soon as possible (and doesn't require a second change detection).\n        if (index === 0) {\n          return of(data);\n        }\n        // Promise.resolve is used to avoid synchronously writing the wrong data when\n        // two of the Observables in the `combineLatest` stream emit one after\n        // another.\n        return Promise.resolve(data);\n      })).subscribe(data => {\n        // Outlet may have been deactivated or changed names to be associated with a different\n        // route\n        if (!outlet.isActivated || !outlet.activatedComponentRef || outlet.activatedRoute !== activatedRoute || activatedRoute.component === null) {\n          this.unsubscribeFromRouteData(outlet);\n          return;\n        }\n        const mirror = reflectComponentType(activatedRoute.component);\n        if (!mirror) {\n          this.unsubscribeFromRouteData(outlet);\n          return;\n        }\n        for (const {\n          templateName\n        } of mirror.inputs) {\n          outlet.activatedComponentRef.setInput(templateName, data[templateName]);\n        }\n      });\n      this.outletDataSubscriptions.set(outlet, dataSubscription);\n    }\n    static {\n      this.ɵfac = function RoutedComponentInputBinder_Factory(t) {\n        return new (t || RoutedComponentInputBinder)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RoutedComponentInputBinder,\n        factory: RoutedComponentInputBinder.ɵfac\n      });\n    }\n  }\n  return RoutedComponentInputBinder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction createRouterState(routeReuseStrategy, curr, prevState) {\n  const root = createNode(routeReuseStrategy, curr._root, prevState ? prevState._root : undefined);\n  return new RouterState(root, curr);\n}\nfunction createNode(routeReuseStrategy, curr, prevState) {\n  // reuse an activated route that is currently displayed on the screen\n  if (prevState && routeReuseStrategy.shouldReuseRoute(curr.value, prevState.value.snapshot)) {\n    const value = prevState.value;\n    value._futureSnapshot = curr.value;\n    const children = createOrReuseChildren(routeReuseStrategy, curr, prevState);\n    return new TreeNode(value, children);\n  } else {\n    if (routeReuseStrategy.shouldAttach(curr.value)) {\n      // retrieve an activated route that is used to be displayed, but is not currently displayed\n      const detachedRouteHandle = routeReuseStrategy.retrieve(curr.value);\n      if (detachedRouteHandle !== null) {\n        const tree = detachedRouteHandle.route;\n        tree.value._futureSnapshot = curr.value;\n        tree.children = curr.children.map(c => createNode(routeReuseStrategy, c));\n        return tree;\n      }\n    }\n    const value = createActivatedRoute(curr.value);\n    const children = curr.children.map(c => createNode(routeReuseStrategy, c));\n    return new TreeNode(value, children);\n  }\n}\nfunction createOrReuseChildren(routeReuseStrategy, curr, prevState) {\n  return curr.children.map(child => {\n    for (const p of prevState.children) {\n      if (routeReuseStrategy.shouldReuseRoute(child.value, p.value.snapshot)) {\n        return createNode(routeReuseStrategy, child, p);\n      }\n    }\n    return createNode(routeReuseStrategy, child);\n  });\n}\nfunction createActivatedRoute(c) {\n  return new ActivatedRoute(new BehaviorSubject(c.url), new BehaviorSubject(c.params), new BehaviorSubject(c.queryParams), new BehaviorSubject(c.fragment), new BehaviorSubject(c.data), c.outlet, c.component, c);\n}\nconst NAVIGATION_CANCELING_ERROR = 'ngNavigationCancelingError';\nfunction redirectingNavigationError(urlSerializer, redirect) {\n  const {\n    redirectTo,\n    navigationBehaviorOptions\n  } = isUrlTree(redirect) ? {\n    redirectTo: redirect,\n    navigationBehaviorOptions: undefined\n  } : redirect;\n  const error = navigationCancelingError(ngDevMode && `Redirecting to \"${urlSerializer.serialize(redirectTo)}\"`, NavigationCancellationCode.Redirect);\n  error.url = redirectTo;\n  error.navigationBehaviorOptions = navigationBehaviorOptions;\n  return error;\n}\nfunction navigationCancelingError(message, code) {\n  const error = new Error(`NavigationCancelingError: ${message || ''}`);\n  error[NAVIGATION_CANCELING_ERROR] = true;\n  error.cancellationCode = code;\n  return error;\n}\nfunction isRedirectingNavigationCancelingError(error) {\n  return isNavigationCancelingError(error) && isUrlTree(error.url);\n}\nfunction isNavigationCancelingError(error) {\n  return !!error && error[NAVIGATION_CANCELING_ERROR];\n}\n\n/**\n * This component is used internally within the router to be a placeholder when an empty\n * router-outlet is needed. For example, with a config such as:\n *\n * `{path: 'parent', outlet: 'nav', children: [...]}`\n *\n * In order to render, there needs to be a component on this config, which will default\n * to this `EmptyOutletComponent`.\n */\nlet ɵEmptyOutletComponent = /*#__PURE__*/(() => {\n  class ɵEmptyOutletComponent {\n    static {\n      this.ɵfac = function ɵEmptyOutletComponent_Factory(t) {\n        return new (t || ɵEmptyOutletComponent)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: ɵEmptyOutletComponent,\n        selectors: [[\"ng-component\"]],\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 1,\n        vars: 0,\n        template: function ɵEmptyOutletComponent_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵelement(0, \"router-outlet\");\n          }\n        },\n        dependencies: [RouterOutlet],\n        encapsulation: 2\n      });\n    }\n  }\n  return ɵEmptyOutletComponent;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Creates an `EnvironmentInjector` if the `Route` has providers and one does not already exist\n * and returns the injector. Otherwise, if the `Route` does not have `providers`, returns the\n * `currentInjector`.\n *\n * @param route The route that might have providers\n * @param currentInjector The parent injector of the `Route`\n */\nfunction getOrCreateRouteInjectorIfNeeded(route, currentInjector) {\n  if (route.providers && !route._injector) {\n    route._injector = createEnvironmentInjector(route.providers, currentInjector, `Route: ${route.path}`);\n  }\n  return route._injector ?? currentInjector;\n}\nfunction getLoadedRoutes(route) {\n  return route._loadedRoutes;\n}\nfunction getLoadedInjector(route) {\n  return route._loadedInjector;\n}\nfunction getLoadedComponent(route) {\n  return route._loadedComponent;\n}\nfunction getProvidersInjector(route) {\n  return route._injector;\n}\nfunction validateConfig(config, parentPath = '', requireStandaloneComponents = false) {\n  // forEach doesn't iterate undefined values\n  for (let i = 0; i < config.length; i++) {\n    const route = config[i];\n    const fullPath = getFullPath(parentPath, route);\n    validateNode(route, fullPath, requireStandaloneComponents);\n  }\n}\nfunction assertStandalone(fullPath, component) {\n  if (component && ɵisNgModule(component)) {\n    throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. You are using 'loadComponent' with a module, ` + `but it must be used with standalone components. Use 'loadChildren' instead.`);\n  } else if (component && !isStandalone(component)) {\n    throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. The component must be standalone.`);\n  }\n}\nfunction validateNode(route, fullPath, requireStandaloneComponents) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!route) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `\n      Invalid configuration of route '${fullPath}': Encountered undefined route.\n      The reason might be an extra comma.\n\n      Example:\n      const routes: Routes = [\n        { path: '', redirectTo: '/dashboard', pathMatch: 'full' },\n        { path: 'dashboard',  component: DashboardComponent },, << two commas\n        { path: 'detail/:id', component: HeroDetailComponent }\n      ];\n    `);\n    }\n    if (Array.isArray(route)) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': Array cannot be specified`);\n    }\n    if (!route.redirectTo && !route.component && !route.loadComponent && !route.children && !route.loadChildren && route.outlet && route.outlet !== PRIMARY_OUTLET) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': a componentless route without children or loadChildren cannot have a named outlet set`);\n    }\n    if (route.redirectTo && route.children) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and children cannot be used together`);\n    }\n    if (route.redirectTo && route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and loadChildren cannot be used together`);\n    }\n    if (route.children && route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': children and loadChildren cannot be used together`);\n    }\n    if (route.redirectTo && (route.component || route.loadComponent)) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and component/loadComponent cannot be used together`);\n    }\n    if (route.component && route.loadComponent) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': component and loadComponent cannot be used together`);\n    }\n    if (route.redirectTo && route.canActivate) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': redirectTo and canActivate cannot be used together. Redirects happen before activation ` + `so canActivate will never be executed.`);\n    }\n    if (route.path && route.matcher) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path and matcher cannot be used together`);\n    }\n    if (route.redirectTo === void 0 && !route.component && !route.loadComponent && !route.children && !route.loadChildren) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}'. One of the following must be provided: component, loadComponent, redirectTo, children or loadChildren`);\n    }\n    if (route.path === void 0 && route.matcher === void 0) {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': routes must have either a path or a matcher specified`);\n    }\n    if (typeof route.path === 'string' && route.path.charAt(0) === '/') {\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '${fullPath}': path cannot start with a slash`);\n    }\n    if (route.path === '' && route.redirectTo !== void 0 && route.pathMatch === void 0) {\n      const exp = `The default value of 'pathMatch' is 'prefix', but often the intent is to use 'full'.`;\n      throw new ɵRuntimeError(4014 /* RuntimeErrorCode.INVALID_ROUTE_CONFIG */, `Invalid configuration of route '{path: \"${fullPath}\", redirectTo: \"${route.redirectTo}\"}': please provide 'pathMatch'. ${exp}`);\n    }\n    if (requireStandaloneComponents) {\n      assertStandalone(fullPath, route.component);\n    }\n  }\n  if (route.children) {\n    validateConfig(route.children, fullPath, requireStandaloneComponents);\n  }\n}\nfunction getFullPath(parentPath, currentRoute) {\n  if (!currentRoute) {\n    return parentPath;\n  }\n  if (!parentPath && !currentRoute.path) {\n    return '';\n  } else if (parentPath && !currentRoute.path) {\n    return `${parentPath}/`;\n  } else if (!parentPath && currentRoute.path) {\n    return currentRoute.path;\n  } else {\n    return `${parentPath}/${currentRoute.path}`;\n  }\n}\n/**\n * Makes a copy of the config and adds any default required properties.\n */\nfunction standardizeConfig(r) {\n  const children = r.children && r.children.map(standardizeConfig);\n  const c = children ? {\n    ...r,\n    children\n  } : {\n    ...r\n  };\n  if (!c.component && !c.loadComponent && (children || c.loadChildren) && c.outlet && c.outlet !== PRIMARY_OUTLET) {\n    c.component = ɵEmptyOutletComponent;\n  }\n  return c;\n}\n/** Returns the `route.outlet` or PRIMARY_OUTLET if none exists. */\nfunction getOutlet(route) {\n  return route.outlet || PRIMARY_OUTLET;\n}\n/**\n * Sorts the `routes` such that the ones with an outlet matching `outletName` come first.\n * The order of the configs is otherwise preserved.\n */\nfunction sortByMatchingOutlets(routes, outletName) {\n  const sortedConfig = routes.filter(r => getOutlet(r) === outletName);\n  sortedConfig.push(...routes.filter(r => getOutlet(r) !== outletName));\n  return sortedConfig;\n}\n/**\n * Gets the first injector in the snapshot's parent tree.\n *\n * If the `Route` has a static list of providers, the returned injector will be the one created from\n * those. If it does not exist, the returned injector may come from the parents, which may be from a\n * loaded config or their static providers.\n *\n * Returns `null` if there is neither this nor any parents have a stored injector.\n *\n * Generally used for retrieving the injector to use for getting tokens for guards/resolvers and\n * also used for getting the correct injector to use for creating components.\n */\nfunction getClosestRouteInjector(snapshot) {\n  if (!snapshot) return null;\n  // If the current route has its own injector, which is created from the static providers on the\n  // route itself, we should use that. Otherwise, we start at the parent since we do not want to\n  // include the lazy loaded injector from this route.\n  if (snapshot.routeConfig?._injector) {\n    return snapshot.routeConfig._injector;\n  }\n  for (let s = snapshot.parent; s; s = s.parent) {\n    const route = s.routeConfig;\n    // Note that the order here is important. `_loadedInjector` stored on the route with\n    // `loadChildren: () => NgModule` so it applies to child routes with priority. The `_injector`\n    // is created from the static providers on that parent route, so it applies to the children as\n    // well, but only if there is no lazy loaded NgModuleRef injector.\n    if (route?._loadedInjector) return route._loadedInjector;\n    if (route?._injector) return route._injector;\n  }\n  return null;\n}\nlet warnedAboutUnsupportedInputBinding = false;\nconst activateRoutes = (rootContexts, routeReuseStrategy, forwardEvent, inputBindingEnabled) => map(t => {\n  new ActivateRoutes(routeReuseStrategy, t.targetRouterState, t.currentRouterState, forwardEvent, inputBindingEnabled).activate(rootContexts);\n  return t;\n});\nclass ActivateRoutes {\n  constructor(routeReuseStrategy, futureState, currState, forwardEvent, inputBindingEnabled) {\n    this.routeReuseStrategy = routeReuseStrategy;\n    this.futureState = futureState;\n    this.currState = currState;\n    this.forwardEvent = forwardEvent;\n    this.inputBindingEnabled = inputBindingEnabled;\n  }\n  activate(parentContexts) {\n    const futureRoot = this.futureState._root;\n    const currRoot = this.currState ? this.currState._root : null;\n    this.deactivateChildRoutes(futureRoot, currRoot, parentContexts);\n    advanceActivatedRoute(this.futureState.root);\n    this.activateChildRoutes(futureRoot, currRoot, parentContexts);\n  }\n  // De-activate the child route that are not re-used for the future state\n  deactivateChildRoutes(futureNode, currNode, contexts) {\n    const children = nodeChildrenAsMap(currNode);\n    // Recurse on the routes active in the future state to de-activate deeper children\n    futureNode.children.forEach(futureChild => {\n      const childOutletName = futureChild.value.outlet;\n      this.deactivateRoutes(futureChild, children[childOutletName], contexts);\n      delete children[childOutletName];\n    });\n    // De-activate the routes that will not be re-used\n    Object.values(children).forEach(v => {\n      this.deactivateRouteAndItsChildren(v, contexts);\n    });\n  }\n  deactivateRoutes(futureNode, currNode, parentContext) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    if (future === curr) {\n      // Reusing the node, check to see if the children need to be de-activated\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const context = parentContext.getContext(future.outlet);\n        if (context) {\n          this.deactivateChildRoutes(futureNode, currNode, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.deactivateChildRoutes(futureNode, currNode, parentContext);\n      }\n    } else {\n      if (curr) {\n        // Deactivate the current route which will not be re-used\n        this.deactivateRouteAndItsChildren(currNode, parentContext);\n      }\n    }\n  }\n  deactivateRouteAndItsChildren(route, parentContexts) {\n    // If there is no component, the Route is never attached to an outlet (because there is no\n    // component to attach).\n    if (route.value.component && this.routeReuseStrategy.shouldDetach(route.value.snapshot)) {\n      this.detachAndStoreRouteSubtree(route, parentContexts);\n    } else {\n      this.deactivateRouteAndOutlet(route, parentContexts);\n    }\n  }\n  detachAndStoreRouteSubtree(route, parentContexts) {\n    const context = parentContexts.getContext(route.value.outlet);\n    const contexts = context && route.value.component ? context.children : parentContexts;\n    const children = nodeChildrenAsMap(route);\n    for (const treeNode of Object.values(children)) {\n      this.deactivateRouteAndItsChildren(treeNode, contexts);\n    }\n    if (context && context.outlet) {\n      const componentRef = context.outlet.detach();\n      const contexts = context.children.onOutletDeactivated();\n      this.routeReuseStrategy.store(route.value.snapshot, {\n        componentRef,\n        route,\n        contexts\n      });\n    }\n  }\n  deactivateRouteAndOutlet(route, parentContexts) {\n    const context = parentContexts.getContext(route.value.outlet);\n    // The context could be `null` if we are on a componentless route but there may still be\n    // children that need deactivating.\n    const contexts = context && route.value.component ? context.children : parentContexts;\n    const children = nodeChildrenAsMap(route);\n    for (const treeNode of Object.values(children)) {\n      this.deactivateRouteAndItsChildren(treeNode, contexts);\n    }\n    if (context) {\n      if (context.outlet) {\n        // Destroy the component\n        context.outlet.deactivate();\n        // Destroy the contexts for all the outlets that were in the component\n        context.children.onOutletDeactivated();\n      }\n      // Clear the information about the attached component on the context but keep the reference to\n      // the outlet. Clear even if outlet was not yet activated to avoid activating later with old\n      // info\n      context.attachRef = null;\n      context.route = null;\n    }\n  }\n  activateChildRoutes(futureNode, currNode, contexts) {\n    const children = nodeChildrenAsMap(currNode);\n    futureNode.children.forEach(c => {\n      this.activateRoutes(c, children[c.value.outlet], contexts);\n      this.forwardEvent(new ActivationEnd(c.value.snapshot));\n    });\n    if (futureNode.children.length) {\n      this.forwardEvent(new ChildActivationEnd(futureNode.value.snapshot));\n    }\n  }\n  activateRoutes(futureNode, currNode, parentContexts) {\n    const future = futureNode.value;\n    const curr = currNode ? currNode.value : null;\n    advanceActivatedRoute(future);\n    // reusing the node\n    if (future === curr) {\n      if (future.component) {\n        // If we have a normal route, we need to go through an outlet.\n        const context = parentContexts.getOrCreateContext(future.outlet);\n        this.activateChildRoutes(futureNode, currNode, context.children);\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, currNode, parentContexts);\n      }\n    } else {\n      if (future.component) {\n        // if we have a normal route, we need to place the component into the outlet and recurse.\n        const context = parentContexts.getOrCreateContext(future.outlet);\n        if (this.routeReuseStrategy.shouldAttach(future.snapshot)) {\n          const stored = this.routeReuseStrategy.retrieve(future.snapshot);\n          this.routeReuseStrategy.store(future.snapshot, null);\n          context.children.onOutletReAttached(stored.contexts);\n          context.attachRef = stored.componentRef;\n          context.route = stored.route.value;\n          if (context.outlet) {\n            // Attach right away when the outlet has already been instantiated\n            // Otherwise attach from `RouterOutlet.ngOnInit` when it is instantiated\n            context.outlet.attach(stored.componentRef, stored.route.value);\n          }\n          advanceActivatedRoute(stored.route.value);\n          this.activateChildRoutes(futureNode, null, context.children);\n        } else {\n          const injector = getClosestRouteInjector(future.snapshot);\n          context.attachRef = null;\n          context.route = future;\n          context.injector = injector;\n          if (context.outlet) {\n            // Activate the outlet when it has already been instantiated\n            // Otherwise it will get activated from its `ngOnInit` when instantiated\n            context.outlet.activateWith(future, context.injector);\n          }\n          this.activateChildRoutes(futureNode, null, context.children);\n        }\n      } else {\n        // if we have a componentless route, we recurse but keep the same outlet map.\n        this.activateChildRoutes(futureNode, null, parentContexts);\n      }\n    }\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      const context = parentContexts.getOrCreateContext(future.outlet);\n      const outlet = context.outlet;\n      if (outlet && this.inputBindingEnabled && !outlet.supportsBindingToComponentInputs && !warnedAboutUnsupportedInputBinding) {\n        console.warn(`'withComponentInputBinding' feature is enabled but ` + `this application is using an outlet that may not support binding to component inputs.`);\n        warnedAboutUnsupportedInputBinding = true;\n      }\n    }\n  }\n}\nclass CanActivate {\n  constructor(path) {\n    this.path = path;\n    this.route = this.path[this.path.length - 1];\n  }\n}\nclass CanDeactivate {\n  constructor(component, route) {\n    this.component = component;\n    this.route = route;\n  }\n}\nfunction getAllRouteGuards(future, curr, parentContexts) {\n  const futureRoot = future._root;\n  const currRoot = curr ? curr._root : null;\n  return getChildRouteGuards(futureRoot, currRoot, parentContexts, [futureRoot.value]);\n}\nfunction getCanActivateChild(p) {\n  const canActivateChild = p.routeConfig ? p.routeConfig.canActivateChild : null;\n  if (!canActivateChild || canActivateChild.length === 0) return null;\n  return {\n    node: p,\n    guards: canActivateChild\n  };\n}\nfunction getTokenOrFunctionIdentity(tokenOrFunction, injector) {\n  const NOT_FOUND = Symbol();\n  const result = injector.get(tokenOrFunction, NOT_FOUND);\n  if (result === NOT_FOUND) {\n    if (typeof tokenOrFunction === 'function' && !ɵisInjectable(tokenOrFunction)) {\n      // We think the token is just a function so return it as-is\n      return tokenOrFunction;\n    } else {\n      // This will throw the not found error\n      return injector.get(tokenOrFunction);\n    }\n  }\n  return result;\n}\nfunction getChildRouteGuards(futureNode, currNode, contexts, futurePath, checks = {\n  canDeactivateChecks: [],\n  canActivateChecks: []\n}) {\n  const prevChildren = nodeChildrenAsMap(currNode);\n  // Process the children of the future route\n  futureNode.children.forEach(c => {\n    getRouteGuards(c, prevChildren[c.value.outlet], contexts, futurePath.concat([c.value]), checks);\n    delete prevChildren[c.value.outlet];\n  });\n  // Process any children left from the current route (not active for the future route)\n  Object.entries(prevChildren).forEach(([k, v]) => deactivateRouteAndItsChildren(v, contexts.getContext(k), checks));\n  return checks;\n}\nfunction getRouteGuards(futureNode, currNode, parentContexts, futurePath, checks = {\n  canDeactivateChecks: [],\n  canActivateChecks: []\n}) {\n  const future = futureNode.value;\n  const curr = currNode ? currNode.value : null;\n  const context = parentContexts ? parentContexts.getContext(futureNode.value.outlet) : null;\n  // reusing the node\n  if (curr && future.routeConfig === curr.routeConfig) {\n    const shouldRun = shouldRunGuardsAndResolvers(curr, future, future.routeConfig.runGuardsAndResolvers);\n    if (shouldRun) {\n      checks.canActivateChecks.push(new CanActivate(futurePath));\n    } else {\n      // we need to set the data\n      future.data = curr.data;\n      future._resolvedData = curr._resolvedData;\n    }\n    // If we have a component, we need to go through an outlet.\n    if (future.component) {\n      getChildRouteGuards(futureNode, currNode, context ? context.children : null, futurePath, checks);\n      // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, currNode, parentContexts, futurePath, checks);\n    }\n    if (shouldRun && context && context.outlet && context.outlet.isActivated) {\n      checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, curr));\n    }\n  } else {\n    if (curr) {\n      deactivateRouteAndItsChildren(currNode, context, checks);\n    }\n    checks.canActivateChecks.push(new CanActivate(futurePath));\n    // If we have a component, we need to go through an outlet.\n    if (future.component) {\n      getChildRouteGuards(futureNode, null, context ? context.children : null, futurePath, checks);\n      // if we have a componentless route, we recurse but keep the same outlet map.\n    } else {\n      getChildRouteGuards(futureNode, null, parentContexts, futurePath, checks);\n    }\n  }\n  return checks;\n}\nfunction shouldRunGuardsAndResolvers(curr, future, mode) {\n  if (typeof mode === 'function') {\n    return mode(curr, future);\n  }\n  switch (mode) {\n    case 'pathParamsChange':\n      return !equalPath(curr.url, future.url);\n    case 'pathParamsOrQueryParamsChange':\n      return !equalPath(curr.url, future.url) || !shallowEqual(curr.queryParams, future.queryParams);\n    case 'always':\n      return true;\n    case 'paramsOrQueryParamsChange':\n      return !equalParamsAndUrlSegments(curr, future) || !shallowEqual(curr.queryParams, future.queryParams);\n    case 'paramsChange':\n    default:\n      return !equalParamsAndUrlSegments(curr, future);\n  }\n}\nfunction deactivateRouteAndItsChildren(route, context, checks) {\n  const children = nodeChildrenAsMap(route);\n  const r = route.value;\n  Object.entries(children).forEach(([childName, node]) => {\n    if (!r.component) {\n      deactivateRouteAndItsChildren(node, context, checks);\n    } else if (context) {\n      deactivateRouteAndItsChildren(node, context.children.getContext(childName), checks);\n    } else {\n      deactivateRouteAndItsChildren(node, null, checks);\n    }\n  });\n  if (!r.component) {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  } else if (context && context.outlet && context.outlet.isActivated) {\n    checks.canDeactivateChecks.push(new CanDeactivate(context.outlet.component, r));\n  } else {\n    checks.canDeactivateChecks.push(new CanDeactivate(null, r));\n  }\n}\n\n/**\n * Simple function check, but generic so type inference will flow. Example:\n *\n * function product(a: number, b: number) {\n *   return a * b;\n * }\n *\n * if (isFunction<product>(fn)) {\n *   return fn(1, 2);\n * } else {\n *   throw \"Must provide the `product` function\";\n * }\n */\nfunction isFunction(v) {\n  return typeof v === 'function';\n}\nfunction isBoolean(v) {\n  return typeof v === 'boolean';\n}\nfunction isCanLoad(guard) {\n  return guard && isFunction(guard.canLoad);\n}\nfunction isCanActivate(guard) {\n  return guard && isFunction(guard.canActivate);\n}\nfunction isCanActivateChild(guard) {\n  return guard && isFunction(guard.canActivateChild);\n}\nfunction isCanDeactivate(guard) {\n  return guard && isFunction(guard.canDeactivate);\n}\nfunction isCanMatch(guard) {\n  return guard && isFunction(guard.canMatch);\n}\nfunction isEmptyError(e) {\n  return e instanceof EmptyError || e?.name === 'EmptyError';\n}\nconst INITIAL_VALUE = /* @__PURE__ */Symbol('INITIAL_VALUE');\nfunction prioritizedGuardValue() {\n  return switchMap(obs => {\n    return combineLatest(obs.map(o => o.pipe(take(1), startWith(INITIAL_VALUE)))).pipe(map(results => {\n      for (const result of results) {\n        if (result === true) {\n          // If result is true, check the next one\n          continue;\n        } else if (result === INITIAL_VALUE) {\n          // If guard has not finished, we need to stop processing.\n          return INITIAL_VALUE;\n        } else if (result === false || result instanceof UrlTree) {\n          // Result finished and was not true. Return the result.\n          // Note that we only allow false/UrlTree. Other values are considered invalid and\n          // ignored.\n          return result;\n        }\n      }\n      // Everything resolved to true. Return true.\n      return true;\n    }), filter(item => item !== INITIAL_VALUE), take(1));\n  });\n}\nfunction checkGuards(injector, forwardEvent) {\n  return mergeMap(t => {\n    const {\n      targetSnapshot,\n      currentSnapshot,\n      guards: {\n        canActivateChecks,\n        canDeactivateChecks\n      }\n    } = t;\n    if (canDeactivateChecks.length === 0 && canActivateChecks.length === 0) {\n      return of({\n        ...t,\n        guardsResult: true\n      });\n    }\n    return runCanDeactivateChecks(canDeactivateChecks, targetSnapshot, currentSnapshot, injector).pipe(mergeMap(canDeactivate => {\n      return canDeactivate && isBoolean(canDeactivate) ? runCanActivateChecks(targetSnapshot, canActivateChecks, injector, forwardEvent) : of(canDeactivate);\n    }), map(guardsResult => ({\n      ...t,\n      guardsResult\n    })));\n  });\n}\nfunction runCanDeactivateChecks(checks, futureRSS, currRSS, injector) {\n  return from(checks).pipe(mergeMap(check => runCanDeactivate(check.component, check.route, currRSS, futureRSS, injector)), first(result => {\n    return result !== true;\n  }, true));\n}\nfunction runCanActivateChecks(futureSnapshot, checks, injector, forwardEvent) {\n  return from(checks).pipe(concatMap(check => {\n    return concat(fireChildActivationStart(check.route.parent, forwardEvent), fireActivationStart(check.route, forwardEvent), runCanActivateChild(futureSnapshot, check.path, injector), runCanActivate(futureSnapshot, check.route, injector));\n  }), first(result => {\n    return result !== true;\n  }, true));\n}\n/**\n * This should fire off `ActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ActivationStart(snapshot));\n  }\n  return of(true);\n}\n/**\n * This should fire off `ChildActivationStart` events for each route being activated at this\n * level.\n * In other words, if you're activating `a` and `b` below, `path` will contain the\n * `ActivatedRouteSnapshot`s for both and we will fire `ChildActivationStart` for both. Always\n * return\n * `true` so checks continue to run.\n */\nfunction fireChildActivationStart(snapshot, forwardEvent) {\n  if (snapshot !== null && forwardEvent) {\n    forwardEvent(new ChildActivationStart(snapshot));\n  }\n  return of(true);\n}\nfunction runCanActivate(futureRSS, futureARS, injector) {\n  const canActivate = futureARS.routeConfig ? futureARS.routeConfig.canActivate : null;\n  if (!canActivate || canActivate.length === 0) return of(true);\n  const canActivateObservables = canActivate.map(canActivate => {\n    return defer(() => {\n      const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n      const guard = getTokenOrFunctionIdentity(canActivate, closestInjector);\n      const guardVal = isCanActivate(guard) ? guard.canActivate(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n      return wrapIntoObservable(guardVal).pipe(first());\n    });\n  });\n  return of(canActivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanActivateChild(futureRSS, path, injector) {\n  const futureARS = path[path.length - 1];\n  const canActivateChildGuards = path.slice(0, path.length - 1).reverse().map(p => getCanActivateChild(p)).filter(_ => _ !== null);\n  const canActivateChildGuardsMapped = canActivateChildGuards.map(d => {\n    return defer(() => {\n      const guardsMapped = d.guards.map(canActivateChild => {\n        const closestInjector = getClosestRouteInjector(d.node) ?? injector;\n        const guard = getTokenOrFunctionIdentity(canActivateChild, closestInjector);\n        const guardVal = isCanActivateChild(guard) ? guard.canActivateChild(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => guard(futureARS, futureRSS));\n        return wrapIntoObservable(guardVal).pipe(first());\n      });\n      return of(guardsMapped).pipe(prioritizedGuardValue());\n    });\n  });\n  return of(canActivateChildGuardsMapped).pipe(prioritizedGuardValue());\n}\nfunction runCanDeactivate(component, currARS, currRSS, futureRSS, injector) {\n  const canDeactivate = currARS && currARS.routeConfig ? currARS.routeConfig.canDeactivate : null;\n  if (!canDeactivate || canDeactivate.length === 0) return of(true);\n  const canDeactivateObservables = canDeactivate.map(c => {\n    const closestInjector = getClosestRouteInjector(currARS) ?? injector;\n    const guard = getTokenOrFunctionIdentity(c, closestInjector);\n    const guardVal = isCanDeactivate(guard) ? guard.canDeactivate(component, currARS, currRSS, futureRSS) : runInInjectionContext(closestInjector, () => guard(component, currARS, currRSS, futureRSS));\n    return wrapIntoObservable(guardVal).pipe(first());\n  });\n  return of(canDeactivateObservables).pipe(prioritizedGuardValue());\n}\nfunction runCanLoadGuards(injector, route, segments, urlSerializer) {\n  const canLoad = route.canLoad;\n  if (canLoad === undefined || canLoad.length === 0) {\n    return of(true);\n  }\n  const canLoadObservables = canLoad.map(injectionToken => {\n    const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n    const guardVal = isCanLoad(guard) ? guard.canLoad(route, segments) : runInInjectionContext(injector, () => guard(route, segments));\n    return wrapIntoObservable(guardVal);\n  });\n  return of(canLoadObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nfunction redirectIfUrlTree(urlSerializer) {\n  return pipe(tap(result => {\n    if (!isUrlTree(result)) return;\n    throw redirectingNavigationError(urlSerializer, result);\n  }), map(result => result === true));\n}\nfunction runCanMatchGuards(injector, route, segments, urlSerializer) {\n  const canMatch = route.canMatch;\n  if (!canMatch || canMatch.length === 0) return of(true);\n  const canMatchObservables = canMatch.map(injectionToken => {\n    const guard = getTokenOrFunctionIdentity(injectionToken, injector);\n    const guardVal = isCanMatch(guard) ? guard.canMatch(route, segments) : runInInjectionContext(injector, () => guard(route, segments));\n    return wrapIntoObservable(guardVal);\n  });\n  return of(canMatchObservables).pipe(prioritizedGuardValue(), redirectIfUrlTree(urlSerializer));\n}\nclass NoMatch {\n  constructor(segmentGroup) {\n    this.segmentGroup = segmentGroup || null;\n  }\n}\nclass AbsoluteRedirect extends Error {\n  constructor(urlTree) {\n    super();\n    this.urlTree = urlTree;\n  }\n}\nfunction noMatch$1(segmentGroup) {\n  return throwError(new NoMatch(segmentGroup));\n}\nfunction absoluteRedirect(newTree) {\n  return throwError(new AbsoluteRedirect(newTree));\n}\nfunction namedOutletsRedirect(redirectTo) {\n  return throwError(new ɵRuntimeError(4000 /* RuntimeErrorCode.NAMED_OUTLET_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Only absolute redirects can have named outlets. redirectTo: '${redirectTo}'`));\n}\nfunction canLoadFails(route) {\n  return throwError(navigationCancelingError((typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot load children because the guard of the route \"path: '${route.path}'\" returned false`, NavigationCancellationCode.GuardRejected));\n}\nclass ApplyRedirects {\n  constructor(urlSerializer, urlTree) {\n    this.urlSerializer = urlSerializer;\n    this.urlTree = urlTree;\n  }\n  lineralizeSegments(route, urlTree) {\n    let res = [];\n    let c = urlTree.root;\n    while (true) {\n      res = res.concat(c.segments);\n      if (c.numberOfChildren === 0) {\n        return of(res);\n      }\n      if (c.numberOfChildren > 1 || !c.children[PRIMARY_OUTLET]) {\n        return namedOutletsRedirect(route.redirectTo);\n      }\n      c = c.children[PRIMARY_OUTLET];\n    }\n  }\n  applyRedirectCommands(segments, redirectTo, posParams) {\n    const newTree = this.applyRedirectCreateUrlTree(redirectTo, this.urlSerializer.parse(redirectTo), segments, posParams);\n    if (redirectTo.startsWith('/')) {\n      throw new AbsoluteRedirect(newTree);\n    }\n    return newTree;\n  }\n  applyRedirectCreateUrlTree(redirectTo, urlTree, segments, posParams) {\n    const newRoot = this.createSegmentGroup(redirectTo, urlTree.root, segments, posParams);\n    return new UrlTree(newRoot, this.createQueryParams(urlTree.queryParams, this.urlTree.queryParams), urlTree.fragment);\n  }\n  createQueryParams(redirectToParams, actualParams) {\n    const res = {};\n    Object.entries(redirectToParams).forEach(([k, v]) => {\n      const copySourceValue = typeof v === 'string' && v.startsWith(':');\n      if (copySourceValue) {\n        const sourceName = v.substring(1);\n        res[k] = actualParams[sourceName];\n      } else {\n        res[k] = v;\n      }\n    });\n    return res;\n  }\n  createSegmentGroup(redirectTo, group, segments, posParams) {\n    const updatedSegments = this.createSegments(redirectTo, group.segments, segments, posParams);\n    let children = {};\n    Object.entries(group.children).forEach(([name, child]) => {\n      children[name] = this.createSegmentGroup(redirectTo, child, segments, posParams);\n    });\n    return new UrlSegmentGroup(updatedSegments, children);\n  }\n  createSegments(redirectTo, redirectToSegments, actualSegments, posParams) {\n    return redirectToSegments.map(s => s.path.startsWith(':') ? this.findPosParam(redirectTo, s, posParams) : this.findOrReturn(s, actualSegments));\n  }\n  findPosParam(redirectTo, redirectToUrlSegment, posParams) {\n    const pos = posParams[redirectToUrlSegment.path.substring(1)];\n    if (!pos) throw new ɵRuntimeError(4001 /* RuntimeErrorCode.MISSING_REDIRECT */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Cannot redirect to '${redirectTo}'. Cannot find '${redirectToUrlSegment.path}'.`);\n    return pos;\n  }\n  findOrReturn(redirectToUrlSegment, actualSegments) {\n    let idx = 0;\n    for (const s of actualSegments) {\n      if (s.path === redirectToUrlSegment.path) {\n        actualSegments.splice(idx);\n        return s;\n      }\n      idx++;\n    }\n    return redirectToUrlSegment;\n  }\n}\nconst noMatch = {\n  matched: false,\n  consumedSegments: [],\n  remainingSegments: [],\n  parameters: {},\n  positionalParamSegments: {}\n};\nfunction matchWithChecks(segmentGroup, route, segments, injector, urlSerializer) {\n  const result = match(segmentGroup, route, segments);\n  if (!result.matched) {\n    return of(result);\n  }\n  // Only create the Route's `EnvironmentInjector` if it matches the attempted\n  // navigation\n  injector = getOrCreateRouteInjectorIfNeeded(route, injector);\n  return runCanMatchGuards(injector, route, segments, urlSerializer).pipe(map(v => v === true ? result : {\n    ...noMatch\n  }));\n}\nfunction match(segmentGroup, route, segments) {\n  if (route.path === '**') {\n    return createWildcardMatchResult(segments);\n  }\n  if (route.path === '') {\n    if (route.pathMatch === 'full' && (segmentGroup.hasChildren() || segments.length > 0)) {\n      return {\n        ...noMatch\n      };\n    }\n    return {\n      matched: true,\n      consumedSegments: [],\n      remainingSegments: segments,\n      parameters: {},\n      positionalParamSegments: {}\n    };\n  }\n  const matcher = route.matcher || defaultUrlMatcher;\n  const res = matcher(segments, segmentGroup, route);\n  if (!res) return {\n    ...noMatch\n  };\n  const posParams = {};\n  Object.entries(res.posParams ?? {}).forEach(([k, v]) => {\n    posParams[k] = v.path;\n  });\n  const parameters = res.consumed.length > 0 ? {\n    ...posParams,\n    ...res.consumed[res.consumed.length - 1].parameters\n  } : posParams;\n  return {\n    matched: true,\n    consumedSegments: res.consumed,\n    remainingSegments: segments.slice(res.consumed.length),\n    // TODO(atscott): investigate combining parameters and positionalParamSegments\n    parameters,\n    positionalParamSegments: res.posParams ?? {}\n  };\n}\nfunction createWildcardMatchResult(segments) {\n  return {\n    matched: true,\n    parameters: segments.length > 0 ? last(segments).parameters : {},\n    consumedSegments: segments,\n    remainingSegments: [],\n    positionalParamSegments: {}\n  };\n}\nfunction split(segmentGroup, consumedSegments, slicedSegments, config) {\n  if (slicedSegments.length > 0 && containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, config)) {\n    const s = new UrlSegmentGroup(consumedSegments, createChildrenForEmptyPaths(config, new UrlSegmentGroup(slicedSegments, segmentGroup.children)));\n    return {\n      segmentGroup: s,\n      slicedSegments: []\n    };\n  }\n  if (slicedSegments.length === 0 && containsEmptyPathMatches(segmentGroup, slicedSegments, config)) {\n    const s = new UrlSegmentGroup(segmentGroup.segments, addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, config, segmentGroup.children));\n    return {\n      segmentGroup: s,\n      slicedSegments\n    };\n  }\n  const s = new UrlSegmentGroup(segmentGroup.segments, segmentGroup.children);\n  return {\n    segmentGroup: s,\n    slicedSegments\n  };\n}\nfunction addEmptyPathsToChildrenIfNeeded(segmentGroup, slicedSegments, routes, children) {\n  const res = {};\n  for (const r of routes) {\n    if (emptyPathMatch(segmentGroup, slicedSegments, r) && !children[getOutlet(r)]) {\n      const s = new UrlSegmentGroup([], {});\n      res[getOutlet(r)] = s;\n    }\n  }\n  return {\n    ...children,\n    ...res\n  };\n}\nfunction createChildrenForEmptyPaths(routes, primarySegment) {\n  const res = {};\n  res[PRIMARY_OUTLET] = primarySegment;\n  for (const r of routes) {\n    if (r.path === '' && getOutlet(r) !== PRIMARY_OUTLET) {\n      const s = new UrlSegmentGroup([], {});\n      res[getOutlet(r)] = s;\n    }\n  }\n  return res;\n}\nfunction containsEmptyPathMatchesWithNamedOutlets(segmentGroup, slicedSegments, routes) {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r) && getOutlet(r) !== PRIMARY_OUTLET);\n}\nfunction containsEmptyPathMatches(segmentGroup, slicedSegments, routes) {\n  return routes.some(r => emptyPathMatch(segmentGroup, slicedSegments, r));\n}\nfunction emptyPathMatch(segmentGroup, slicedSegments, r) {\n  if ((segmentGroup.hasChildren() || slicedSegments.length > 0) && r.pathMatch === 'full') {\n    return false;\n  }\n  return r.path === '';\n}\n/**\n * Determines if `route` is a path match for the `rawSegment`, `segments`, and `outlet` without\n * verifying that its children are a full match for the remainder of the `rawSegment` children as\n * well.\n */\nfunction isImmediateMatch(route, rawSegment, segments, outlet) {\n  // We allow matches to empty paths when the outlets differ so we can match a url like `/(b:b)` to\n  // a config like\n  // * `{path: '', children: [{path: 'b', outlet: 'b'}]}`\n  // or even\n  // * `{path: '', outlet: 'a', children: [{path: 'b', outlet: 'b'}]`\n  //\n  // The exception here is when the segment outlet is for the primary outlet. This would\n  // result in a match inside the named outlet because all children there are written as primary\n  // outlets. So we need to prevent child named outlet matches in a url like `/b` in a config like\n  // * `{path: '', outlet: 'x' children: [{path: 'b'}]}`\n  // This should only match if the url is `/(x:b)`.\n  if (getOutlet(route) !== outlet && (outlet === PRIMARY_OUTLET || !emptyPathMatch(rawSegment, segments, route))) {\n    return false;\n  }\n  return match(rawSegment, route, segments).matched;\n}\nfunction noLeftoversInUrl(segmentGroup, segments, outlet) {\n  return segments.length === 0 && !segmentGroup.children[outlet];\n}\n\n/**\n * Class used to indicate there were no additional route config matches but that all segments of\n * the URL were consumed during matching so the route was URL matched. When this happens, we still\n * try to match child configs in case there are empty path children.\n */\nclass NoLeftoversInUrl {}\nfunction recognize$1(injector, configLoader, rootComponentType, config, urlTree, urlSerializer, paramsInheritanceStrategy = 'emptyOnly') {\n  return new Recognizer(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer).recognize();\n}\nconst MAX_ALLOWED_REDIRECTS = 31;\nclass Recognizer {\n  constructor(injector, configLoader, rootComponentType, config, urlTree, paramsInheritanceStrategy, urlSerializer) {\n    this.injector = injector;\n    this.configLoader = configLoader;\n    this.rootComponentType = rootComponentType;\n    this.config = config;\n    this.urlTree = urlTree;\n    this.paramsInheritanceStrategy = paramsInheritanceStrategy;\n    this.urlSerializer = urlSerializer;\n    this.applyRedirects = new ApplyRedirects(this.urlSerializer, this.urlTree);\n    this.absoluteRedirectCount = 0;\n    this.allowRedirects = true;\n  }\n  noMatchError(e) {\n    return new ɵRuntimeError(4002 /* RuntimeErrorCode.NO_MATCH */, typeof ngDevMode === 'undefined' || ngDevMode ? `Cannot match any routes. URL Segment: '${e.segmentGroup}'` : `'${e.segmentGroup}'`);\n  }\n  recognize() {\n    const rootSegmentGroup = split(this.urlTree.root, [], [], this.config).segmentGroup;\n    return this.match(rootSegmentGroup).pipe(map(children => {\n      // Use Object.freeze to prevent readers of the Router state from modifying it outside\n      // of a navigation, resulting in the router being out of sync with the browser.\n      const root = new ActivatedRouteSnapshot([], Object.freeze({}), Object.freeze({\n        ...this.urlTree.queryParams\n      }), this.urlTree.fragment, {}, PRIMARY_OUTLET, this.rootComponentType, null, {});\n      const rootNode = new TreeNode(root, children);\n      const routeState = new RouterStateSnapshot('', rootNode);\n      const tree = createUrlTreeFromSnapshot(root, [], this.urlTree.queryParams, this.urlTree.fragment);\n      // https://github.com/angular/angular/issues/47307\n      // Creating the tree stringifies the query params\n      // We don't want to do this here so reassign them to the original.\n      tree.queryParams = this.urlTree.queryParams;\n      routeState.url = this.urlSerializer.serialize(tree);\n      this.inheritParamsAndData(routeState._root, null);\n      return {\n        state: routeState,\n        tree\n      };\n    }));\n  }\n  match(rootSegmentGroup) {\n    const expanded$ = this.processSegmentGroup(this.injector, this.config, rootSegmentGroup, PRIMARY_OUTLET);\n    return expanded$.pipe(catchError(e => {\n      if (e instanceof AbsoluteRedirect) {\n        this.urlTree = e.urlTree;\n        return this.match(e.urlTree.root);\n      }\n      if (e instanceof NoMatch) {\n        throw this.noMatchError(e);\n      }\n      throw e;\n    }));\n  }\n  inheritParamsAndData(routeNode, parent) {\n    const route = routeNode.value;\n    const i = getInherited(route, parent, this.paramsInheritanceStrategy);\n    route.params = Object.freeze(i.params);\n    route.data = Object.freeze(i.data);\n    routeNode.children.forEach(n => this.inheritParamsAndData(n, route));\n  }\n  processSegmentGroup(injector, config, segmentGroup, outlet) {\n    if (segmentGroup.segments.length === 0 && segmentGroup.hasChildren()) {\n      return this.processChildren(injector, config, segmentGroup);\n    }\n    return this.processSegment(injector, config, segmentGroup, segmentGroup.segments, outlet, true).pipe(map(child => child instanceof TreeNode ? [child] : []));\n  }\n  /**\n   * Matches every child outlet in the `segmentGroup` to a `Route` in the config. Returns `null` if\n   * we cannot find a match for _any_ of the children.\n   *\n   * @param config - The `Routes` to match against\n   * @param segmentGroup - The `UrlSegmentGroup` whose children need to be matched against the\n   *     config.\n   */\n  processChildren(injector, config, segmentGroup) {\n    // Expand outlets one at a time, starting with the primary outlet. We need to do it this way\n    // because an absolute redirect from the primary outlet takes precedence.\n    const childOutlets = [];\n    for (const child of Object.keys(segmentGroup.children)) {\n      if (child === 'primary') {\n        childOutlets.unshift(child);\n      } else {\n        childOutlets.push(child);\n      }\n    }\n    return from(childOutlets).pipe(concatMap(childOutlet => {\n      const child = segmentGroup.children[childOutlet];\n      // Sort the config so that routes with outlets that match the one being activated\n      // appear first, followed by routes for other outlets, which might match if they have\n      // an empty path.\n      const sortedConfig = sortByMatchingOutlets(config, childOutlet);\n      return this.processSegmentGroup(injector, sortedConfig, child, childOutlet);\n    }), scan((children, outletChildren) => {\n      children.push(...outletChildren);\n      return children;\n    }), defaultIfEmpty(null), last$1(), mergeMap(children => {\n      if (children === null) return noMatch$1(segmentGroup);\n      // Because we may have matched two outlets to the same empty path segment, we can have\n      // multiple activated results for the same outlet. We should merge the children of\n      // these results so the final return value is only one `TreeNode` per outlet.\n      const mergedChildren = mergeEmptyPathMatches(children);\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // This should really never happen - we are only taking the first match for each\n        // outlet and merge the empty path matches.\n        checkOutletNameUniqueness(mergedChildren);\n      }\n      sortActivatedRouteSnapshots(mergedChildren);\n      return of(mergedChildren);\n    }));\n  }\n  processSegment(injector, routes, segmentGroup, segments, outlet, allowRedirects) {\n    return from(routes).pipe(concatMap(r => {\n      return this.processSegmentAgainstRoute(r._injector ?? injector, routes, r, segmentGroup, segments, outlet, allowRedirects).pipe(catchError(e => {\n        if (e instanceof NoMatch) {\n          return of(null);\n        }\n        throw e;\n      }));\n    }), first(x => !!x), catchError(e => {\n      if (isEmptyError(e)) {\n        if (noLeftoversInUrl(segmentGroup, segments, outlet)) {\n          return of(new NoLeftoversInUrl());\n        }\n        return noMatch$1(segmentGroup);\n      }\n      throw e;\n    }));\n  }\n  processSegmentAgainstRoute(injector, routes, route, rawSegment, segments, outlet, allowRedirects) {\n    if (!isImmediateMatch(route, rawSegment, segments, outlet)) return noMatch$1(rawSegment);\n    if (route.redirectTo === undefined) {\n      return this.matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet);\n    }\n    if (this.allowRedirects && allowRedirects) {\n      return this.expandSegmentAgainstRouteUsingRedirect(injector, rawSegment, routes, route, segments, outlet);\n    }\n    return noMatch$1(rawSegment);\n  }\n  expandSegmentAgainstRouteUsingRedirect(injector, segmentGroup, routes, route, segments, outlet) {\n    const {\n      matched,\n      consumedSegments,\n      positionalParamSegments,\n      remainingSegments\n    } = match(segmentGroup, route, segments);\n    if (!matched) return noMatch$1(segmentGroup);\n    // TODO(atscott): Move all of this under an if(ngDevMode) as a breaking change and allow stack\n    // size exceeded in production\n    if (route.redirectTo.startsWith('/')) {\n      this.absoluteRedirectCount++;\n      if (this.absoluteRedirectCount > MAX_ALLOWED_REDIRECTS) {\n        if (ngDevMode) {\n          throw new ɵRuntimeError(4016 /* RuntimeErrorCode.INFINITE_REDIRECT */, `Detected possible infinite redirect when redirecting from '${this.urlTree}' to '${route.redirectTo}'.\\n` + `This is currently a dev mode only error but will become a` + ` call stack size exceeded error in production in a future major version.`);\n        }\n        this.allowRedirects = false;\n      }\n    }\n    const newTree = this.applyRedirects.applyRedirectCommands(consumedSegments, route.redirectTo, positionalParamSegments);\n    return this.applyRedirects.lineralizeSegments(route, newTree).pipe(mergeMap(newSegments => {\n      return this.processSegment(injector, routes, segmentGroup, newSegments.concat(remainingSegments), outlet, false);\n    }));\n  }\n  matchSegmentAgainstRoute(injector, rawSegment, route, segments, outlet) {\n    const matchResult = matchWithChecks(rawSegment, route, segments, injector, this.urlSerializer);\n    if (route.path === '**') {\n      // Prior versions of the route matching algorithm would stop matching at the wildcard route.\n      // We should investigate a better strategy for any existing children. Otherwise, these\n      // child segments are silently dropped from the navigation.\n      // https://github.com/angular/angular/issues/40089\n      rawSegment.children = {};\n    }\n    return matchResult.pipe(switchMap(result => {\n      if (!result.matched) {\n        return noMatch$1(rawSegment);\n      }\n      // If the route has an injector created from providers, we should start using that.\n      injector = route._injector ?? injector;\n      return this.getChildConfig(injector, route, segments).pipe(switchMap(({\n        routes: childConfig\n      }) => {\n        const childInjector = route._loadedInjector ?? injector;\n        const {\n          consumedSegments,\n          remainingSegments,\n          parameters\n        } = result;\n        const snapshot = new ActivatedRouteSnapshot(consumedSegments, parameters, Object.freeze({\n          ...this.urlTree.queryParams\n        }), this.urlTree.fragment, getData(route), getOutlet(route), route.component ?? route._loadedComponent ?? null, route, getResolve(route));\n        const {\n          segmentGroup,\n          slicedSegments\n        } = split(rawSegment, consumedSegments, remainingSegments, childConfig);\n        if (slicedSegments.length === 0 && segmentGroup.hasChildren()) {\n          return this.processChildren(childInjector, childConfig, segmentGroup).pipe(map(children => {\n            if (children === null) {\n              return null;\n            }\n            return new TreeNode(snapshot, children);\n          }));\n        }\n        if (childConfig.length === 0 && slicedSegments.length === 0) {\n          return of(new TreeNode(snapshot, []));\n        }\n        const matchedOnOutlet = getOutlet(route) === outlet;\n        // If we matched a config due to empty path match on a different outlet, we need to\n        // continue passing the current outlet for the segment rather than switch to PRIMARY.\n        // Note that we switch to primary when we have a match because outlet configs look like\n        // this: {path: 'a', outlet: 'a', children: [\n        //  {path: 'b', component: B},\n        //  {path: 'c', component: C},\n        // ]}\n        // Notice that the children of the named outlet are configured with the primary outlet\n        return this.processSegment(childInjector, childConfig, segmentGroup, slicedSegments, matchedOnOutlet ? PRIMARY_OUTLET : outlet, true).pipe(map(child => {\n          return new TreeNode(snapshot, child instanceof TreeNode ? [child] : []);\n        }));\n      }));\n    }));\n  }\n  getChildConfig(injector, route, segments) {\n    if (route.children) {\n      // The children belong to the same module\n      return of({\n        routes: route.children,\n        injector\n      });\n    }\n    if (route.loadChildren) {\n      // lazy children belong to the loaded module\n      if (route._loadedRoutes !== undefined) {\n        return of({\n          routes: route._loadedRoutes,\n          injector: route._loadedInjector\n        });\n      }\n      return runCanLoadGuards(injector, route, segments, this.urlSerializer).pipe(mergeMap(shouldLoadResult => {\n        if (shouldLoadResult) {\n          return this.configLoader.loadChildren(injector, route).pipe(tap(cfg => {\n            route._loadedRoutes = cfg.routes;\n            route._loadedInjector = cfg.injector;\n          }));\n        }\n        return canLoadFails(route);\n      }));\n    }\n    return of({\n      routes: [],\n      injector\n    });\n  }\n}\nfunction sortActivatedRouteSnapshots(nodes) {\n  nodes.sort((a, b) => {\n    if (a.value.outlet === PRIMARY_OUTLET) return -1;\n    if (b.value.outlet === PRIMARY_OUTLET) return 1;\n    return a.value.outlet.localeCompare(b.value.outlet);\n  });\n}\nfunction hasEmptyPathConfig(node) {\n  const config = node.value.routeConfig;\n  return config && config.path === '';\n}\n/**\n * Finds `TreeNode`s with matching empty path route configs and merges them into `TreeNode` with\n * the children from each duplicate. This is necessary because different outlets can match a\n * single empty path route config and the results need to then be merged.\n */\nfunction mergeEmptyPathMatches(nodes) {\n  const result = [];\n  // The set of nodes which contain children that were merged from two duplicate empty path nodes.\n  const mergedNodes = new Set();\n  for (const node of nodes) {\n    if (!hasEmptyPathConfig(node)) {\n      result.push(node);\n      continue;\n    }\n    const duplicateEmptyPathNode = result.find(resultNode => node.value.routeConfig === resultNode.value.routeConfig);\n    if (duplicateEmptyPathNode !== undefined) {\n      duplicateEmptyPathNode.children.push(...node.children);\n      mergedNodes.add(duplicateEmptyPathNode);\n    } else {\n      result.push(node);\n    }\n  }\n  // For each node which has children from multiple sources, we need to recompute a new `TreeNode`\n  // by also merging those children. This is necessary when there are multiple empty path configs\n  // in a row. Put another way: whenever we combine children of two nodes, we need to also check\n  // if any of those children can be combined into a single node as well.\n  for (const mergedNode of mergedNodes) {\n    const mergedChildren = mergeEmptyPathMatches(mergedNode.children);\n    result.push(new TreeNode(mergedNode.value, mergedChildren));\n  }\n  return result.filter(n => !mergedNodes.has(n));\n}\nfunction checkOutletNameUniqueness(nodes) {\n  const names = {};\n  nodes.forEach(n => {\n    const routeWithSameOutletName = names[n.value.outlet];\n    if (routeWithSameOutletName) {\n      const p = routeWithSameOutletName.url.map(s => s.toString()).join('/');\n      const c = n.value.url.map(s => s.toString()).join('/');\n      throw new ɵRuntimeError(4006 /* RuntimeErrorCode.TWO_SEGMENTS_WITH_SAME_OUTLET */, (typeof ngDevMode === 'undefined' || ngDevMode) && `Two segments cannot have the same outlet name: '${p}' and '${c}'.`);\n    }\n    names[n.value.outlet] = n.value;\n  });\n}\nfunction getData(route) {\n  return route.data || {};\n}\nfunction getResolve(route) {\n  return route.resolve || {};\n}\nfunction recognize(injector, configLoader, rootComponentType, config, serializer, paramsInheritanceStrategy) {\n  return mergeMap(t => recognize$1(injector, configLoader, rootComponentType, config, t.extractedUrl, serializer, paramsInheritanceStrategy).pipe(map(({\n    state: targetSnapshot,\n    tree: urlAfterRedirects\n  }) => {\n    return {\n      ...t,\n      targetSnapshot,\n      urlAfterRedirects\n    };\n  })));\n}\nfunction resolveData(paramsInheritanceStrategy, injector) {\n  return mergeMap(t => {\n    const {\n      targetSnapshot,\n      guards: {\n        canActivateChecks\n      }\n    } = t;\n    if (!canActivateChecks.length) {\n      return of(t);\n    }\n    // Iterating a Set in javascript  happens in insertion order so it is safe to use a `Set` to\n    // preserve the correct order that the resolvers should run in.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#description\n    const routesWithResolversToRun = new Set(canActivateChecks.map(check => check.route));\n    const routesNeedingDataUpdates = new Set();\n    for (const route of routesWithResolversToRun) {\n      if (routesNeedingDataUpdates.has(route)) {\n        continue;\n      }\n      // All children under the route with a resolver to run need to recompute inherited data.\n      for (const newRoute of flattenRouteTree(route)) {\n        routesNeedingDataUpdates.add(newRoute);\n      }\n    }\n    let routesProcessed = 0;\n    return from(routesNeedingDataUpdates).pipe(concatMap(route => {\n      if (routesWithResolversToRun.has(route)) {\n        return runResolve(route, targetSnapshot, paramsInheritanceStrategy, injector);\n      } else {\n        route.data = getInherited(route, route.parent, paramsInheritanceStrategy).resolve;\n        return of(void 0);\n      }\n    }), tap(() => routesProcessed++), takeLast(1), mergeMap(_ => routesProcessed === routesNeedingDataUpdates.size ? of(t) : EMPTY));\n  });\n}\n/**\n *  Returns the `ActivatedRouteSnapshot` tree as an array, using DFS to traverse the route tree.\n */\nfunction flattenRouteTree(route) {\n  const descendants = route.children.map(child => flattenRouteTree(child)).flat();\n  return [route, ...descendants];\n}\nfunction runResolve(futureARS, futureRSS, paramsInheritanceStrategy, injector) {\n  const config = futureARS.routeConfig;\n  const resolve = futureARS._resolve;\n  if (config?.title !== undefined && !hasStaticTitle(config)) {\n    resolve[RouteTitleKey] = config.title;\n  }\n  return resolveNode(resolve, futureARS, futureRSS, injector).pipe(map(resolvedData => {\n    futureARS._resolvedData = resolvedData;\n    futureARS.data = getInherited(futureARS, futureARS.parent, paramsInheritanceStrategy).resolve;\n    return null;\n  }));\n}\nfunction resolveNode(resolve, futureARS, futureRSS, injector) {\n  const keys = getDataKeys(resolve);\n  if (keys.length === 0) {\n    return of({});\n  }\n  const data = {};\n  return from(keys).pipe(mergeMap(key => getResolver(resolve[key], futureARS, futureRSS, injector).pipe(first(), tap(value => {\n    data[key] = value;\n  }))), takeLast(1), mapTo(data), catchError(e => isEmptyError(e) ? EMPTY : throwError(e)));\n}\nfunction getResolver(injectionToken, futureARS, futureRSS, injector) {\n  const closestInjector = getClosestRouteInjector(futureARS) ?? injector;\n  const resolver = getTokenOrFunctionIdentity(injectionToken, closestInjector);\n  const resolverValue = resolver.resolve ? resolver.resolve(futureARS, futureRSS) : runInInjectionContext(closestInjector, () => resolver(futureARS, futureRSS));\n  return wrapIntoObservable(resolverValue);\n}\n\n/**\n * Perform a side effect through a switchMap for every emission on the source Observable,\n * but return an Observable that is identical to the source. It's essentially the same as\n * the `tap` operator, but if the side effectful `next` function returns an ObservableInput,\n * it will wait before continuing with the original value.\n */\nfunction switchTap(next) {\n  return switchMap(v => {\n    const nextResult = next(v);\n    if (nextResult) {\n      return from(nextResult).pipe(map(() => v));\n    }\n    return of(v);\n  });\n}\n\n/**\n * Provides a strategy for setting the page title after a router navigation.\n *\n * The built-in implementation traverses the router state snapshot and finds the deepest primary\n * outlet with `title` property. Given the `Routes` below, navigating to\n * `/base/child(popup:aux)` would result in the document title being set to \"child\".\n * ```\n * [\n *   {path: 'base', title: 'base', children: [\n *     {path: 'child', title: 'child'},\n *   ],\n *   {path: 'aux', outlet: 'popup', title: 'popupTitle'}\n * ]\n * ```\n *\n * This class can be used as a base class for custom title strategies. That is, you can create your\n * own class that extends the `TitleStrategy`. Note that in the above example, the `title`\n * from the named outlet is never used. However, a custom strategy might be implemented to\n * incorporate titles in named outlets.\n *\n * @publicApi\n * @see [Page title guide](guide/router#setting-the-page-title)\n */\nlet TitleStrategy = /*#__PURE__*/(() => {\n  class TitleStrategy {\n    /**\n     * @returns The `title` of the deepest primary route.\n     */\n    buildTitle(snapshot) {\n      let pageTitle;\n      let route = snapshot.root;\n      while (route !== undefined) {\n        pageTitle = this.getResolvedTitleForRoute(route) ?? pageTitle;\n        route = route.children.find(child => child.outlet === PRIMARY_OUTLET);\n      }\n      return pageTitle;\n    }\n    /**\n     * Given an `ActivatedRouteSnapshot`, returns the final value of the\n     * `Route.title` property, which can either be a static string or a resolved value.\n     */\n    getResolvedTitleForRoute(snapshot) {\n      return snapshot.data[RouteTitleKey];\n    }\n    static {\n      this.ɵfac = function TitleStrategy_Factory(t) {\n        return new (t || TitleStrategy)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: TitleStrategy,\n        factory: () => (() => inject(DefaultTitleStrategy))(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return TitleStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The default `TitleStrategy` used by the router that updates the title using the `Title` service.\n */\nlet DefaultTitleStrategy = /*#__PURE__*/(() => {\n  class DefaultTitleStrategy extends TitleStrategy {\n    constructor(title) {\n      super();\n      this.title = title;\n    }\n    /**\n     * Sets the title of the browser to the given value.\n     *\n     * @param title The `pageTitle` from the deepest primary route.\n     */\n    updateTitle(snapshot) {\n      const title = this.buildTitle(snapshot);\n      if (title !== undefined) {\n        this.title.setTitle(title);\n      }\n    }\n    static {\n      this.ɵfac = function DefaultTitleStrategy_Factory(t) {\n        return new (t || DefaultTitleStrategy)(i0.ɵɵinject(i1.Title));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DefaultTitleStrategy,\n        factory: DefaultTitleStrategy.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DefaultTitleStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * A [DI token](guide/glossary/#di-token) for the router service.\n *\n * @publicApi\n */\nconst ROUTER_CONFIGURATION = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router config' : '', {\n  providedIn: 'root',\n  factory: () => ({})\n});\n\n/**\n * The [DI token](guide/glossary/#di-token) for a router configuration.\n *\n * `ROUTES` is a low level API for router configuration via dependency injection.\n *\n * We recommend that in almost all cases to use higher level APIs such as `RouterModule.forRoot()`,\n * `provideRouter`, or `Router.resetConfig()`.\n *\n * @publicApi\n */\nconst ROUTES = /*#__PURE__*/new InjectionToken(ngDevMode ? 'ROUTES' : '');\nlet RouterConfigLoader = /*#__PURE__*/(() => {\n  class RouterConfigLoader {\n    constructor() {\n      this.componentLoaders = new WeakMap();\n      this.childrenLoaders = new WeakMap();\n      this.compiler = inject(Compiler);\n    }\n    loadComponent(route) {\n      if (this.componentLoaders.get(route)) {\n        return this.componentLoaders.get(route);\n      } else if (route._loadedComponent) {\n        return of(route._loadedComponent);\n      }\n      if (this.onLoadStartListener) {\n        this.onLoadStartListener(route);\n      }\n      const loadRunner = wrapIntoObservable(route.loadComponent()).pipe(map(maybeUnwrapDefaultExport), tap(component => {\n        if (this.onLoadEndListener) {\n          this.onLoadEndListener(route);\n        }\n        (typeof ngDevMode === 'undefined' || ngDevMode) && assertStandalone(route.path ?? '', component);\n        route._loadedComponent = component;\n      }), finalize(() => {\n        this.componentLoaders.delete(route);\n      }));\n      // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n      const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n      this.componentLoaders.set(route, loader);\n      return loader;\n    }\n    loadChildren(parentInjector, route) {\n      if (this.childrenLoaders.get(route)) {\n        return this.childrenLoaders.get(route);\n      } else if (route._loadedRoutes) {\n        return of({\n          routes: route._loadedRoutes,\n          injector: route._loadedInjector\n        });\n      }\n      if (this.onLoadStartListener) {\n        this.onLoadStartListener(route);\n      }\n      const moduleFactoryOrRoutes$ = loadChildren(route, this.compiler, parentInjector, this.onLoadEndListener);\n      const loadRunner = moduleFactoryOrRoutes$.pipe(finalize(() => {\n        this.childrenLoaders.delete(route);\n      }));\n      // Use custom ConnectableObservable as share in runners pipe increasing the bundle size too much\n      const loader = new ConnectableObservable(loadRunner, () => new Subject()).pipe(refCount());\n      this.childrenLoaders.set(route, loader);\n      return loader;\n    }\n    static {\n      this.ɵfac = function RouterConfigLoader_Factory(t) {\n        return new (t || RouterConfigLoader)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RouterConfigLoader,\n        factory: RouterConfigLoader.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return RouterConfigLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Executes a `route.loadChildren` callback and converts the result to an array of child routes and\n * an injector if that callback returned a module.\n *\n * This function is used for the route discovery during prerendering\n * in @angular-devkit/build-angular. If there are any updates to the contract here, it will require\n * an update to the extractor.\n */\nfunction loadChildren(route, compiler, parentInjector, onLoadEndListener) {\n  return wrapIntoObservable(route.loadChildren()).pipe(map(maybeUnwrapDefaultExport), mergeMap(t => {\n    if (t instanceof NgModuleFactory || Array.isArray(t)) {\n      return of(t);\n    } else {\n      return from(compiler.compileModuleAsync(t));\n    }\n  }), map(factoryOrRoutes => {\n    if (onLoadEndListener) {\n      onLoadEndListener(route);\n    }\n    // This injector comes from the `NgModuleRef` when lazy loading an `NgModule`. There is\n    // no injector associated with lazy loading a `Route` array.\n    let injector;\n    let rawRoutes;\n    let requireStandaloneComponents = false;\n    if (Array.isArray(factoryOrRoutes)) {\n      rawRoutes = factoryOrRoutes;\n      requireStandaloneComponents = true;\n    } else {\n      injector = factoryOrRoutes.create(parentInjector).injector;\n      // When loading a module that doesn't provide `RouterModule.forChild()` preloader\n      // will get stuck in an infinite loop. The child module's Injector will look to\n      // its parent `Injector` when it doesn't find any ROUTES so it will return routes\n      // for it's parent module instead.\n      rawRoutes = injector.get(ROUTES, [], {\n        optional: true,\n        self: true\n      }).flat();\n    }\n    const routes = rawRoutes.map(standardizeConfig);\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(routes, route.path, requireStandaloneComponents);\n    return {\n      routes,\n      injector\n    };\n  }));\n}\nfunction isWrappedDefaultExport(value) {\n  // We use `in` here with a string key `'default'`, because we expect `DefaultExport` objects to be\n  // dynamically imported ES modules with a spec-mandated `default` key. Thus we don't expect that\n  // `default` will be a renamed property.\n  return value && typeof value === 'object' && 'default' in value;\n}\nfunction maybeUnwrapDefaultExport(input) {\n  // As per `isWrappedDefaultExport`, the `default` key here is generated by the browser and not\n  // subject to property renaming, so we reference it with bracket access.\n  return isWrappedDefaultExport(input) ? input['default'] : input;\n}\n\n/**\n * @description\n *\n * Provides a way to migrate AngularJS applications to Angular.\n *\n * @publicApi\n */\nlet UrlHandlingStrategy = /*#__PURE__*/(() => {\n  class UrlHandlingStrategy {\n    static {\n      this.ɵfac = function UrlHandlingStrategy_Factory(t) {\n        return new (t || UrlHandlingStrategy)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: UrlHandlingStrategy,\n        factory: () => (() => inject(DefaultUrlHandlingStrategy))(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return UrlHandlingStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @publicApi\n */\nlet DefaultUrlHandlingStrategy = /*#__PURE__*/(() => {\n  class DefaultUrlHandlingStrategy {\n    shouldProcessUrl(url) {\n      return true;\n    }\n    extract(url) {\n      return url;\n    }\n    merge(newUrlPart, wholeUrl) {\n      return newUrlPart;\n    }\n    static {\n      this.ɵfac = function DefaultUrlHandlingStrategy_Factory(t) {\n        return new (t || DefaultUrlHandlingStrategy)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DefaultUrlHandlingStrategy,\n        factory: DefaultUrlHandlingStrategy.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DefaultUrlHandlingStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/// <reference types=\"dom-view-transitions\" />\nconst CREATE_VIEW_TRANSITION = /*#__PURE__*/new InjectionToken(ngDevMode ? 'view transition helper' : '');\nconst VIEW_TRANSITION_OPTIONS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'view transition options' : '');\n/**\n * A helper function for using browser view transitions. This function skips the call to\n * `startViewTransition` if the browser does not support it.\n *\n * @returns A Promise that resolves when the view transition callback begins.\n */\nfunction createViewTransition(injector, from, to) {\n  const transitionOptions = injector.get(VIEW_TRANSITION_OPTIONS);\n  const document = injector.get(DOCUMENT);\n  // Create promises outside the Angular zone to avoid causing extra change detections\n  return injector.get(NgZone).runOutsideAngular(() => {\n    if (!document.startViewTransition || transitionOptions.skipNextTransition) {\n      transitionOptions.skipNextTransition = false;\n      return Promise.resolve();\n    }\n    let resolveViewTransitionStarted;\n    const viewTransitionStarted = new Promise(resolve => {\n      resolveViewTransitionStarted = resolve;\n    });\n    const transition = document.startViewTransition(() => {\n      resolveViewTransitionStarted();\n      // We don't actually update dom within the transition callback. The resolving of the above\n      // promise unblocks the Router navigation, which synchronously activates and deactivates\n      // routes (the DOM update). This view transition waits for the next change detection to\n      // complete (below), which includes the update phase of the routed components.\n      return createRenderPromise(injector);\n    });\n    const {\n      onViewTransitionCreated\n    } = transitionOptions;\n    if (onViewTransitionCreated) {\n      runInInjectionContext(injector, () => onViewTransitionCreated({\n        transition,\n        from,\n        to\n      }));\n    }\n    return viewTransitionStarted;\n  });\n}\n/**\n * Creates a promise that resolves after next render.\n */\nfunction createRenderPromise(injector) {\n  return new Promise(resolve => {\n    afterNextRender(resolve, {\n      injector\n    });\n  });\n}\nlet NavigationTransitions = /*#__PURE__*/(() => {\n  class NavigationTransitions {\n    get hasRequestedNavigation() {\n      return this.navigationId !== 0;\n    }\n    constructor() {\n      this.currentNavigation = null;\n      this.currentTransition = null;\n      this.lastSuccessfulNavigation = null;\n      /**\n       * These events are used to communicate back to the Router about the state of the transition. The\n       * Router wants to respond to these events in various ways. Because the `NavigationTransition`\n       * class is not public, this event subject is not publicly exposed.\n       */\n      this.events = new Subject();\n      /**\n       * Used to abort the current transition with an error.\n       */\n      this.transitionAbortSubject = new Subject();\n      this.configLoader = inject(RouterConfigLoader);\n      this.environmentInjector = inject(EnvironmentInjector);\n      this.urlSerializer = inject(UrlSerializer);\n      this.rootContexts = inject(ChildrenOutletContexts);\n      this.location = inject(Location);\n      this.inputBindingEnabled = inject(INPUT_BINDER, {\n        optional: true\n      }) !== null;\n      this.titleStrategy = inject(TitleStrategy);\n      this.options = inject(ROUTER_CONFIGURATION, {\n        optional: true\n      }) || {};\n      this.paramsInheritanceStrategy = this.options.paramsInheritanceStrategy || 'emptyOnly';\n      this.urlHandlingStrategy = inject(UrlHandlingStrategy);\n      this.createViewTransition = inject(CREATE_VIEW_TRANSITION, {\n        optional: true\n      });\n      this.navigationId = 0;\n      /**\n       * Hook that enables you to pause navigation after the preactivation phase.\n       * Used by `RouterModule`.\n       *\n       * @internal\n       */\n      this.afterPreactivation = () => of(void 0);\n      /** @internal */\n      this.rootComponentType = null;\n      const onLoadStart = r => this.events.next(new RouteConfigLoadStart(r));\n      const onLoadEnd = r => this.events.next(new RouteConfigLoadEnd(r));\n      this.configLoader.onLoadEndListener = onLoadEnd;\n      this.configLoader.onLoadStartListener = onLoadStart;\n    }\n    complete() {\n      this.transitions?.complete();\n    }\n    handleNavigationRequest(request) {\n      const id = ++this.navigationId;\n      this.transitions?.next({\n        ...this.transitions.value,\n        ...request,\n        id\n      });\n    }\n    setupNavigations(router, initialUrlTree, initialRouterState) {\n      this.transitions = new BehaviorSubject({\n        id: 0,\n        currentUrlTree: initialUrlTree,\n        currentRawUrl: initialUrlTree,\n        extractedUrl: this.urlHandlingStrategy.extract(initialUrlTree),\n        urlAfterRedirects: this.urlHandlingStrategy.extract(initialUrlTree),\n        rawUrl: initialUrlTree,\n        extras: {},\n        resolve: null,\n        reject: null,\n        promise: Promise.resolve(true),\n        source: IMPERATIVE_NAVIGATION,\n        restoredState: null,\n        currentSnapshot: initialRouterState.snapshot,\n        targetSnapshot: null,\n        currentRouterState: initialRouterState,\n        targetRouterState: null,\n        guards: {\n          canActivateChecks: [],\n          canDeactivateChecks: []\n        },\n        guardsResult: null\n      });\n      return this.transitions.pipe(filter(t => t.id !== 0),\n      // Extract URL\n      map(t => ({\n        ...t,\n        extractedUrl: this.urlHandlingStrategy.extract(t.rawUrl)\n      })),\n      // Using switchMap so we cancel executing navigations when a new one comes in\n      switchMap(overallTransitionState => {\n        this.currentTransition = overallTransitionState;\n        let completed = false;\n        let errored = false;\n        return of(overallTransitionState).pipe(\n        // Store the Navigation object\n        tap(t => {\n          this.currentNavigation = {\n            id: t.id,\n            initialUrl: t.rawUrl,\n            extractedUrl: t.extractedUrl,\n            trigger: t.source,\n            extras: t.extras,\n            previousNavigation: !this.lastSuccessfulNavigation ? null : {\n              ...this.lastSuccessfulNavigation,\n              previousNavigation: null\n            }\n          };\n        }), switchMap(t => {\n          const urlTransition = !router.navigated || this.isUpdatingInternalState() || this.isUpdatedBrowserUrl();\n          const onSameUrlNavigation = t.extras.onSameUrlNavigation ?? router.onSameUrlNavigation;\n          if (!urlTransition && onSameUrlNavigation !== 'reload') {\n            const reason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation to ${t.rawUrl} was ignored because it is the same as the current Router URL.` : '';\n            this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.rawUrl), reason, NavigationSkippedCode.IgnoredSameUrlNavigation));\n            t.resolve(null);\n            return EMPTY;\n          }\n          if (this.urlHandlingStrategy.shouldProcessUrl(t.rawUrl)) {\n            return of(t).pipe(\n            // Fire NavigationStart event\n            switchMap(t => {\n              const transition = this.transitions?.getValue();\n              this.events.next(new NavigationStart(t.id, this.urlSerializer.serialize(t.extractedUrl), t.source, t.restoredState));\n              if (transition !== this.transitions?.getValue()) {\n                return EMPTY;\n              }\n              // This delay is required to match old behavior that forced\n              // navigation to always be async\n              return Promise.resolve(t);\n            }),\n            // Recognize\n            recognize(this.environmentInjector, this.configLoader, this.rootComponentType, router.config, this.urlSerializer, this.paramsInheritanceStrategy),\n            // Update URL if in `eager` update mode\n            tap(t => {\n              overallTransitionState.targetSnapshot = t.targetSnapshot;\n              overallTransitionState.urlAfterRedirects = t.urlAfterRedirects;\n              this.currentNavigation = {\n                ...this.currentNavigation,\n                finalUrl: t.urlAfterRedirects\n              };\n              // Fire RoutesRecognized\n              const routesRecognized = new RoutesRecognized(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n              this.events.next(routesRecognized);\n            }));\n          } else if (urlTransition && this.urlHandlingStrategy.shouldProcessUrl(t.currentRawUrl)) {\n            /* When the current URL shouldn't be processed, but the previous one\n             * was, we handle this \"error condition\" by navigating to the\n             * previously successful URL, but leaving the URL intact.*/\n            const {\n              id,\n              extractedUrl,\n              source,\n              restoredState,\n              extras\n            } = t;\n            const navStart = new NavigationStart(id, this.urlSerializer.serialize(extractedUrl), source, restoredState);\n            this.events.next(navStart);\n            const targetSnapshot = createEmptyState(this.rootComponentType).snapshot;\n            this.currentTransition = overallTransitionState = {\n              ...t,\n              targetSnapshot,\n              urlAfterRedirects: extractedUrl,\n              extras: {\n                ...extras,\n                skipLocationChange: false,\n                replaceUrl: false\n              }\n            };\n            this.currentNavigation.finalUrl = extractedUrl;\n            return of(overallTransitionState);\n          } else {\n            /* When neither the current or previous URL can be processed, do\n             * nothing other than update router's internal reference to the\n             * current \"settled\" URL. This way the next navigation will be coming\n             * from the current URL in the browser.\n             */\n            const reason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation was ignored because the UrlHandlingStrategy` + ` indicated neither the current URL ${t.currentRawUrl} nor target URL ${t.rawUrl} should be processed.` : '';\n            this.events.next(new NavigationSkipped(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, NavigationSkippedCode.IgnoredByUrlHandlingStrategy));\n            t.resolve(null);\n            return EMPTY;\n          }\n        }),\n        // --- GUARDS ---\n        tap(t => {\n          const guardsStart = new GuardsCheckStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n          this.events.next(guardsStart);\n        }), map(t => {\n          this.currentTransition = overallTransitionState = {\n            ...t,\n            guards: getAllRouteGuards(t.targetSnapshot, t.currentSnapshot, this.rootContexts)\n          };\n          return overallTransitionState;\n        }), checkGuards(this.environmentInjector, evt => this.events.next(evt)), tap(t => {\n          overallTransitionState.guardsResult = t.guardsResult;\n          if (isUrlTree(t.guardsResult)) {\n            throw redirectingNavigationError(this.urlSerializer, t.guardsResult);\n          }\n          const guardsEnd = new GuardsCheckEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot, !!t.guardsResult);\n          this.events.next(guardsEnd);\n        }), filter(t => {\n          if (!t.guardsResult) {\n            this.cancelNavigationTransition(t, '', NavigationCancellationCode.GuardRejected);\n            return false;\n          }\n          return true;\n        }),\n        // --- RESOLVE ---\n        switchTap(t => {\n          if (t.guards.canActivateChecks.length) {\n            return of(t).pipe(tap(t => {\n              const resolveStart = new ResolveStart(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n              this.events.next(resolveStart);\n            }), switchMap(t => {\n              let dataResolved = false;\n              return of(t).pipe(resolveData(this.paramsInheritanceStrategy, this.environmentInjector), tap({\n                next: () => dataResolved = true,\n                complete: () => {\n                  if (!dataResolved) {\n                    this.cancelNavigationTransition(t, typeof ngDevMode === 'undefined' || ngDevMode ? `At least one route resolver didn't emit any value.` : '', NavigationCancellationCode.NoDataFromResolver);\n                  }\n                }\n              }));\n            }), tap(t => {\n              const resolveEnd = new ResolveEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects), t.targetSnapshot);\n              this.events.next(resolveEnd);\n            }));\n          }\n          return undefined;\n        }),\n        // --- LOAD COMPONENTS ---\n        switchTap(t => {\n          const loadComponents = route => {\n            const loaders = [];\n            if (route.routeConfig?.loadComponent && !route.routeConfig._loadedComponent) {\n              loaders.push(this.configLoader.loadComponent(route.routeConfig).pipe(tap(loadedComponent => {\n                route.component = loadedComponent;\n              }), map(() => void 0)));\n            }\n            for (const child of route.children) {\n              loaders.push(...loadComponents(child));\n            }\n            return loaders;\n          };\n          return combineLatest(loadComponents(t.targetSnapshot.root)).pipe(defaultIfEmpty(null), take(1));\n        }), switchTap(() => this.afterPreactivation()), switchMap(() => {\n          const {\n            currentSnapshot,\n            targetSnapshot\n          } = overallTransitionState;\n          const viewTransitionStarted = this.createViewTransition?.(this.environmentInjector, currentSnapshot.root, targetSnapshot.root);\n          // If view transitions are enabled, block the navigation until the view\n          // transition callback starts. Otherwise, continue immediately.\n          return viewTransitionStarted ? from(viewTransitionStarted).pipe(map(() => overallTransitionState)) : of(overallTransitionState);\n        }), map(t => {\n          const targetRouterState = createRouterState(router.routeReuseStrategy, t.targetSnapshot, t.currentRouterState);\n          this.currentTransition = overallTransitionState = {\n            ...t,\n            targetRouterState\n          };\n          this.currentNavigation.targetRouterState = targetRouterState;\n          return overallTransitionState;\n        }), tap(() => {\n          this.events.next(new BeforeActivateRoutes());\n        }), activateRoutes(this.rootContexts, router.routeReuseStrategy, evt => this.events.next(evt), this.inputBindingEnabled),\n        // Ensure that if some observable used to drive the transition doesn't\n        // complete, the navigation still finalizes This should never happen, but\n        // this is done as a safety measure to avoid surfacing this error (#49567).\n        take(1), tap({\n          next: t => {\n            completed = true;\n            this.lastSuccessfulNavigation = this.currentNavigation;\n            this.events.next(new NavigationEnd(t.id, this.urlSerializer.serialize(t.extractedUrl), this.urlSerializer.serialize(t.urlAfterRedirects)));\n            this.titleStrategy?.updateTitle(t.targetRouterState.snapshot);\n            t.resolve(true);\n          },\n          complete: () => {\n            completed = true;\n          }\n        }),\n        // There used to be a lot more logic happening directly within the\n        // transition Observable. Some of this logic has been refactored out to\n        // other places but there may still be errors that happen there. This gives\n        // us a way to cancel the transition from the outside. This may also be\n        // required in the future to support something like the abort signal of the\n        // Navigation API where the navigation gets aborted from outside the\n        // transition.\n        takeUntil(this.transitionAbortSubject.pipe(tap(err => {\n          throw err;\n        }))), finalize(() => {\n          /* When the navigation stream finishes either through error or success,\n           * we set the `completed` or `errored` flag. However, there are some\n           * situations where we could get here without either of those being set.\n           * For instance, a redirect during NavigationStart. Therefore, this is a\n           * catch-all to make sure the NavigationCancel event is fired when a\n           * navigation gets cancelled but not caught by other means. */\n          if (!completed && !errored) {\n            const cancelationReason = typeof ngDevMode === 'undefined' || ngDevMode ? `Navigation ID ${overallTransitionState.id} is not equal to the current navigation id ${this.navigationId}` : '';\n            this.cancelNavigationTransition(overallTransitionState, cancelationReason, NavigationCancellationCode.SupersededByNewNavigation);\n          }\n          // Only clear current navigation if it is still set to the one that\n          // finalized.\n          if (this.currentTransition?.id === overallTransitionState.id) {\n            this.currentNavigation = null;\n            this.currentTransition = null;\n          }\n        }), catchError(e => {\n          errored = true;\n          /* This error type is issued during Redirect, and is handled as a\n           * cancellation rather than an error. */\n          if (isNavigationCancelingError(e)) {\n            this.events.next(new NavigationCancel(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e.message, e.cancellationCode));\n            // When redirecting, we need to delay resolving the navigation\n            // promise and push it to the redirect navigation\n            if (!isRedirectingNavigationCancelingError(e)) {\n              overallTransitionState.resolve(false);\n            } else {\n              this.events.next(new RedirectRequest(e.url));\n            }\n            /* All other errors should reset to the router's internal URL reference\n             * to the pre-error state. */\n          } else {\n            this.events.next(new NavigationError(overallTransitionState.id, this.urlSerializer.serialize(overallTransitionState.extractedUrl), e, overallTransitionState.targetSnapshot ?? undefined));\n            try {\n              overallTransitionState.resolve(router.errorHandler(e));\n            } catch (ee) {\n              // TODO(atscott): consider flipping the default behavior of\n              // resolveNavigationPromiseOnError to be `resolve(false)` when\n              // undefined. This is the most sane thing to do given that\n              // applications very rarely handle the promise rejection and, as a\n              // result, would get \"unhandled promise rejection\" console logs.\n              // The vast majority of applications would not be affected by this\n              // change so omitting a migration seems reasonable. Instead,\n              // applications that rely on rejection can specifically opt-in to the\n              // old behavior.\n              if (this.options.resolveNavigationPromiseOnError) {\n                overallTransitionState.resolve(false);\n              } else {\n                overallTransitionState.reject(ee);\n              }\n            }\n          }\n          return EMPTY;\n        }));\n        // casting because `pipe` returns observable({}) when called with 8+ arguments\n      }));\n    }\n    cancelNavigationTransition(t, reason, code) {\n      const navCancel = new NavigationCancel(t.id, this.urlSerializer.serialize(t.extractedUrl), reason, code);\n      this.events.next(navCancel);\n      t.resolve(false);\n    }\n    /**\n     * @returns Whether we're navigating to somewhere that is not what the Router is\n     * currently set to.\n     */\n    isUpdatingInternalState() {\n      // TODO(atscott): The serializer should likely be used instead of\n      // `UrlTree.toString()`. Custom serializers are often written to handle\n      // things better than the default one (objects, for example will be\n      // [Object object] with the custom serializer and be \"the same\" when they\n      // aren't).\n      // (Same for isUpdatedBrowserUrl)\n      return this.currentTransition?.extractedUrl.toString() !== this.currentTransition?.currentUrlTree.toString();\n    }\n    /**\n     * @returns Whether we're updating the browser URL to something new (navigation is going\n     * to somewhere not displayed in the URL bar and we will update the URL\n     * bar if navigation succeeds).\n     */\n    isUpdatedBrowserUrl() {\n      // The extracted URL is the part of the URL that this application cares about. `extract` may\n      // return only part of the browser URL and that part may have not changed even if some other\n      // portion of the URL did.\n      const extractedBrowserUrl = this.urlHandlingStrategy.extract(this.urlSerializer.parse(this.location.path(true)));\n      return extractedBrowserUrl.toString() !== this.currentTransition?.extractedUrl.toString() && !this.currentTransition?.extras.skipLocationChange;\n    }\n    static {\n      this.ɵfac = function NavigationTransitions_Factory(t) {\n        return new (t || NavigationTransitions)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: NavigationTransitions,\n        factory: NavigationTransitions.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return NavigationTransitions;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isBrowserTriggeredNavigation(source) {\n  return source !== IMPERATIVE_NAVIGATION;\n}\n\n/**\n * @description\n *\n * Provides a way to customize when activated routes get reused.\n *\n * @publicApi\n */\nlet RouteReuseStrategy = /*#__PURE__*/(() => {\n  class RouteReuseStrategy {\n    static {\n      this.ɵfac = function RouteReuseStrategy_Factory(t) {\n        return new (t || RouteReuseStrategy)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RouteReuseStrategy,\n        factory: () => (() => inject(DefaultRouteReuseStrategy))(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return RouteReuseStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * This base route reuse strategy only reuses routes when the matched router configs are\n * identical. This prevents components from being destroyed and recreated\n * when just the route parameters, query parameters or fragment change\n * (that is, the existing component is _reused_).\n *\n * This strategy does not store any routes for later reuse.\n *\n * Angular uses this strategy by default.\n *\n *\n * It can be used as a base class for custom route reuse strategies, i.e. you can create your own\n * class that extends the `BaseRouteReuseStrategy` one.\n * @publicApi\n */\nclass BaseRouteReuseStrategy {\n  /**\n   * Whether the given route should detach for later reuse.\n   * Always returns false for `BaseRouteReuseStrategy`.\n   * */\n  shouldDetach(route) {\n    return false;\n  }\n  /**\n   * A no-op; the route is never stored since this strategy never detaches routes for later re-use.\n   */\n  store(route, detachedTree) {}\n  /** Returns `false`, meaning the route (and its subtree) is never reattached */\n  shouldAttach(route) {\n    return false;\n  }\n  /** Returns `null` because this strategy does not store routes for later re-use. */\n  retrieve(route) {\n    return null;\n  }\n  /**\n   * Determines if a route should be reused.\n   * This strategy returns `true` when the future route config and current route config are\n   * identical.\n   */\n  shouldReuseRoute(future, curr) {\n    return future.routeConfig === curr.routeConfig;\n  }\n}\nlet DefaultRouteReuseStrategy = /*#__PURE__*/(() => {\n  class DefaultRouteReuseStrategy extends BaseRouteReuseStrategy {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵDefaultRouteReuseStrategy_BaseFactory;\n        return function DefaultRouteReuseStrategy_Factory(t) {\n          return (ɵDefaultRouteReuseStrategy_BaseFactory || (ɵDefaultRouteReuseStrategy_BaseFactory = i0.ɵɵgetInheritedFactory(DefaultRouteReuseStrategy)))(t || DefaultRouteReuseStrategy);\n        };\n      })();\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: DefaultRouteReuseStrategy,\n        factory: DefaultRouteReuseStrategy.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return DefaultRouteReuseStrategy;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet StateManager = /*#__PURE__*/(() => {\n  class StateManager {\n    static {\n      this.ɵfac = function StateManager_Factory(t) {\n        return new (t || StateManager)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: StateManager,\n        factory: () => (() => inject(HistoryStateManager))(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return StateManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet HistoryStateManager = /*#__PURE__*/(() => {\n  class HistoryStateManager extends StateManager {\n    constructor() {\n      super(...arguments);\n      this.location = inject(Location);\n      this.urlSerializer = inject(UrlSerializer);\n      this.options = inject(ROUTER_CONFIGURATION, {\n        optional: true\n      }) || {};\n      this.canceledNavigationResolution = this.options.canceledNavigationResolution || 'replace';\n      this.urlHandlingStrategy = inject(UrlHandlingStrategy);\n      this.urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n      this.currentUrlTree = new UrlTree();\n      this.rawUrlTree = this.currentUrlTree;\n      /**\n       * The id of the currently active page in the router.\n       * Updated to the transition's target id on a successful navigation.\n       *\n       * This is used to track what page the router last activated. When an attempted navigation fails,\n       * the router can then use this to compute how to restore the state back to the previously active\n       * page.\n       */\n      this.currentPageId = 0;\n      this.lastSuccessfulId = -1;\n      this.routerState = createEmptyState(null);\n      this.stateMemento = this.createStateMemento();\n    }\n    getCurrentUrlTree() {\n      return this.currentUrlTree;\n    }\n    getRawUrlTree() {\n      return this.rawUrlTree;\n    }\n    restoredState() {\n      return this.location.getState();\n    }\n    /**\n     * The ɵrouterPageId of whatever page is currently active in the browser history. This is\n     * important for computing the target page id for new navigations because we need to ensure each\n     * page id in the browser history is 1 more than the previous entry.\n     */\n    get browserPageId() {\n      if (this.canceledNavigationResolution !== 'computed') {\n        return this.currentPageId;\n      }\n      return this.restoredState()?.ɵrouterPageId ?? this.currentPageId;\n    }\n    getRouterState() {\n      return this.routerState;\n    }\n    createStateMemento() {\n      return {\n        rawUrlTree: this.rawUrlTree,\n        currentUrlTree: this.currentUrlTree,\n        routerState: this.routerState\n      };\n    }\n    registerNonRouterCurrentEntryChangeListener(listener) {\n      return this.location.subscribe(event => {\n        if (event['type'] === 'popstate') {\n          listener(event['url'], event.state);\n        }\n      });\n    }\n    handleRouterEvent(e, currentTransition) {\n      if (e instanceof NavigationStart) {\n        this.stateMemento = this.createStateMemento();\n      } else if (e instanceof NavigationSkipped) {\n        this.rawUrlTree = currentTransition.initialUrl;\n      } else if (e instanceof RoutesRecognized) {\n        if (this.urlUpdateStrategy === 'eager') {\n          if (!currentTransition.extras.skipLocationChange) {\n            const rawUrl = this.urlHandlingStrategy.merge(currentTransition.finalUrl, currentTransition.initialUrl);\n            this.setBrowserUrl(rawUrl, currentTransition);\n          }\n        }\n      } else if (e instanceof BeforeActivateRoutes) {\n        this.currentUrlTree = currentTransition.finalUrl;\n        this.rawUrlTree = this.urlHandlingStrategy.merge(currentTransition.finalUrl, currentTransition.initialUrl);\n        this.routerState = currentTransition.targetRouterState;\n        if (this.urlUpdateStrategy === 'deferred') {\n          if (!currentTransition.extras.skipLocationChange) {\n            this.setBrowserUrl(this.rawUrlTree, currentTransition);\n          }\n        }\n      } else if (e instanceof NavigationCancel && (e.code === NavigationCancellationCode.GuardRejected || e.code === NavigationCancellationCode.NoDataFromResolver)) {\n        this.restoreHistory(currentTransition);\n      } else if (e instanceof NavigationError) {\n        this.restoreHistory(currentTransition, true);\n      } else if (e instanceof NavigationEnd) {\n        this.lastSuccessfulId = e.id;\n        this.currentPageId = this.browserPageId;\n      }\n    }\n    setBrowserUrl(url, transition) {\n      const path = this.urlSerializer.serialize(url);\n      if (this.location.isCurrentPathEqualTo(path) || !!transition.extras.replaceUrl) {\n        // replacements do not update the target page\n        const currentBrowserPageId = this.browserPageId;\n        const state = {\n          ...transition.extras.state,\n          ...this.generateNgRouterState(transition.id, currentBrowserPageId)\n        };\n        this.location.replaceState(path, '', state);\n      } else {\n        const state = {\n          ...transition.extras.state,\n          ...this.generateNgRouterState(transition.id, this.browserPageId + 1)\n        };\n        this.location.go(path, '', state);\n      }\n    }\n    /**\n     * Performs the necessary rollback action to restore the browser URL to the\n     * state before the transition.\n     */\n    restoreHistory(navigation, restoringFromCaughtError = false) {\n      if (this.canceledNavigationResolution === 'computed') {\n        const currentBrowserPageId = this.browserPageId;\n        const targetPagePosition = this.currentPageId - currentBrowserPageId;\n        if (targetPagePosition !== 0) {\n          this.location.historyGo(targetPagePosition);\n        } else if (this.currentUrlTree === navigation.finalUrl && targetPagePosition === 0) {\n          // We got to the activation stage (where currentUrlTree is set to the navigation's\n          // finalUrl), but we weren't moving anywhere in history (skipLocationChange or replaceUrl).\n          // We still need to reset the router state back to what it was when the navigation started.\n          this.resetState(navigation);\n          this.resetUrlToCurrentUrlTree();\n        } else {\n          // The browser URL and router state was not updated before the navigation cancelled so\n          // there's no restoration needed.\n        }\n      } else if (this.canceledNavigationResolution === 'replace') {\n        // TODO(atscott): It seems like we should _always_ reset the state here. It would be a no-op\n        // for `deferred` navigations that haven't change the internal state yet because guards\n        // reject. For 'eager' navigations, it seems like we also really should reset the state\n        // because the navigation was cancelled. Investigate if this can be done by running TGP.\n        if (restoringFromCaughtError) {\n          this.resetState(navigation);\n        }\n        this.resetUrlToCurrentUrlTree();\n      }\n    }\n    resetState(navigation) {\n      this.routerState = this.stateMemento.routerState;\n      this.currentUrlTree = this.stateMemento.currentUrlTree;\n      // Note here that we use the urlHandlingStrategy to get the reset `rawUrlTree` because it may be\n      // configured to handle only part of the navigation URL. This means we would only want to reset\n      // the part of the navigation handled by the Angular router rather than the whole URL. In\n      // addition, the URLHandlingStrategy may be configured to specifically preserve parts of the URL\n      // when merging, such as the query params so they are not lost on a refresh.\n      this.rawUrlTree = this.urlHandlingStrategy.merge(this.currentUrlTree, navigation.finalUrl ?? this.rawUrlTree);\n    }\n    resetUrlToCurrentUrlTree() {\n      this.location.replaceState(this.urlSerializer.serialize(this.rawUrlTree), '', this.generateNgRouterState(this.lastSuccessfulId, this.currentPageId));\n    }\n    generateNgRouterState(navigationId, routerPageId) {\n      if (this.canceledNavigationResolution === 'computed') {\n        return {\n          navigationId,\n          ɵrouterPageId: routerPageId\n        };\n      }\n      return {\n        navigationId\n      };\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵHistoryStateManager_BaseFactory;\n        return function HistoryStateManager_Factory(t) {\n          return (ɵHistoryStateManager_BaseFactory || (ɵHistoryStateManager_BaseFactory = i0.ɵɵgetInheritedFactory(HistoryStateManager)))(t || HistoryStateManager);\n        };\n      })();\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HistoryStateManager,\n        factory: HistoryStateManager.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return HistoryStateManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar NavigationResult = /*#__PURE__*/function (NavigationResult) {\n  NavigationResult[NavigationResult[\"COMPLETE\"] = 0] = \"COMPLETE\";\n  NavigationResult[NavigationResult[\"FAILED\"] = 1] = \"FAILED\";\n  NavigationResult[NavigationResult[\"REDIRECTING\"] = 2] = \"REDIRECTING\";\n  return NavigationResult;\n}(NavigationResult || {});\n/**\n * Performs the given action once the router finishes its next/current navigation.\n *\n * The navigation is considered complete under the following conditions:\n * - `NavigationCancel` event emits and the code is not `NavigationCancellationCode.Redirect` or\n * `NavigationCancellationCode.SupersededByNewNavigation`. In these cases, the\n * redirecting/superseding navigation must finish.\n * - `NavigationError`, `NavigationEnd`, or `NavigationSkipped` event emits\n */\nfunction afterNextNavigation(router, action) {\n  router.events.pipe(filter(e => e instanceof NavigationEnd || e instanceof NavigationCancel || e instanceof NavigationError || e instanceof NavigationSkipped), map(e => {\n    if (e instanceof NavigationEnd || e instanceof NavigationSkipped) {\n      return NavigationResult.COMPLETE;\n    }\n    const redirecting = e instanceof NavigationCancel ? e.code === NavigationCancellationCode.Redirect || e.code === NavigationCancellationCode.SupersededByNewNavigation : false;\n    return redirecting ? NavigationResult.REDIRECTING : NavigationResult.FAILED;\n  }), filter(result => result !== NavigationResult.REDIRECTING), take(1)).subscribe(() => {\n    action();\n  });\n}\nfunction defaultErrorHandler(error) {\n  throw error;\n}\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `true`\n * (exact = true).\n */\nconst exactMatchOptions = {\n  paths: 'exact',\n  fragment: 'ignored',\n  matrixParams: 'ignored',\n  queryParams: 'exact'\n};\n/**\n * The equivalent `IsActiveMatchOptions` options for `Router.isActive` is called with `false`\n * (exact = false).\n */\nconst subsetMatchOptions = {\n  paths: 'subset',\n  fragment: 'ignored',\n  matrixParams: 'ignored',\n  queryParams: 'subset'\n};\n/**\n * @description\n *\n * A service that provides navigation among views and URL manipulation capabilities.\n *\n * @see {@link Route}\n * @see [Routing and Navigation Guide](guide/router).\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet Router = /*#__PURE__*/(() => {\n  class Router {\n    get currentUrlTree() {\n      return this.stateManager.getCurrentUrlTree();\n    }\n    get rawUrlTree() {\n      return this.stateManager.getRawUrlTree();\n    }\n    /**\n     * An event stream for routing events.\n     */\n    get events() {\n      // TODO(atscott): This _should_ be events.asObservable(). However, this change requires internal\n      // cleanup: tests are doing `(route.events as Subject<Event>).next(...)`. This isn't\n      // allowed/supported but we still have to fix these or file bugs against the teams before making\n      // the change.\n      return this._events;\n    }\n    /**\n     * The current state of routing in this NgModule.\n     */\n    get routerState() {\n      return this.stateManager.getRouterState();\n    }\n    constructor() {\n      this.disposed = false;\n      this.isNgZoneEnabled = false;\n      this.console = inject(ɵConsole);\n      this.stateManager = inject(StateManager);\n      this.options = inject(ROUTER_CONFIGURATION, {\n        optional: true\n      }) || {};\n      this.pendingTasks = inject(ɵPendingTasks);\n      this.urlUpdateStrategy = this.options.urlUpdateStrategy || 'deferred';\n      this.navigationTransitions = inject(NavigationTransitions);\n      this.urlSerializer = inject(UrlSerializer);\n      this.location = inject(Location);\n      this.urlHandlingStrategy = inject(UrlHandlingStrategy);\n      /**\n       * The private `Subject` type for the public events exposed in the getter. This is used internally\n       * to push events to. The separate field allows us to expose separate types in the public API\n       * (i.e., an Observable rather than the Subject).\n       */\n      this._events = new Subject();\n      /**\n       * A handler for navigation errors in this NgModule.\n       *\n       * @deprecated Subscribe to the `Router` events and watch for `NavigationError` instead.\n       *   `provideRouter` has the `withNavigationErrorHandler` feature to make this easier.\n       * @see {@link withNavigationErrorHandler}\n       */\n      this.errorHandler = this.options.errorHandler || defaultErrorHandler;\n      /**\n       * True if at least one navigation event has occurred,\n       * false otherwise.\n       */\n      this.navigated = false;\n      /**\n       * A strategy for re-using routes.\n       *\n       * @deprecated Configure using `providers` instead:\n       *   `{provide: RouteReuseStrategy, useClass: MyStrategy}`.\n       */\n      this.routeReuseStrategy = inject(RouteReuseStrategy);\n      /**\n       * How to handle a navigation request to the current URL.\n       *\n       *\n       * @deprecated Configure this through `provideRouter` or `RouterModule.forRoot` instead.\n       * @see {@link withRouterConfig}\n       * @see {@link provideRouter}\n       * @see {@link RouterModule}\n       */\n      this.onSameUrlNavigation = this.options.onSameUrlNavigation || 'ignore';\n      this.config = inject(ROUTES, {\n        optional: true\n      })?.flat() ?? [];\n      /**\n       * Indicates whether the application has opted in to binding Router data to component inputs.\n       *\n       * This option is enabled by the `withComponentInputBinding` feature of `provideRouter` or\n       * `bindToComponentInputs` in the `ExtraOptions` of `RouterModule.forRoot`.\n       */\n      this.componentInputBindingEnabled = !!inject(INPUT_BINDER, {\n        optional: true\n      });\n      this.eventsSubscription = new Subscription();\n      this.isNgZoneEnabled = inject(NgZone) instanceof NgZone && NgZone.isInAngularZone();\n      this.resetConfig(this.config);\n      this.navigationTransitions.setupNavigations(this, this.currentUrlTree, this.routerState).subscribe({\n        error: e => {\n          this.console.warn(ngDevMode ? `Unhandled Navigation Error: ${e}` : e);\n        }\n      });\n      this.subscribeToNavigationEvents();\n    }\n    subscribeToNavigationEvents() {\n      const subscription = this.navigationTransitions.events.subscribe(e => {\n        try {\n          const currentTransition = this.navigationTransitions.currentTransition;\n          const currentNavigation = this.navigationTransitions.currentNavigation;\n          if (currentTransition !== null && currentNavigation !== null) {\n            this.stateManager.handleRouterEvent(e, currentNavigation);\n            if (e instanceof NavigationCancel && e.code !== NavigationCancellationCode.Redirect && e.code !== NavigationCancellationCode.SupersededByNewNavigation) {\n              // It seems weird that `navigated` is set to `true` when the navigation is rejected,\n              // however it's how things were written initially. Investigation would need to be done\n              // to determine if this can be removed.\n              this.navigated = true;\n            } else if (e instanceof NavigationEnd) {\n              this.navigated = true;\n            } else if (e instanceof RedirectRequest) {\n              const mergedTree = this.urlHandlingStrategy.merge(e.url, currentTransition.currentRawUrl);\n              const extras = {\n                // Persist transient navigation info from the original navigation request.\n                info: currentTransition.extras.info,\n                skipLocationChange: currentTransition.extras.skipLocationChange,\n                // The URL is already updated at this point if we have 'eager' URL\n                // updates or if the navigation was triggered by the browser (back\n                // button, URL bar, etc). We want to replace that item in history\n                // if the navigation is rejected.\n                replaceUrl: this.urlUpdateStrategy === 'eager' || isBrowserTriggeredNavigation(currentTransition.source)\n              };\n              this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras, {\n                resolve: currentTransition.resolve,\n                reject: currentTransition.reject,\n                promise: currentTransition.promise\n              });\n            }\n          }\n          // Note that it's important to have the Router process the events _before_ the event is\n          // pushed through the public observable. This ensures the correct router state is in place\n          // before applications observe the events.\n          if (isPublicRouterEvent(e)) {\n            this._events.next(e);\n          }\n        } catch (e) {\n          this.navigationTransitions.transitionAbortSubject.next(e);\n        }\n      });\n      this.eventsSubscription.add(subscription);\n    }\n    /** @internal */\n    resetRootComponentType(rootComponentType) {\n      // TODO: vsavkin router 4.0 should make the root component set to null\n      // this will simplify the lifecycle of the router.\n      this.routerState.root.component = rootComponentType;\n      this.navigationTransitions.rootComponentType = rootComponentType;\n    }\n    /**\n     * Sets up the location change listener and performs the initial navigation.\n     */\n    initialNavigation() {\n      this.setUpLocationChangeListener();\n      if (!this.navigationTransitions.hasRequestedNavigation) {\n        this.navigateToSyncWithBrowser(this.location.path(true), IMPERATIVE_NAVIGATION, this.stateManager.restoredState());\n      }\n    }\n    /**\n     * Sets up the location change listener. This listener detects navigations triggered from outside\n     * the Router (the browser back/forward buttons, for example) and schedules a corresponding Router\n     * navigation so that the correct events, guards, etc. are triggered.\n     */\n    setUpLocationChangeListener() {\n      // Don't need to use Zone.wrap any more, because zone.js\n      // already patch onPopState, so location change callback will\n      // run into ngZone\n      this.nonRouterCurrentEntryChangeSubscription ??= this.stateManager.registerNonRouterCurrentEntryChangeListener((url, state) => {\n        // The `setTimeout` was added in #12160 and is likely to support Angular/AngularJS\n        // hybrid apps.\n        setTimeout(() => {\n          this.navigateToSyncWithBrowser(url, 'popstate', state);\n        }, 0);\n      });\n    }\n    /**\n     * Schedules a router navigation to synchronize Router state with the browser state.\n     *\n     * This is done as a response to a popstate event and the initial navigation. These\n     * two scenarios represent times when the browser URL/state has been updated and\n     * the Router needs to respond to ensure its internal state matches.\n     */\n    navigateToSyncWithBrowser(url, source, state) {\n      const extras = {\n        replaceUrl: true\n      };\n      // TODO: restoredState should always include the entire state, regardless\n      // of navigationId. This requires a breaking change to update the type on\n      // NavigationStart’s restoredState, which currently requires navigationId\n      // to always be present. The Router used to only restore history state if\n      // a navigationId was present.\n      // The stored navigationId is used by the RouterScroller to retrieve the scroll\n      // position for the page.\n      const restoredState = state?.navigationId ? state : null;\n      // Separate to NavigationStart.restoredState, we must also restore the state to\n      // history.state and generate a new navigationId, since it will be overwritten\n      if (state) {\n        const stateCopy = {\n          ...state\n        };\n        delete stateCopy.navigationId;\n        delete stateCopy.ɵrouterPageId;\n        if (Object.keys(stateCopy).length !== 0) {\n          extras.state = stateCopy;\n        }\n      }\n      const urlTree = this.parseUrl(url);\n      this.scheduleNavigation(urlTree, source, restoredState, extras);\n    }\n    /** The current URL. */\n    get url() {\n      return this.serializeUrl(this.currentUrlTree);\n    }\n    /**\n     * Returns the current `Navigation` object when the router is navigating,\n     * and `null` when idle.\n     */\n    getCurrentNavigation() {\n      return this.navigationTransitions.currentNavigation;\n    }\n    /**\n     * The `Navigation` object of the most recent navigation to succeed and `null` if there\n     *     has not been a successful navigation yet.\n     */\n    get lastSuccessfulNavigation() {\n      return this.navigationTransitions.lastSuccessfulNavigation;\n    }\n    /**\n     * Resets the route configuration used for navigation and generating links.\n     *\n     * @param config The route array for the new configuration.\n     *\n     * @usageNotes\n     *\n     * ```\n     * router.resetConfig([\n     *  { path: 'team/:id', component: TeamCmp, children: [\n     *    { path: 'simple', component: SimpleCmp },\n     *    { path: 'user/:name', component: UserCmp }\n     *  ]}\n     * ]);\n     * ```\n     */\n    resetConfig(config) {\n      (typeof ngDevMode === 'undefined' || ngDevMode) && validateConfig(config);\n      this.config = config.map(standardizeConfig);\n      this.navigated = false;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.dispose();\n    }\n    /** Disposes of the router. */\n    dispose() {\n      this.navigationTransitions.complete();\n      if (this.nonRouterCurrentEntryChangeSubscription) {\n        this.nonRouterCurrentEntryChangeSubscription.unsubscribe();\n        this.nonRouterCurrentEntryChangeSubscription = undefined;\n      }\n      this.disposed = true;\n      this.eventsSubscription.unsubscribe();\n    }\n    /**\n     * Appends URL segments to the current URL tree to create a new URL tree.\n     *\n     * @param commands An array of URL fragments with which to construct the new URL tree.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL tree or the one provided  in the `relativeTo`\n     * property of the options object, if supplied.\n     * @param navigationExtras Options that control the navigation strategy.\n     * @returns The new URL tree.\n     *\n     * @usageNotes\n     *\n     * ```\n     * // create /team/33/user/11\n     * router.createUrlTree(['/team', 33, 'user', 11]);\n     *\n     * // create /team/33;expand=true/user/11\n     * router.createUrlTree(['/team', 33, {expand: true}, 'user', 11]);\n     *\n     * // you can collapse static segments like this (this works only with the first passed-in value):\n     * router.createUrlTree(['/team/33/user', userId]);\n     *\n     * // If the first segment can contain slashes, and you do not want the router to split it,\n     * // you can do the following:\n     * router.createUrlTree([{segmentPath: '/one/two'}]);\n     *\n     * // create /team/33/(user/11//right:chat)\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: 'chat'}}]);\n     *\n     * // remove the right secondary node\n     * router.createUrlTree(['/team', 33, {outlets: {primary: 'user/11', right: null}}]);\n     *\n     * // assuming the current url is `/team/33/user/11` and the route points to `user/11`\n     *\n     * // navigate to /team/33/user/11/details\n     * router.createUrlTree(['details'], {relativeTo: route});\n     *\n     * // navigate to /team/33/user/22\n     * router.createUrlTree(['../22'], {relativeTo: route});\n     *\n     * // navigate to /team/44/user/22\n     * router.createUrlTree(['../../team/44/user/22'], {relativeTo: route});\n     *\n     * Note that a value of `null` or `undefined` for `relativeTo` indicates that the\n     * tree should be created relative to the root.\n     * ```\n     */\n    createUrlTree(commands, navigationExtras = {}) {\n      const {\n        relativeTo,\n        queryParams,\n        fragment,\n        queryParamsHandling,\n        preserveFragment\n      } = navigationExtras;\n      const f = preserveFragment ? this.currentUrlTree.fragment : fragment;\n      let q = null;\n      switch (queryParamsHandling) {\n        case 'merge':\n          q = {\n            ...this.currentUrlTree.queryParams,\n            ...queryParams\n          };\n          break;\n        case 'preserve':\n          q = this.currentUrlTree.queryParams;\n          break;\n        default:\n          q = queryParams || null;\n      }\n      if (q !== null) {\n        q = this.removeEmptyProps(q);\n      }\n      let relativeToUrlSegmentGroup;\n      try {\n        const relativeToSnapshot = relativeTo ? relativeTo.snapshot : this.routerState.snapshot.root;\n        relativeToUrlSegmentGroup = createSegmentGroupFromRoute(relativeToSnapshot);\n      } catch (e) {\n        // This is strictly for backwards compatibility with tests that create\n        // invalid `ActivatedRoute` mocks.\n        // Note: the difference between having this fallback for invalid `ActivatedRoute` setups and\n        // just throwing is ~500 test failures. Fixing all of those tests by hand is not feasible at\n        // the moment.\n        if (typeof commands[0] !== 'string' || !commands[0].startsWith('/')) {\n          // Navigations that were absolute in the old way of creating UrlTrees\n          // would still work because they wouldn't attempt to match the\n          // segments in the `ActivatedRoute` to the `currentUrlTree` but\n          // instead just replace the root segment with the navigation result.\n          // Non-absolute navigations would fail to apply the commands because\n          // the logic could not find the segment to replace (so they'd act like there were no\n          // commands).\n          commands = [];\n        }\n        relativeToUrlSegmentGroup = this.currentUrlTree.root;\n      }\n      return createUrlTreeFromSegmentGroup(relativeToUrlSegmentGroup, commands, q, f ?? null);\n    }\n    /**\n     * Navigates to a view using an absolute route path.\n     *\n     * @param url An absolute path for a defined route. The function does not apply any delta to the\n     *     current URL.\n     * @param extras An object containing properties that modify the navigation strategy.\n     *\n     * @returns A Promise that resolves to 'true' when navigation succeeds,\n     * to 'false' when navigation fails, or is rejected on error.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to an absolute path.\n     *\n     * ```\n     * router.navigateByUrl(\"/team/33/user/11\");\n     *\n     * // Navigate without updating the URL\n     * router.navigateByUrl(\"/team/33/user/11\", { skipLocationChange: true });\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/router)\n     *\n     */\n    navigateByUrl(url, extras = {\n      skipLocationChange: false\n    }) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (this.isNgZoneEnabled && !NgZone.isInAngularZone()) {\n          this.console.warn(`Navigation triggered outside Angular zone, did you forget to call 'ngZone.run()'?`);\n        }\n      }\n      const urlTree = isUrlTree(url) ? url : this.parseUrl(url);\n      const mergedTree = this.urlHandlingStrategy.merge(urlTree, this.rawUrlTree);\n      return this.scheduleNavigation(mergedTree, IMPERATIVE_NAVIGATION, null, extras);\n    }\n    /**\n     * Navigate based on the provided array of commands and a starting point.\n     * If no starting route is provided, the navigation is absolute.\n     *\n     * @param commands An array of URL fragments with which to construct the target URL.\n     * If the path is static, can be the literal URL string. For a dynamic path, pass an array of path\n     * segments, followed by the parameters for each segment.\n     * The fragments are applied to the current URL or the one provided  in the `relativeTo` property\n     * of the options object, if supplied.\n     * @param extras An options object that determines how the URL should be constructed or\n     *     interpreted.\n     *\n     * @returns A Promise that resolves to `true` when navigation succeeds, or `false` when navigation\n     *     fails. The Promise is rejected when an error occurs if `resolveNavigationPromiseOnError` is\n     * not `true`.\n     *\n     * @usageNotes\n     *\n     * The following calls request navigation to a dynamic route path relative to the current URL.\n     *\n     * ```\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route});\n     *\n     * // Navigate without updating the URL, overriding the default behavior\n     * router.navigate(['team', 33, 'user', 11], {relativeTo: route, skipLocationChange: true});\n     * ```\n     *\n     * @see [Routing and Navigation guide](guide/router)\n     *\n     */\n    navigate(commands, extras = {\n      skipLocationChange: false\n    }) {\n      validateCommands(commands);\n      return this.navigateByUrl(this.createUrlTree(commands, extras), extras);\n    }\n    /** Serializes a `UrlTree` into a string */\n    serializeUrl(url) {\n      return this.urlSerializer.serialize(url);\n    }\n    /** Parses a string into a `UrlTree` */\n    parseUrl(url) {\n      try {\n        return this.urlSerializer.parse(url);\n      } catch {\n        return this.urlSerializer.parse('/');\n      }\n    }\n    isActive(url, matchOptions) {\n      let options;\n      if (matchOptions === true) {\n        options = {\n          ...exactMatchOptions\n        };\n      } else if (matchOptions === false) {\n        options = {\n          ...subsetMatchOptions\n        };\n      } else {\n        options = matchOptions;\n      }\n      if (isUrlTree(url)) {\n        return containsTree(this.currentUrlTree, url, options);\n      }\n      const urlTree = this.parseUrl(url);\n      return containsTree(this.currentUrlTree, urlTree, options);\n    }\n    removeEmptyProps(params) {\n      return Object.entries(params).reduce((result, [key, value]) => {\n        if (value !== null && value !== undefined) {\n          result[key] = value;\n        }\n        return result;\n      }, {});\n    }\n    scheduleNavigation(rawUrl, source, restoredState, extras, priorPromise) {\n      if (this.disposed) {\n        return Promise.resolve(false);\n      }\n      let resolve;\n      let reject;\n      let promise;\n      if (priorPromise) {\n        resolve = priorPromise.resolve;\n        reject = priorPromise.reject;\n        promise = priorPromise.promise;\n      } else {\n        promise = new Promise((res, rej) => {\n          resolve = res;\n          reject = rej;\n        });\n      }\n      // Indicate that the navigation is happening.\n      const taskId = this.pendingTasks.add();\n      afterNextNavigation(this, () => {\n        // Remove pending task in a microtask to allow for cancelled\n        // initial navigations and redirects within the same task.\n        queueMicrotask(() => this.pendingTasks.remove(taskId));\n      });\n      this.navigationTransitions.handleNavigationRequest({\n        source,\n        restoredState,\n        currentUrlTree: this.currentUrlTree,\n        currentRawUrl: this.currentUrlTree,\n        rawUrl,\n        extras,\n        resolve,\n        reject,\n        promise,\n        currentSnapshot: this.routerState.snapshot,\n        currentRouterState: this.routerState\n      });\n      // Make sure that the error is propagated even though `processNavigations` catch\n      // handler does not rethrow\n      return promise.catch(e => {\n        return Promise.reject(e);\n      });\n    }\n    static {\n      this.ɵfac = function Router_Factory(t) {\n        return new (t || Router)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Router,\n        factory: Router.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Router;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction validateCommands(commands) {\n  for (let i = 0; i < commands.length; i++) {\n    const cmd = commands[i];\n    if (cmd == null) {\n      throw new ɵRuntimeError(4008 /* RuntimeErrorCode.NULLISH_COMMAND */, (typeof ngDevMode === 'undefined' || ngDevMode) && `The requested path contains ${cmd} segment at index ${i}`);\n    }\n  }\n}\nfunction isPublicRouterEvent(e) {\n  return !(e instanceof BeforeActivateRoutes) && !(e instanceof RedirectRequest);\n}\n\n/**\n * @description\n *\n * When applied to an element in a template, makes that element a link\n * that initiates navigation to a route. Navigation opens one or more routed components\n * in one or more `<router-outlet>` locations on the page.\n *\n * Given a route configuration `[{ path: 'user/:name', component: UserCmp }]`,\n * the following creates a static link to the route:\n * `<a routerLink=\"/user/bob\">link to user component</a>`\n *\n * You can use dynamic values to generate the link.\n * For a dynamic link, pass an array of path segments,\n * followed by the params for each segment.\n * For example, `['/team', teamId, 'user', userName, {details: true}]`\n * generates a link to `/team/11/user/bob;details=true`.\n *\n * Multiple static segments can be merged into one term and combined with dynamic segments.\n * For example, `['/team/11/user', userName, {details: true}]`\n *\n * The input that you provide to the link is treated as a delta to the current URL.\n * For instance, suppose the current URL is `/user/(box//aux:team)`.\n * The link `<a [routerLink]=\"['/user/jim']\">Jim</a>` creates the URL\n * `/user/(jim//aux:team)`.\n * See {@link Router#createUrlTree} for more information.\n *\n * @usageNotes\n *\n * You can use absolute or relative paths in a link, set query parameters,\n * control how parameters are handled, and keep a history of navigation states.\n *\n * ### Relative link paths\n *\n * The first segment name can be prepended with `/`, `./`, or `../`.\n * * If the first segment begins with `/`, the router looks up the route from the root of the\n *   app.\n * * If the first segment begins with `./`, or doesn't begin with a slash, the router\n *   looks in the children of the current activated route.\n * * If the first segment begins with `../`, the router goes up one level in the route tree.\n *\n * ### Setting and handling query params and fragments\n *\n * The following link adds a query parameter and a fragment to the generated URL:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" fragment=\"education\">\n *   link to user component\n * </a>\n * ```\n * By default, the directive constructs the new URL using the given query parameters.\n * The example generates the link: `/user/bob?debug=true#education`.\n *\n * You can instruct the directive to handle query parameters differently\n * by specifying the `queryParamsHandling` option in the link.\n * Allowed values are:\n *\n *  - `'merge'`: Merge the given `queryParams` into the current query params.\n *  - `'preserve'`: Preserve the current query params.\n *\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [queryParams]=\"{debug: true}\" queryParamsHandling=\"merge\">\n *   link to user component\n * </a>\n * ```\n *\n * See {@link UrlCreationOptions#queryParamsHandling}.\n *\n * ### Preserving navigation history\n *\n * You can provide a `state` value to be persisted to the browser's\n * [`History.state` property](https://developer.mozilla.org/en-US/docs/Web/API/History#Properties).\n * For example:\n *\n * ```\n * <a [routerLink]=\"['/user/bob']\" [state]=\"{tracingId: 123}\">\n *   link to user component\n * </a>\n * ```\n *\n * Use {@link Router#getCurrentNavigation} to retrieve a saved\n * navigation-state value. For example, to capture the `tracingId` during the `NavigationStart`\n * event:\n *\n * ```\n * // Get NavigationStart events\n * router.events.pipe(filter(e => e instanceof NavigationStart)).subscribe(e => {\n *   const navigation = router.getCurrentNavigation();\n *   tracingService.trace({id: navigation.extras.state.tracingId});\n * });\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterLink = /*#__PURE__*/(() => {\n  class RouterLink {\n    constructor(router, route, tabIndexAttribute, renderer, el, locationStrategy) {\n      this.router = router;\n      this.route = route;\n      this.tabIndexAttribute = tabIndexAttribute;\n      this.renderer = renderer;\n      this.el = el;\n      this.locationStrategy = locationStrategy;\n      /**\n       * Represents an `href` attribute value applied to a host element,\n       * when a host element is `<a>`. For other tags, the value is `null`.\n       */\n      this.href = null;\n      this.commands = null;\n      /** @internal */\n      this.onChanges = new Subject();\n      /**\n       * Passed to {@link Router#createUrlTree} as part of the\n       * `UrlCreationOptions`.\n       * @see {@link UrlCreationOptions#preserveFragment}\n       * @see {@link Router#createUrlTree}\n       */\n      this.preserveFragment = false;\n      /**\n       * Passed to {@link Router#navigateByUrl} as part of the\n       * `NavigationBehaviorOptions`.\n       * @see {@link NavigationBehaviorOptions#skipLocationChange}\n       * @see {@link Router#navigateByUrl}\n       */\n      this.skipLocationChange = false;\n      /**\n       * Passed to {@link Router#navigateByUrl} as part of the\n       * `NavigationBehaviorOptions`.\n       * @see {@link NavigationBehaviorOptions#replaceUrl}\n       * @see {@link Router#navigateByUrl}\n       */\n      this.replaceUrl = false;\n      const tagName = el.nativeElement.tagName?.toLowerCase();\n      this.isAnchorElement = tagName === 'a' || tagName === 'area';\n      if (this.isAnchorElement) {\n        this.subscription = router.events.subscribe(s => {\n          if (s instanceof NavigationEnd) {\n            this.updateHref();\n          }\n        });\n      } else {\n        this.setTabIndexIfNotOnNativeEl('0');\n      }\n    }\n    /**\n     * Modifies the tab index if there was not a tabindex attribute on the element during\n     * instantiation.\n     */\n    setTabIndexIfNotOnNativeEl(newTabIndex) {\n      if (this.tabIndexAttribute != null /* both `null` and `undefined` */ || this.isAnchorElement) {\n        return;\n      }\n      this.applyAttributeValue('tabindex', newTabIndex);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this.isAnchorElement) {\n        this.updateHref();\n      }\n      // This is subscribed to by `RouterLinkActive` so that it knows to update when there are changes\n      // to the RouterLinks it's tracking.\n      this.onChanges.next(this);\n    }\n    /**\n     * Commands to pass to {@link Router#createUrlTree}.\n     *   - **array**: commands to pass to {@link Router#createUrlTree}.\n     *   - **string**: shorthand for array of commands with just the string, i.e. `['/route']`\n     *   - **null|undefined**: effectively disables the `routerLink`\n     * @see {@link Router#createUrlTree}\n     */\n    set routerLink(commands) {\n      if (commands != null) {\n        this.commands = Array.isArray(commands) ? commands : [commands];\n        this.setTabIndexIfNotOnNativeEl('0');\n      } else {\n        this.commands = null;\n        this.setTabIndexIfNotOnNativeEl(null);\n      }\n    }\n    /** @nodoc */\n    onClick(button, ctrlKey, shiftKey, altKey, metaKey) {\n      const urlTree = this.urlTree;\n      if (urlTree === null) {\n        return true;\n      }\n      if (this.isAnchorElement) {\n        if (button !== 0 || ctrlKey || shiftKey || altKey || metaKey) {\n          return true;\n        }\n        if (typeof this.target === 'string' && this.target != '_self') {\n          return true;\n        }\n      }\n      const extras = {\n        skipLocationChange: this.skipLocationChange,\n        replaceUrl: this.replaceUrl,\n        state: this.state,\n        info: this.info\n      };\n      this.router.navigateByUrl(urlTree, extras);\n      // Return `false` for `<a>` elements to prevent default action\n      // and cancel the native behavior, since the navigation is handled\n      // by the Router.\n      return !this.isAnchorElement;\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.subscription?.unsubscribe();\n    }\n    updateHref() {\n      const urlTree = this.urlTree;\n      this.href = urlTree !== null && this.locationStrategy ? this.locationStrategy?.prepareExternalUrl(this.router.serializeUrl(urlTree)) : null;\n      const sanitizedValue = this.href === null ? null :\n      // This class represents a directive that can be added to both `<a>` elements,\n      // as well as other elements. As a result, we can't define security context at\n      // compile time. So the security context is deferred to runtime.\n      // The `ɵɵsanitizeUrlOrResourceUrl` selects the necessary sanitizer function\n      // based on the tag and property names. The logic mimics the one from\n      // `packages/compiler/src/schema/dom_security_schema.ts`, which is used at compile time.\n      //\n      // Note: we should investigate whether we can switch to using `@HostBinding('attr.href')`\n      // instead of applying a value via a renderer, after a final merge of the\n      // `RouterLinkWithHref` directive.\n      ɵɵsanitizeUrlOrResourceUrl(this.href, this.el.nativeElement.tagName.toLowerCase(), 'href');\n      this.applyAttributeValue('href', sanitizedValue);\n    }\n    applyAttributeValue(attrName, attrValue) {\n      const renderer = this.renderer;\n      const nativeElement = this.el.nativeElement;\n      if (attrValue !== null) {\n        renderer.setAttribute(nativeElement, attrName, attrValue);\n      } else {\n        renderer.removeAttribute(nativeElement, attrName);\n      }\n    }\n    get urlTree() {\n      if (this.commands === null) {\n        return null;\n      }\n      return this.router.createUrlTree(this.commands, {\n        // If the `relativeTo` input is not defined, we want to use `this.route` by default.\n        // Otherwise, we should use the value provided by the user in the input.\n        relativeTo: this.relativeTo !== undefined ? this.relativeTo : this.route,\n        queryParams: this.queryParams,\n        fragment: this.fragment,\n        queryParamsHandling: this.queryParamsHandling,\n        preserveFragment: this.preserveFragment\n      });\n    }\n    static {\n      this.ɵfac = function RouterLink_Factory(t) {\n        return new (t || RouterLink)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(ActivatedRoute), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i3.LocationStrategy));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RouterLink,\n        selectors: [[\"\", \"routerLink\", \"\"]],\n        hostVars: 1,\n        hostBindings: function RouterLink_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function RouterLink_click_HostBindingHandler($event) {\n              return ctx.onClick($event.button, $event.ctrlKey, $event.shiftKey, $event.altKey, $event.metaKey);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵattribute(\"target\", ctx.target);\n          }\n        },\n        inputs: {\n          target: \"target\",\n          queryParams: \"queryParams\",\n          fragment: \"fragment\",\n          queryParamsHandling: \"queryParamsHandling\",\n          state: \"state\",\n          info: \"info\",\n          relativeTo: \"relativeTo\",\n          preserveFragment: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"preserveFragment\", \"preserveFragment\", booleanAttribute],\n          skipLocationChange: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"skipLocationChange\", \"skipLocationChange\", booleanAttribute],\n          replaceUrl: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"replaceUrl\", \"replaceUrl\", booleanAttribute],\n          routerLink: \"routerLink\"\n        },\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return RouterLink;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n *\n * @description\n *\n * Tracks whether the linked route of an element is currently active, and allows you\n * to specify one or more CSS classes to add to the element when the linked route\n * is active.\n *\n * Use this directive to create a visual distinction for elements associated with an active route.\n * For example, the following code highlights the word \"Bob\" when the router\n * activates the associated route:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\">Bob</a>\n * ```\n *\n * Whenever the URL is either '/user' or '/user/bob', the \"active-link\" class is\n * added to the anchor tag. If the URL changes, the class is removed.\n *\n * You can set more than one class using a space-separated string or an array.\n * For example:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"class1 class2\">Bob</a>\n * <a routerLink=\"/user/bob\" [routerLinkActive]=\"['class1', 'class2']\">Bob</a>\n * ```\n *\n * To add the classes only when the URL matches the link exactly, add the option `exact: true`:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact:\n * true}\">Bob</a>\n * ```\n *\n * To directly check the `isActive` status of the link, assign the `RouterLinkActive`\n * instance to a template variable.\n * For example, the following checks the status without assigning any CSS classes:\n *\n * ```\n * <a routerLink=\"/user/bob\" routerLinkActive #rla=\"routerLinkActive\">\n *   Bob {{ rla.isActive ? '(already open)' : ''}}\n * </a>\n * ```\n *\n * You can apply the `RouterLinkActive` directive to an ancestor of linked elements.\n * For example, the following sets the active-link class on the `<div>`  parent tag\n * when the URL is either '/user/jim' or '/user/bob'.\n *\n * ```\n * <div routerLinkActive=\"active-link\" [routerLinkActiveOptions]=\"{exact: true}\">\n *   <a routerLink=\"/user/jim\">Jim</a>\n *   <a routerLink=\"/user/bob\">Bob</a>\n * </div>\n * ```\n *\n * The `RouterLinkActive` directive can also be used to set the aria-current attribute\n * to provide an alternative distinction for active elements to visually impaired users.\n *\n * For example, the following code adds the 'active' class to the Home Page link when it is\n * indeed active and in such case also sets its aria-current attribute to 'page':\n *\n * ```\n * <a routerLink=\"/\" routerLinkActive=\"active\" ariaCurrentWhenActive=\"page\">Home Page</a>\n * ```\n *\n * @ngModule RouterModule\n *\n * @publicApi\n */\nlet RouterLinkActive = /*#__PURE__*/(() => {\n  class RouterLinkActive {\n    get isActive() {\n      return this._isActive;\n    }\n    constructor(router, element, renderer, cdr, link) {\n      this.router = router;\n      this.element = element;\n      this.renderer = renderer;\n      this.cdr = cdr;\n      this.link = link;\n      this.classes = [];\n      this._isActive = false;\n      /**\n       * Options to configure how to determine if the router link is active.\n       *\n       * These options are passed to the `Router.isActive()` function.\n       *\n       * @see {@link Router#isActive}\n       */\n      this.routerLinkActiveOptions = {\n        exact: false\n      };\n      /**\n       *\n       * You can use the output `isActiveChange` to get notified each time the link becomes\n       * active or inactive.\n       *\n       * Emits:\n       * true  -> Route is active\n       * false -> Route is inactive\n       *\n       * ```\n       * <a\n       *  routerLink=\"/user/bob\"\n       *  routerLinkActive=\"active-link\"\n       *  (isActiveChange)=\"this.onRouterLinkActive($event)\">Bob</a>\n       * ```\n       */\n      this.isActiveChange = new EventEmitter();\n      this.routerEventsSubscription = router.events.subscribe(s => {\n        if (s instanceof NavigationEnd) {\n          this.update();\n        }\n      });\n    }\n    /** @nodoc */\n    ngAfterContentInit() {\n      // `of(null)` is used to force subscribe body to execute once immediately (like `startWith`).\n      of(this.links.changes, of(null)).pipe(mergeAll()).subscribe(_ => {\n        this.update();\n        this.subscribeToEachLinkOnChanges();\n      });\n    }\n    subscribeToEachLinkOnChanges() {\n      this.linkInputChangesSubscription?.unsubscribe();\n      const allLinkChanges = [...this.links.toArray(), this.link].filter(link => !!link).map(link => link.onChanges);\n      this.linkInputChangesSubscription = from(allLinkChanges).pipe(mergeAll()).subscribe(link => {\n        if (this._isActive !== this.isLinkActive(this.router)(link)) {\n          this.update();\n        }\n      });\n    }\n    set routerLinkActive(data) {\n      const classes = Array.isArray(data) ? data : data.split(' ');\n      this.classes = classes.filter(c => !!c);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this.update();\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.routerEventsSubscription.unsubscribe();\n      this.linkInputChangesSubscription?.unsubscribe();\n    }\n    update() {\n      if (!this.links || !this.router.navigated) return;\n      queueMicrotask(() => {\n        const hasActiveLinks = this.hasActiveLinks();\n        if (this._isActive !== hasActiveLinks) {\n          this._isActive = hasActiveLinks;\n          this.cdr.markForCheck();\n          this.classes.forEach(c => {\n            if (hasActiveLinks) {\n              this.renderer.addClass(this.element.nativeElement, c);\n            } else {\n              this.renderer.removeClass(this.element.nativeElement, c);\n            }\n          });\n          if (hasActiveLinks && this.ariaCurrentWhenActive !== undefined) {\n            this.renderer.setAttribute(this.element.nativeElement, 'aria-current', this.ariaCurrentWhenActive.toString());\n          } else {\n            this.renderer.removeAttribute(this.element.nativeElement, 'aria-current');\n          }\n          // Emit on isActiveChange after classes are updated\n          this.isActiveChange.emit(hasActiveLinks);\n        }\n      });\n    }\n    isLinkActive(router) {\n      const options = isActiveMatchOptions(this.routerLinkActiveOptions) ? this.routerLinkActiveOptions :\n      // While the types should disallow `undefined` here, it's possible without strict inputs\n      this.routerLinkActiveOptions.exact || false;\n      return link => {\n        const urlTree = link.urlTree;\n        return urlTree ? router.isActive(urlTree, options) : false;\n      };\n    }\n    hasActiveLinks() {\n      const isActiveCheckFn = this.isLinkActive(this.router);\n      return this.link && isActiveCheckFn(this.link) || this.links.some(isActiveCheckFn);\n    }\n    static {\n      this.ɵfac = function RouterLinkActive_Factory(t) {\n        return new (t || RouterLinkActive)(i0.ɵɵdirectiveInject(Router), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(RouterLink, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RouterLinkActive,\n        selectors: [[\"\", \"routerLinkActive\", \"\"]],\n        contentQueries: function RouterLinkActive_ContentQueries(rf, ctx, dirIndex) {\n          if (rf & 1) {\n            i0.ɵɵcontentQuery(dirIndex, RouterLink, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.links = _t);\n          }\n        },\n        inputs: {\n          routerLinkActiveOptions: \"routerLinkActiveOptions\",\n          ariaCurrentWhenActive: \"ariaCurrentWhenActive\",\n          routerLinkActive: \"routerLinkActive\"\n        },\n        outputs: {\n          isActiveChange: \"isActiveChange\"\n        },\n        exportAs: [\"routerLinkActive\"],\n        standalone: true,\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return RouterLinkActive;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Use instead of `'paths' in options` to be compatible with property renaming\n */\nfunction isActiveMatchOptions(options) {\n  return !!options.paths;\n}\n\n/**\n * @description\n *\n * Provides a preloading strategy.\n *\n * @publicApi\n */\nclass PreloadingStrategy {}\n/**\n * @description\n *\n * Provides a preloading strategy that preloads all modules as quickly as possible.\n *\n * ```\n * RouterModule.forRoot(ROUTES, {preloadingStrategy: PreloadAllModules})\n * ```\n *\n * @publicApi\n */\nlet PreloadAllModules = /*#__PURE__*/(() => {\n  class PreloadAllModules {\n    preload(route, fn) {\n      return fn().pipe(catchError(() => of(null)));\n    }\n    static {\n      this.ɵfac = function PreloadAllModules_Factory(t) {\n        return new (t || PreloadAllModules)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: PreloadAllModules,\n        factory: PreloadAllModules.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return PreloadAllModules;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n *\n * Provides a preloading strategy that does not preload any modules.\n *\n * This strategy is enabled by default.\n *\n * @publicApi\n */\nlet NoPreloading = /*#__PURE__*/(() => {\n  class NoPreloading {\n    preload(route, fn) {\n      return of(null);\n    }\n    static {\n      this.ɵfac = function NoPreloading_Factory(t) {\n        return new (t || NoPreloading)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: NoPreloading,\n        factory: NoPreloading.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return NoPreloading;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The preloader optimistically loads all router configurations to\n * make navigations into lazily-loaded sections of the application faster.\n *\n * The preloader runs in the background. When the router bootstraps, the preloader\n * starts listening to all navigation events. After every such event, the preloader\n * will check if any configurations can be loaded lazily.\n *\n * If a route is protected by `canLoad` guards, the preloaded will not load it.\n *\n * @publicApi\n */\nlet RouterPreloader = /*#__PURE__*/(() => {\n  class RouterPreloader {\n    constructor(router, compiler, injector, preloadingStrategy, loader) {\n      this.router = router;\n      this.injector = injector;\n      this.preloadingStrategy = preloadingStrategy;\n      this.loader = loader;\n    }\n    setUpPreloading() {\n      this.subscription = this.router.events.pipe(filter(e => e instanceof NavigationEnd), concatMap(() => this.preload())).subscribe(() => {});\n    }\n    preload() {\n      return this.processRoutes(this.injector, this.router.config);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.subscription) {\n        this.subscription.unsubscribe();\n      }\n    }\n    processRoutes(injector, routes) {\n      const res = [];\n      for (const route of routes) {\n        if (route.providers && !route._injector) {\n          route._injector = createEnvironmentInjector(route.providers, injector, `Route: ${route.path}`);\n        }\n        const injectorForCurrentRoute = route._injector ?? injector;\n        const injectorForChildren = route._loadedInjector ?? injectorForCurrentRoute;\n        // Note that `canLoad` is only checked as a condition that prevents `loadChildren` and not\n        // `loadComponent`. `canLoad` guards only block loading of child routes by design. This\n        // happens as a consequence of needing to descend into children for route matching immediately\n        // while component loading is deferred until route activation. Because `canLoad` guards can\n        // have side effects, we cannot execute them here so we instead skip preloading altogether\n        // when present. Lastly, it remains to be decided whether `canLoad` should behave this way\n        // at all. Code splitting and lazy loading is separate from client-side authorization checks\n        // and should not be used as a security measure to prevent loading of code.\n        if (route.loadChildren && !route._loadedRoutes && route.canLoad === undefined || route.loadComponent && !route._loadedComponent) {\n          res.push(this.preloadConfig(injectorForCurrentRoute, route));\n        }\n        if (route.children || route._loadedRoutes) {\n          res.push(this.processRoutes(injectorForChildren, route.children ?? route._loadedRoutes));\n        }\n      }\n      return from(res).pipe(mergeAll());\n    }\n    preloadConfig(injector, route) {\n      return this.preloadingStrategy.preload(route, () => {\n        let loadedChildren$;\n        if (route.loadChildren && route.canLoad === undefined) {\n          loadedChildren$ = this.loader.loadChildren(injector, route);\n        } else {\n          loadedChildren$ = of(null);\n        }\n        const recursiveLoadChildren$ = loadedChildren$.pipe(mergeMap(config => {\n          if (config === null) {\n            return of(void 0);\n          }\n          route._loadedRoutes = config.routes;\n          route._loadedInjector = config.injector;\n          // If the loaded config was a module, use that as the module/module injector going\n          // forward. Otherwise, continue using the current module/module injector.\n          return this.processRoutes(config.injector ?? injector, config.routes);\n        }));\n        if (route.loadComponent && !route._loadedComponent) {\n          const loadComponent$ = this.loader.loadComponent(route);\n          return from([recursiveLoadChildren$, loadComponent$]).pipe(mergeAll());\n        } else {\n          return recursiveLoadChildren$;\n        }\n      });\n    }\n    static {\n      this.ɵfac = function RouterPreloader_Factory(t) {\n        return new (t || RouterPreloader)(i0.ɵɵinject(Router), i0.ɵɵinject(i0.Compiler), i0.ɵɵinject(i0.EnvironmentInjector), i0.ɵɵinject(PreloadingStrategy), i0.ɵɵinject(RouterConfigLoader));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RouterPreloader,\n        factory: RouterPreloader.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return RouterPreloader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst ROUTER_SCROLLER = /*#__PURE__*/new InjectionToken('');\nlet RouterScroller = /*#__PURE__*/(() => {\n  class RouterScroller {\n    /** @nodoc */\n    constructor(urlSerializer, transitions, viewportScroller, zone, options = {}) {\n      this.urlSerializer = urlSerializer;\n      this.transitions = transitions;\n      this.viewportScroller = viewportScroller;\n      this.zone = zone;\n      this.options = options;\n      this.lastId = 0;\n      this.lastSource = 'imperative';\n      this.restoredId = 0;\n      this.store = {};\n      // Default both options to 'disabled'\n      options.scrollPositionRestoration ||= 'disabled';\n      options.anchorScrolling ||= 'disabled';\n    }\n    init() {\n      // we want to disable the automatic scrolling because having two places\n      // responsible for scrolling results race conditions, especially given\n      // that browser don't implement this behavior consistently\n      if (this.options.scrollPositionRestoration !== 'disabled') {\n        this.viewportScroller.setHistoryScrollRestoration('manual');\n      }\n      this.routerEventsSubscription = this.createScrollEvents();\n      this.scrollEventsSubscription = this.consumeScrollEvents();\n    }\n    createScrollEvents() {\n      return this.transitions.events.subscribe(e => {\n        if (e instanceof NavigationStart) {\n          // store the scroll position of the current stable navigations.\n          this.store[this.lastId] = this.viewportScroller.getScrollPosition();\n          this.lastSource = e.navigationTrigger;\n          this.restoredId = e.restoredState ? e.restoredState.navigationId : 0;\n        } else if (e instanceof NavigationEnd) {\n          this.lastId = e.id;\n          this.scheduleScrollEvent(e, this.urlSerializer.parse(e.urlAfterRedirects).fragment);\n        } else if (e instanceof NavigationSkipped && e.code === NavigationSkippedCode.IgnoredSameUrlNavigation) {\n          this.lastSource = undefined;\n          this.restoredId = 0;\n          this.scheduleScrollEvent(e, this.urlSerializer.parse(e.url).fragment);\n        }\n      });\n    }\n    consumeScrollEvents() {\n      return this.transitions.events.subscribe(e => {\n        if (!(e instanceof Scroll)) return;\n        // a popstate event. The pop state event will always ignore anchor scrolling.\n        if (e.position) {\n          if (this.options.scrollPositionRestoration === 'top') {\n            this.viewportScroller.scrollToPosition([0, 0]);\n          } else if (this.options.scrollPositionRestoration === 'enabled') {\n            this.viewportScroller.scrollToPosition(e.position);\n          }\n          // imperative navigation \"forward\"\n        } else {\n          if (e.anchor && this.options.anchorScrolling === 'enabled') {\n            this.viewportScroller.scrollToAnchor(e.anchor);\n          } else if (this.options.scrollPositionRestoration !== 'disabled') {\n            this.viewportScroller.scrollToPosition([0, 0]);\n          }\n        }\n      });\n    }\n    scheduleScrollEvent(routerEvent, anchor) {\n      this.zone.runOutsideAngular(() => {\n        // The scroll event needs to be delayed until after change detection. Otherwise, we may\n        // attempt to restore the scroll position before the router outlet has fully rendered the\n        // component by executing its update block of the template function.\n        setTimeout(() => {\n          this.zone.run(() => {\n            this.transitions.events.next(new Scroll(routerEvent, this.lastSource === 'popstate' ? this.store[this.restoredId] : null, anchor));\n          });\n        }, 0);\n      });\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.routerEventsSubscription?.unsubscribe();\n      this.scrollEventsSubscription?.unsubscribe();\n    }\n    static {\n      this.ɵfac = function RouterScroller_Factory(t) {\n        i0.ɵɵinvalidFactory();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RouterScroller,\n        factory: RouterScroller.ɵfac\n      });\n    }\n  }\n  return RouterScroller;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Sets up providers necessary to enable `Router` functionality for the application.\n * Allows to configure a set of routes as well as extra features that should be enabled.\n *\n * @usageNotes\n *\n * Basic example of how you can add a Router to your application:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent, {\n *   providers: [provideRouter(appRoutes)]\n * });\n * ```\n *\n * You can also enable optional features in the Router by adding functions from the `RouterFeatures`\n * type:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes,\n *         withDebugTracing(),\n *         withRouterConfig({paramsInheritanceStrategy: 'always'}))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link RouterFeatures}\n *\n * @publicApi\n * @param routes A set of `Route`s to use for the application routing table.\n * @param features Optional features to configure additional router behaviors.\n * @returns A set of providers to setup a Router.\n */\nfunction provideRouter(routes, ...features) {\n  return makeEnvironmentProviders([{\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }, typeof ngDevMode === 'undefined' || ngDevMode ? {\n    provide: ROUTER_IS_PROVIDED,\n    useValue: true\n  } : [], {\n    provide: ActivatedRoute,\n    useFactory: rootRoute,\n    deps: [Router]\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useFactory: getBootstrapListener\n  }, features.map(feature => feature.ɵproviders)]);\n}\nfunction rootRoute(router) {\n  return router.routerState.root;\n}\n/**\n * Helper function to create an object that represents a Router feature.\n */\nfunction routerFeature(kind, providers) {\n  return {\n    ɵkind: kind,\n    ɵproviders: providers\n  };\n}\n/**\n * An Injection token used to indicate whether `provideRouter` or `RouterModule.forRoot` was ever\n * called.\n */\nconst ROUTER_IS_PROVIDED = /*#__PURE__*/new InjectionToken('', {\n  providedIn: 'root',\n  factory: () => false\n});\nconst routerIsProvidedDevModeCheck = {\n  provide: ENVIRONMENT_INITIALIZER,\n  multi: true,\n  useFactory() {\n    return () => {\n      if (!inject(ROUTER_IS_PROVIDED)) {\n        console.warn('`provideRoutes` was called without `provideRouter` or `RouterModule.forRoot`. ' + 'This is likely a mistake.');\n      }\n    };\n  }\n};\n/**\n * Registers a [DI provider](guide/glossary#provider) for a set of routes.\n * @param routes The route configuration to provide.\n *\n * @usageNotes\n *\n * ```\n * @NgModule({\n *   providers: [provideRoutes(ROUTES)]\n * })\n * class LazyLoadedChildModule {}\n * ```\n *\n * @deprecated If necessary, provide routes using the `ROUTES` `InjectionToken`.\n * @see {@link ROUTES}\n * @publicApi\n */\nfunction provideRoutes(routes) {\n  return [{\n    provide: ROUTES,\n    multi: true,\n    useValue: routes\n  }, typeof ngDevMode === 'undefined' || ngDevMode ? routerIsProvidedDevModeCheck : []];\n}\n/**\n * Enables customizable scrolling behavior for router navigations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable scrolling feature:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withInMemoryScrolling())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link ViewportScroller}\n *\n * @publicApi\n * @param options Set of configuration parameters to customize scrolling behavior, see\n *     `InMemoryScrollingOptions` for additional information.\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withInMemoryScrolling(options = {}) {\n  const providers = [{\n    provide: ROUTER_SCROLLER,\n    useFactory: () => {\n      const viewportScroller = inject(ViewportScroller);\n      const zone = inject(NgZone);\n      const transitions = inject(NavigationTransitions);\n      const urlSerializer = inject(UrlSerializer);\n      return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, options);\n    }\n  }];\n  return routerFeature(4 /* RouterFeatureKind.InMemoryScrollingFeature */, providers);\n}\nfunction getBootstrapListener() {\n  const injector = inject(Injector);\n  return bootstrappedComponentRef => {\n    const ref = injector.get(ApplicationRef);\n    if (bootstrappedComponentRef !== ref.components[0]) {\n      return;\n    }\n    const router = injector.get(Router);\n    const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n    if (injector.get(INITIAL_NAVIGATION) === 1 /* InitialNavigation.EnabledNonBlocking */) {\n      router.initialNavigation();\n    }\n    injector.get(ROUTER_PRELOADER, null, InjectFlags.Optional)?.setUpPreloading();\n    injector.get(ROUTER_SCROLLER, null, InjectFlags.Optional)?.init();\n    router.resetRootComponentType(ref.componentTypes[0]);\n    if (!bootstrapDone.closed) {\n      bootstrapDone.next();\n      bootstrapDone.complete();\n      bootstrapDone.unsubscribe();\n    }\n  };\n}\n/**\n * A subject used to indicate that the bootstrapping phase is done. When initial navigation is\n * `enabledBlocking`, the first navigation waits until bootstrapping is finished before continuing\n * to the activation phase.\n */\nconst BOOTSTRAP_DONE = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'bootstrap done indicator' : '', {\n  factory: () => {\n    return new Subject();\n  }\n});\nconst INITIAL_NAVIGATION = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'initial navigation' : '', {\n  providedIn: 'root',\n  factory: () => 1 /* InitialNavigation.EnabledNonBlocking */\n});\n/**\n * Configures initial navigation to start before the root component is created.\n *\n * The bootstrap is blocked until the initial navigation is complete. This value is required for\n * [server-side rendering](guide/ssr) to work.\n *\n * @usageNotes\n *\n * Basic example of how you can enable this navigation behavior:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withEnabledBlockingInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @publicApi\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withEnabledBlockingInitialNavigation() {\n  const providers = [{\n    provide: INITIAL_NAVIGATION,\n    useValue: 0 /* InitialNavigation.EnabledBlocking */\n  }, {\n    provide: APP_INITIALIZER,\n    multi: true,\n    deps: [Injector],\n    useFactory: injector => {\n      const locationInitialized = injector.get(LOCATION_INITIALIZED, Promise.resolve());\n      return () => {\n        return locationInitialized.then(() => {\n          return new Promise(resolve => {\n            const router = injector.get(Router);\n            const bootstrapDone = injector.get(BOOTSTRAP_DONE);\n            afterNextNavigation(router, () => {\n              // Unblock APP_INITIALIZER in case the initial navigation was canceled or errored\n              // without a redirect.\n              resolve(true);\n            });\n            injector.get(NavigationTransitions).afterPreactivation = () => {\n              // Unblock APP_INITIALIZER once we get to `afterPreactivation`. At this point, we\n              // assume activation will complete successfully (even though this is not\n              // guaranteed).\n              resolve(true);\n              return bootstrapDone.closed ? of(void 0) : bootstrapDone;\n            };\n            router.initialNavigation();\n          });\n        });\n      };\n    }\n  }];\n  return routerFeature(2 /* RouterFeatureKind.EnabledBlockingInitialNavigationFeature */, providers);\n}\n/**\n * Disables initial navigation.\n *\n * Use if there is a reason to have more control over when the router starts its initial navigation\n * due to some complex initialization logic.\n *\n * @usageNotes\n *\n * Basic example of how you can disable initial navigation:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDisabledInitialNavigation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDisabledInitialNavigation() {\n  const providers = [{\n    provide: APP_INITIALIZER,\n    multi: true,\n    useFactory: () => {\n      const router = inject(Router);\n      return () => {\n        router.setUpLocationChangeListener();\n      };\n    }\n  }, {\n    provide: INITIAL_NAVIGATION,\n    useValue: 2 /* InitialNavigation.Disabled */\n  }];\n  return routerFeature(3 /* RouterFeatureKind.DisabledInitialNavigationFeature */, providers);\n}\n/**\n * Enables logging of all internal navigation events to the console.\n * Extra logging might be useful for debugging purposes to inspect Router event sequence.\n *\n * @usageNotes\n *\n * Basic example of how you can enable debug tracing:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withDebugTracing())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withDebugTracing() {\n  let providers = [];\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    providers = [{\n      provide: ENVIRONMENT_INITIALIZER,\n      multi: true,\n      useFactory: () => {\n        const router = inject(Router);\n        return () => router.events.subscribe(e => {\n          // tslint:disable:no-console\n          console.group?.(`Router Event: ${e.constructor.name}`);\n          console.log(stringifyEvent(e));\n          console.log(e);\n          console.groupEnd?.();\n          // tslint:enable:no-console\n        });\n      }\n    }];\n  } else {\n    providers = [];\n  }\n  return routerFeature(1 /* RouterFeatureKind.DebugTracingFeature */, providers);\n}\nconst ROUTER_PRELOADER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router preloader' : '');\n/**\n * Allows to configure a preloading strategy to use. The strategy is configured by providing a\n * reference to a class that implements a `PreloadingStrategy`.\n *\n * @usageNotes\n *\n * Basic example of how you can configure preloading:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withPreloading(PreloadAllModules))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param preloadingStrategy A reference to a class that implements a `PreloadingStrategy` that\n *     should be used.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withPreloading(preloadingStrategy) {\n  const providers = [{\n    provide: ROUTER_PRELOADER,\n    useExisting: RouterPreloader\n  }, {\n    provide: PreloadingStrategy,\n    useExisting: preloadingStrategy\n  }];\n  return routerFeature(0 /* RouterFeatureKind.PreloadingFeature */, providers);\n}\n/**\n * Allows to provide extra parameters to configure Router.\n *\n * @usageNotes\n *\n * Basic example of how you can provide extra configuration options:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withRouterConfig({\n *          onSameUrlNavigation: 'reload'\n *       }))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n *\n * @param options A set of parameters to configure Router, see `RouterConfigOptions` for\n *     additional information.\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withRouterConfig(options) {\n  const providers = [{\n    provide: ROUTER_CONFIGURATION,\n    useValue: options\n  }];\n  return routerFeature(5 /* RouterFeatureKind.RouterConfigurationFeature */, providers);\n}\n/**\n * Provides the location strategy that uses the URL fragment instead of the history API.\n *\n * @usageNotes\n *\n * Basic example of how you can use the hash location option:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withHashLocation())\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link provideRouter}\n * @see {@link HashLocationStrategy}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withHashLocation() {\n  const providers = [{\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  }];\n  return routerFeature(6 /* RouterFeatureKind.RouterHashLocationFeature */, providers);\n}\n/**\n * Subscribes to the Router's navigation events and calls the given function when a\n * `NavigationError` happens.\n *\n * This function is run inside application's [injection context](guide/dependency-injection-context)\n * so you can use the [`inject`](api/core/inject) function.\n *\n * @usageNotes\n *\n * Basic example of how you can use the error handler option:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withNavigationErrorHandler((e: NavigationError) =>\n * inject(MyErrorTracker).trackError(e)))\n *     ]\n *   }\n * );\n * ```\n *\n * @see {@link NavigationError}\n * @see {@link core/inject}\n * @see {@link runInInjectionContext}\n *\n * @returns A set of providers for use with `provideRouter`.\n *\n * @publicApi\n */\nfunction withNavigationErrorHandler(fn) {\n  const providers = [{\n    provide: ENVIRONMENT_INITIALIZER,\n    multi: true,\n    useValue: () => {\n      const injector = inject(EnvironmentInjector);\n      inject(Router).events.subscribe(e => {\n        if (e instanceof NavigationError) {\n          runInInjectionContext(injector, () => fn(e));\n        }\n      });\n    }\n  }];\n  return routerFeature(7 /* RouterFeatureKind.NavigationErrorHandlerFeature */, providers);\n}\n/**\n * Enables binding information from the `Router` state directly to the inputs of the component in\n * `Route` configurations.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withComponentInputBinding())\n *     ]\n *   }\n * );\n * ```\n *\n * @returns A set of providers for use with `provideRouter`.\n */\nfunction withComponentInputBinding() {\n  const providers = [RoutedComponentInputBinder, {\n    provide: INPUT_BINDER,\n    useExisting: RoutedComponentInputBinder\n  }];\n  return routerFeature(8 /* RouterFeatureKind.ComponentInputBindingFeature */, providers);\n}\n/**\n * Enables view transitions in the Router by running the route activation and deactivation inside of\n * `document.startViewTransition`.\n *\n * Note: The View Transitions API is not available in all browsers. If the browser does not support\n * view transitions, the Router will not attempt to start a view transition and continue processing\n * the navigation as usual.\n *\n * @usageNotes\n *\n * Basic example of how you can enable the feature:\n * ```\n * const appRoutes: Routes = [];\n * bootstrapApplication(AppComponent,\n *   {\n *     providers: [\n *       provideRouter(appRoutes, withViewTransitions())\n *     ]\n *   }\n * );\n * ```\n *\n * @returns A set of providers for use with `provideRouter`.\n * @see https://developer.chrome.com/docs/web-platform/view-transitions/\n * @see https://developer.mozilla.org/en-US/docs/Web/API/View_Transitions_API\n * @experimental\n */\nfunction withViewTransitions(options) {\n  const providers = [{\n    provide: CREATE_VIEW_TRANSITION,\n    useValue: createViewTransition\n  }, {\n    provide: VIEW_TRANSITION_OPTIONS,\n    useValue: {\n      skipNextTransition: !!options?.skipInitialTransition,\n      ...options\n    }\n  }];\n  return routerFeature(9 /* RouterFeatureKind.ViewTransitionsFeature */, providers);\n}\n\n/**\n * The directives defined in the `RouterModule`.\n */\nconst ROUTER_DIRECTIVES = [RouterOutlet, RouterLink, RouterLinkActive, ɵEmptyOutletComponent];\n/**\n * @docsNotRequired\n */\nconst ROUTER_FORROOT_GUARD = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'router duplicate forRoot guard' : 'ROUTER_FORROOT_GUARD');\n// TODO(atscott): All of these except `ActivatedRoute` are `providedIn: 'root'`. They are only kept\n// here to avoid a breaking change whereby the provider order matters based on where the\n// `RouterModule`/`RouterTestingModule` is imported. These can/should be removed as a \"breaking\"\n// change in a major version.\nconst ROUTER_PROVIDERS = [Location, {\n  provide: UrlSerializer,\n  useClass: DefaultUrlSerializer\n}, Router, ChildrenOutletContexts, {\n  provide: ActivatedRoute,\n  useFactory: rootRoute,\n  deps: [Router]\n}, RouterConfigLoader,\n// Only used to warn when `provideRoutes` is used without `RouterModule` or `provideRouter`. Can\n// be removed when `provideRoutes` is removed.\ntypeof ngDevMode === 'undefined' || ngDevMode ? {\n  provide: ROUTER_IS_PROVIDED,\n  useValue: true\n} : []];\n/**\n * @description\n *\n * Adds directives and providers for in-app navigation among views defined in an application.\n * Use the Angular `Router` service to declaratively specify application states and manage state\n * transitions.\n *\n * You can import this NgModule multiple times, once for each lazy-loaded bundle.\n * However, only one `Router` service can be active.\n * To ensure this, there are two ways to register routes when importing this module:\n *\n * * The `forRoot()` method creates an `NgModule` that contains all the directives, the given\n * routes, and the `Router` service itself.\n * * The `forChild()` method creates an `NgModule` that contains all the directives and the given\n * routes, but does not include the `Router` service.\n *\n * @see [Routing and Navigation guide](guide/router) for an\n * overview of how the `Router` service should be used.\n *\n * @publicApi\n */\nlet RouterModule = /*#__PURE__*/(() => {\n  class RouterModule {\n    constructor(guard) {}\n    /**\n     * Creates and configures a module with all the router providers and directives.\n     * Optionally sets up an application listener to perform an initial navigation.\n     *\n     * When registering the NgModule at the root, import as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forRoot(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the application.\n     * @param config An `ExtraOptions` configuration object that controls how navigation is performed.\n     * @return The new `NgModule`.\n     *\n     */\n    static forRoot(routes, config) {\n      return {\n        ngModule: RouterModule,\n        providers: [ROUTER_PROVIDERS, typeof ngDevMode === 'undefined' || ngDevMode ? config?.enableTracing ? withDebugTracing().ɵproviders : [] : [], {\n          provide: ROUTES,\n          multi: true,\n          useValue: routes\n        }, {\n          provide: ROUTER_FORROOT_GUARD,\n          useFactory: provideForRootGuard,\n          deps: [[Router, new Optional(), new SkipSelf()]]\n        }, {\n          provide: ROUTER_CONFIGURATION,\n          useValue: config ? config : {}\n        }, config?.useHash ? provideHashLocationStrategy() : providePathLocationStrategy(), provideRouterScroller(), config?.preloadingStrategy ? withPreloading(config.preloadingStrategy).ɵproviders : [], config?.initialNavigation ? provideInitialNavigation(config) : [], config?.bindToComponentInputs ? withComponentInputBinding().ɵproviders : [], config?.enableViewTransitions ? withViewTransitions().ɵproviders : [], provideRouterInitializer()]\n      };\n    }\n    /**\n     * Creates a module with all the router directives and a provider registering routes,\n     * without creating a new Router service.\n     * When registering for submodules and lazy-loaded submodules, create the NgModule as follows:\n     *\n     * ```\n     * @NgModule({\n     *   imports: [RouterModule.forChild(ROUTES)]\n     * })\n     * class MyNgModule {}\n     * ```\n     *\n     * @param routes An array of `Route` objects that define the navigation paths for the submodule.\n     * @return The new NgModule.\n     *\n     */\n    static forChild(routes) {\n      return {\n        ngModule: RouterModule,\n        providers: [{\n          provide: ROUTES,\n          multi: true,\n          useValue: routes\n        }]\n      };\n    }\n    static {\n      this.ɵfac = function RouterModule_Factory(t) {\n        return new (t || RouterModule)(i0.ɵɵinject(ROUTER_FORROOT_GUARD, 8));\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: RouterModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return RouterModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * For internal use by `RouterModule` only. Note that this differs from `withInMemoryRouterScroller`\n * because it reads from the `ExtraOptions` which should not be used in the standalone world.\n */\nfunction provideRouterScroller() {\n  return {\n    provide: ROUTER_SCROLLER,\n    useFactory: () => {\n      const viewportScroller = inject(ViewportScroller);\n      const zone = inject(NgZone);\n      const config = inject(ROUTER_CONFIGURATION);\n      const transitions = inject(NavigationTransitions);\n      const urlSerializer = inject(UrlSerializer);\n      if (config.scrollOffset) {\n        viewportScroller.setOffset(config.scrollOffset);\n      }\n      return new RouterScroller(urlSerializer, transitions, viewportScroller, zone, config);\n    }\n  };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` should\n// provide hash location directly via `{provide: LocationStrategy, useClass: HashLocationStrategy}`.\nfunction provideHashLocationStrategy() {\n  return {\n    provide: LocationStrategy,\n    useClass: HashLocationStrategy\n  };\n}\n// Note: For internal use only with `RouterModule`. Standalone setup via `provideRouter` does not\n// need this at all because `PathLocationStrategy` is the default factory for `LocationStrategy`.\nfunction providePathLocationStrategy() {\n  return {\n    provide: LocationStrategy,\n    useClass: PathLocationStrategy\n  };\n}\nfunction provideForRootGuard(router) {\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && router) {\n    throw new ɵRuntimeError(4007 /* RuntimeErrorCode.FOR_ROOT_CALLED_TWICE */, `The Router was provided more than once. This can happen if 'forRoot' is used outside of the root injector.` + ` Lazy loaded modules should use RouterModule.forChild() instead.`);\n  }\n  return 'guarded';\n}\n// Note: For internal use only with `RouterModule`. Standalone router setup with `provideRouter`\n// users call `withXInitialNavigation` directly.\nfunction provideInitialNavigation(config) {\n  return [config.initialNavigation === 'disabled' ? withDisabledInitialNavigation().ɵproviders : [], config.initialNavigation === 'enabledBlocking' ? withEnabledBlockingInitialNavigation().ɵproviders : []];\n}\n// TODO(atscott): This should not be in the public API\n/**\n * A [DI token](guide/glossary/#di-token) for the router initializer that\n * is called after the app is bootstrapped.\n *\n * @publicApi\n */\nconst ROUTER_INITIALIZER = /*#__PURE__*/new InjectionToken(typeof ngDevMode === 'undefined' || ngDevMode ? 'Router Initializer' : '');\nfunction provideRouterInitializer() {\n  return [\n  // ROUTER_INITIALIZER token should be removed. It's public API but shouldn't be. We can just\n  // have `getBootstrapListener` directly attached to APP_BOOTSTRAP_LISTENER.\n  {\n    provide: ROUTER_INITIALIZER,\n    useFactory: getBootstrapListener\n  }, {\n    provide: APP_BOOTSTRAP_LISTENER,\n    multi: true,\n    useExisting: ROUTER_INITIALIZER\n  }];\n}\n\n/**\n * Maps an array of injectable classes with canMatch functions to an array of equivalent\n * `CanMatchFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanMatch(providers) {\n  return providers.map(provider => (...params) => inject(provider).canMatch(...params));\n}\n/**\n * Maps an array of injectable classes with canActivate functions to an array of equivalent\n * `CanActivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivate(providers) {\n  return providers.map(provider => (...params) => inject(provider).canActivate(...params));\n}\n/**\n * Maps an array of injectable classes with canActivateChild functions to an array of equivalent\n * `CanActivateChildFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanActivateChild(providers) {\n  return providers.map(provider => (...params) => inject(provider).canActivateChild(...params));\n}\n/**\n * Maps an array of injectable classes with canDeactivate functions to an array of equivalent\n * `CanDeactivateFn` for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='CanActivate'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToCanDeactivate(providers) {\n  return providers.map(provider => (...params) => inject(provider).canDeactivate(...params));\n}\n/**\n * Maps an injectable class with a resolve function to an equivalent `ResolveFn`\n * for use in a `Route` definition.\n *\n * Usage {@example router/utils/functional_guards.ts region='Resolve'}\n *\n * @publicApi\n * @see {@link Route}\n */\nfunction mapToResolve(provider) {\n  return (...params) => inject(provider).resolve(...params);\n}\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the router package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('17.2.2');\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ActivatedRoute, ActivatedRouteSnapshot, ActivationEnd, ActivationStart, BaseRouteReuseStrategy, ChildActivationEnd, ChildActivationStart, ChildrenOutletContexts, DefaultTitleStrategy, DefaultUrlSerializer, EventType, GuardsCheckEnd, GuardsCheckStart, NavigationCancel, NavigationCancellationCode, NavigationEnd, NavigationError, NavigationSkipped, NavigationSkippedCode, NavigationStart, NoPreloading, OutletContext, PRIMARY_OUTLET, PreloadAllModules, PreloadingStrategy, ROUTER_CONFIGURATION, ROUTER_INITIALIZER, ROUTES, ResolveEnd, ResolveStart, RouteConfigLoadEnd, RouteConfigLoadStart, RouteReuseStrategy, Router, RouterEvent, RouterLink, RouterLinkActive, RouterLink as RouterLinkWithHref, RouterModule, RouterOutlet, RouterPreloader, RouterState, RouterStateSnapshot, RoutesRecognized, Scroll, TitleStrategy, UrlHandlingStrategy, UrlSegment, UrlSegmentGroup, UrlSerializer, UrlTree, VERSION, convertToParamMap, createUrlTreeFromSnapshot, defaultUrlMatcher, mapToCanActivate, mapToCanActivateChild, mapToCanDeactivate, mapToCanMatch, mapToResolve, provideRouter, provideRoutes, withComponentInputBinding, withDebugTracing, withDisabledInitialNavigation, withEnabledBlockingInitialNavigation, withHashLocation, withInMemoryScrolling, withNavigationErrorHandler, withPreloading, withRouterConfig, withViewTransitions, ɵEmptyOutletComponent, ROUTER_PROVIDERS as ɵROUTER_PROVIDERS, afterNextNavigation as ɵafterNextNavigation, loadChildren as ɵloadChildren };\n","/**\n * @license Angular v17.2.2\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { inject, ɵChangeDetectionScheduler, Injectable, Inject, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE, NgModule, ɵperformanceMarkFeature } from '@angular/core';\nexport { ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { ɵDomRendererFactory2, BrowserModule } from '@angular/platform-browser';\nimport * as i1 from '@angular/animations/browser';\nimport { ɵAnimationEngine, ɵWebAnimationsStyleNormalizer, ɵAnimationRendererFactory, ɵAnimationStyleNormalizer, AnimationDriver, ɵWebAnimationsDriver, NoopAnimationDriver } from '@angular/animations/browser';\nimport { DOCUMENT } from '@angular/common';\nlet InjectableAnimationEngine = /*#__PURE__*/(() => {\n  class InjectableAnimationEngine extends ɵAnimationEngine {\n    // The `ApplicationRef` is injected here explicitly to force the dependency ordering.\n    // Since the `ApplicationRef` should be created earlier before the `AnimationEngine`, they\n    // both have `ngOnDestroy` hooks and `flush()` must be called after all views are destroyed.\n    constructor(doc, driver, normalizer) {\n      super(doc, driver, normalizer, inject(ɵChangeDetectionScheduler, {\n        optional: true\n      }));\n    }\n    ngOnDestroy() {\n      this.flush();\n    }\n    static {\n      this.ɵfac = function InjectableAnimationEngine_Factory(t) {\n        return new (t || InjectableAnimationEngine)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1.AnimationDriver), i0.ɵɵinject(i1.ɵAnimationStyleNormalizer));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: InjectableAnimationEngine,\n        factory: InjectableAnimationEngine.ɵfac\n      });\n    }\n  }\n  return InjectableAnimationEngine;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction instantiateDefaultStyleNormalizer() {\n  return new ɵWebAnimationsStyleNormalizer();\n}\nfunction instantiateRendererFactory(renderer, engine, zone) {\n  return new ɵAnimationRendererFactory(renderer, engine, zone);\n}\nconst SHARED_ANIMATION_PROVIDERS = [{\n  provide: ɵAnimationStyleNormalizer,\n  useFactory: instantiateDefaultStyleNormalizer\n}, {\n  provide: ɵAnimationEngine,\n  useClass: InjectableAnimationEngine\n}, {\n  provide: RendererFactory2,\n  useFactory: instantiateRendererFactory,\n  deps: [ɵDomRendererFactory2, ɵAnimationEngine, NgZone]\n}];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserModule.\n */\nconst BROWSER_ANIMATIONS_PROVIDERS = [{\n  provide: AnimationDriver,\n  useFactory: () => new ɵWebAnimationsDriver()\n}, {\n  provide: ANIMATION_MODULE_TYPE,\n  useValue: 'BrowserAnimations'\n}, ...SHARED_ANIMATION_PROVIDERS];\n/**\n * Separate providers from the actual module so that we can do a local modification in Google3 to\n * include them in the BrowserTestingModule.\n */\nconst BROWSER_NOOP_ANIMATIONS_PROVIDERS = [{\n  provide: AnimationDriver,\n  useClass: NoopAnimationDriver\n}, {\n  provide: ANIMATION_MODULE_TYPE,\n  useValue: 'NoopAnimations'\n}, ...SHARED_ANIMATION_PROVIDERS];\n\n/**\n * Exports `BrowserModule` with additional [dependency-injection providers](guide/glossary#provider)\n * for use with animations. See [Animations](guide/animations).\n * @publicApi\n */\nlet BrowserAnimationsModule = /*#__PURE__*/(() => {\n  class BrowserAnimationsModule {\n    /**\n     * Configures the module based on the specified object.\n     *\n     * @param config Object used to configure the behavior of the `BrowserAnimationsModule`.\n     * @see {@link BrowserAnimationsModuleConfig}\n     *\n     * @usageNotes\n     * When registering the `BrowserAnimationsModule`, you can use the `withConfig`\n     * function as follows:\n     * ```\n     * @NgModule({\n     *   imports: [BrowserAnimationsModule.withConfig(config)]\n     * })\n     * class MyNgModule {}\n     * ```\n     */\n    static withConfig(config) {\n      return {\n        ngModule: BrowserAnimationsModule,\n        providers: config.disableAnimations ? BROWSER_NOOP_ANIMATIONS_PROVIDERS : BROWSER_ANIMATIONS_PROVIDERS\n      };\n    }\n    static {\n      this.ɵfac = function BrowserAnimationsModule_Factory(t) {\n        return new (t || BrowserAnimationsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: BrowserAnimationsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: BROWSER_ANIMATIONS_PROVIDERS,\n        imports: [BrowserModule]\n      });\n    }\n  }\n  return BrowserAnimationsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n */\nfunction provideAnimations() {\n  ɵperformanceMarkFeature('NgEagerAnimations');\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideAnimations` call results in app code.\n  return [...BROWSER_ANIMATIONS_PROVIDERS];\n}\n/**\n * A null player that must be imported to allow disabling of animations.\n * @publicApi\n */\nlet NoopAnimationsModule = /*#__PURE__*/(() => {\n  class NoopAnimationsModule {\n    static {\n      this.ɵfac = function NoopAnimationsModule_Factory(t) {\n        return new (t || NoopAnimationsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: NoopAnimationsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: BROWSER_NOOP_ANIMATIONS_PROVIDERS,\n        imports: [BrowserModule]\n      });\n    }\n  }\n  return NoopAnimationsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to disable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * @usageNotes\n *\n * The function is useful when you want to bootstrap an application using\n * the `bootstrapApplication` function, but you need to disable animations\n * (for example, when running tests).\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideNoopAnimations()\n *   ]\n * });\n * ```\n *\n * @publicApi\n */\nfunction provideNoopAnimations() {\n  // Return a copy to prevent changes to the original array in case any in-place\n  // alterations are performed to the `provideNoopAnimations` call results in app code.\n  return [...BROWSER_NOOP_ANIMATIONS_PROVIDERS];\n}\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BrowserAnimationsModule, NoopAnimationsModule, provideAnimations, provideNoopAnimations, InjectableAnimationEngine as ɵInjectableAnimationEngine };\n","import { Component, Input, OnInit, inject, signal } from '@angular/core';\r\nimport { ActivatedRoute, RouterLink } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faTruckFast } from '@fortawesome/free-solid-svg-icons';\r\nimport { FreeShippingComponent } from '../free-shipping/free-shipping.component';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ButtonActionComponent } from '../button-action/button-action.component';\r\n\r\n@Component({\r\n  selector: 'app-card',\r\n  standalone: true,\r\n  imports: [FontAwesomeModule, RouterLink, ButtonActionComponent, FreeShippingComponent, CommonModule],\r\n  templateUrl: './card.component.html',\r\n  styleUrl: './card.component.css'\r\n})\r\nexport class CardComponent implements OnInit{\r\n  faTruckFast = faTruckFast;\r\n\r\n  paramUrl: number | null = null;\r\n  // #route = inject(ActivatedRoute);\r\n\r\n  ngOnInit():void{    \r\n    // console.log(this.#route.snapshot.params['name']);// primeira forma de regatar os paramentrs\r\n    // this.#route.params.subscribe(res => console.log(res['name'])); // segunda forma de resgatar os paramentros  \r\n    \r\n    // console.log(this.#route.snapshot.params['id']); // se em routras o paramentros fosse :id \r\n    \r\n  }\r\n\r\n\r\n  public productId = signal(0)\r\n  public productImgSrc = signal('');\r\n  public productDescription = signal('');\r\n  public productBeforePrice = signal(0);\r\n  public productPrice = signal(0);\r\n  public productStars = signal(0);\r\n  \r\n\r\n  @Input() set inputId(id: number){\r\n    this.productId.set(id);\r\n    this.paramUrl = id;\r\n  }\r\n\r\n  @Input() set inputImgSrc(imgSrc: string){\r\n    this.productImgSrc.set(imgSrc);\r\n  }\r\n\r\n  @Input({\r\n    required: true\r\n  }) set inputDescription(description: string){\r\n    this.productDescription.set(description);\r\n    // this.paramName = description.replace(/\\s/g, '-').toLowerCase();//enviar so o nome        \r\n  }\r\n\r\n  @Input({\r\n    required: true\r\n  }) set inputBefore(beforePrice: number){\r\n    this.productBeforePrice.set(beforePrice);\r\n  }\r\n\r\n  @Input({required: true}) set inputPrice(price: number){\r\n    this.productPrice.set(price);\r\n  }\r\n\r\n  @Input() set inputStars(star: number){\r\n    this.productStars.set(star);\r\n  }\r\n\r\n  public category = signal('');\r\n  @Input() set inputCategory(category: string){\r\n    this.category.set(category);\r\n  }\r\n\r\n  public isSale = signal(false);\r\n  @Input() set inputIsSale(isSale: boolean){\r\n    this.isSale.set(isSale);\r\n  }\r\n\r\n}\r\n","@defer{\r\n\r\n<a [routerLink]=\"['/product/', paramUrl]\" class=\"card__container\">\r\n    <div class=\"card-image__content\">\r\n        <img [src]=\"productImgSrc()\" alt=\"Remedio\" class=\"product-img\">\r\n        <app-free-shipping class=\"app-free-shipping\" />\r\n    </div>\r\n    <div class=\"card__content\">\r\n        <div class=\"card__description\">\r\n            <h4 class=\"description-title\">{{productDescription()}}</h4>\r\n        </div>\r\n        <div class=\"card__price\">\r\n            @if(isSale()){\r\n                <small class=\"price-before\">{{productBeforePrice() | currency : 'BRL'}}</small>\r\n            }\r\n            <h3 class=\"price-after\">{{productPrice() | currency : 'BRL'}}</h3>\r\n            <small class=\"price-installments\">em até 2x sem juros</small>\r\n        </div>\r\n        <div class=\"card__stars\">\r\n        </div>\r\n    </div>\r\n    <app-button-action class=\"app-btn-action\" inputBtnActionTitle=\"Comprar\" />\r\n</a>\r\n}@loading {\r\n    <p>Carregando</p>\r\n}","export const fakerDbProducts = [\r\n    {\r\n        \"id\": 4,\r\n        \"imgProduct\": \"./assets/images/Saude_mulher.webp\",\r\n        \"description\": \"A Saúde da Mulher, caixa com 1 frasco com 150mL de solução de uso oral + copo dosador\",\r\n        \"quantityInStock\": 99,\r\n        \"price\": 16.29,\r\n        \"priceBefore\": 22.50,\r\n        \"category\": \"health\",\r\n        \"isSale\": true\r\n    },\r\n    {\r\n        \"id\": 5,\r\n        \"imgProduct\": \"./assets/images/AAS_infantil.webp\",\r\n        \"description\": \"AAS Infantil 100mg, caixa com 30 comprimidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 19.00,\r\n        \"priceBefore\": 26.90,\r\n        \"category\": \"health\",\r\n        \"isSale\": true\r\n    },\r\n    {\r\n        \"id\": 6,\r\n        \"imgProduct\": \"./assets/images/ABC_Spray.webp\",\r\n        \"description\": \"ABC 10mg/mL, caixa com 1 frasco spray com 30mL de solução de uso dermatológico\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 18.99,\r\n        \"priceBefore\": 21.90,\r\n        \"category\": \"health\",\r\n        \"isSale\": true\r\n    },\r\n    {\r\n        \"id\": 7,\r\n        \"imgProduct\": \"./assets/images/ABcalcium.webp\",\r\n        \"description\": \"Abcalcium B12 caixa com 1 frasco com 240mL de suspensão de uso oral, sabor morango\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 11.70,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": true\r\n    },\r\n    {\r\n        \"id\": 8,\r\n        \"imgProduct\": \"./assets/images/Advil_12h.webp\",\r\n        \"description\": \"Advil 12h 600mg, caixa com 6 comprimidos revestidos de liberação prolongada\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 16.32,\r\n        \"priceBefore\": 19.30,\r\n        \"category\": \"health\",\r\n        \"isSale\": true\r\n    },\r\n    {\r\n        \"id\": 9,\r\n        \"imgProduct\": \"./assets/images/Aspirina_500mg.webp\",\r\n        \"description\": \"Aspirina 500mg, blíster com 10 comprimidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 8.71,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 10,\r\n        \"imgProduct\": \"./assets/images/Aspirina_c.jpg\",\r\n        \"description\": \"Aspirina C 400mg + 240mg, envelope com 2 comprimidos efervescentes sabor limão\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 6.00,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 11,\r\n        \"imgProduct\": \"./assets/images/Alivium_100mg.webp\",\r\n        \"description\": \"Alivium 100mg/mL, caixa com 1 frasco gotejador com 20mL de suspensão de uso oral\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 15.59,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 12,\r\n        \"imgProduct\": \"./assets/images/neosoro.webp\",\r\n        \"description\": \"Neosoro 0,5mg/mL, caixa com 1 frasco gotejador com 30mL de solução de uso nasal\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 3.29,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 13,\r\n        \"imgProduct\": \"./assets/images/maxalgina.webp\",\r\n        \"description\": \"Maxalgina Solução Oral 500mg/mL, caixa com 1 frasco gotejador com 20mL de solução de uso oral\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 3.17,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 14,\r\n        \"imgProduct\": \"./assets/images/Losartana_Potassica_Medley.webp\",\r\n        \"description\": \"Losartana Potássica Medley 50mg, caixa com 30 comprimidos revestidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 3.17,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 15,\r\n        \"imgProduct\": \"./assets/images/torsilax.webp\",\r\n        \"description\": \"Torsilax 125mg + 50mg + 300mg + 30mg, caixa com 30 comprimidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 6.99,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 16,\r\n        \"imgProduct\": \"./assets/images/dorflex.webp\",\r\n        \"description\": \"Dorflex 300mg + 35mg + 50mg, blíster com 10 comprimidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 5.39,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 17,\r\n        \"imgProduct\": \"./assets/images/dipimed.webp\",\r\n        \"description\": \"Dipimed 500mg/mL, caixa com 1 frasco gotejador com 20mL de solução de uso oral\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 2.99,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 18,\r\n        \"imgProduct\": \"./assets/images/loratamed.webp\",\r\n        \"description\": \"Loratamed 10mg, caixa com 12 comprimidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 1.29,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 19,\r\n        \"imgProduct\": \"./assets/images/hidroclorotiazida.webp\",\r\n        \"description\": \"Hidroclorotiazida Medley 50mg, caixa com 20 comprimidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 2.80,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 20,\r\n        \"imgProduct\": \"./assets/images/Novalgina.webp\",\r\n        \"description\": \"Novalgina Comprimido 1g, caixa com 10 comprimidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 17.95,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 21,\r\n        \"imgProduct\": \"./assets/images/Buscopan.webp\",\r\n        \"description\": \"Buscopan 10mg, caixa com 20 drágeas\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 17.50,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 22,\r\n        \"imgProduct\": \"./assets/images/clonazepam.webp\",\r\n        \"description\": \"Clonazepam Medley 2,5mg/mL, caixa com 1 frasco gotejador com 20mL de solução de uso oral\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 8.95,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 23,\r\n        \"imgProduct\": \"./assets/images/Benegrip_Imuno_Complex.jpg\",\r\n        \"description\": \"Benegrip Imuno Complex frasco com 30 cápsulas gelatinosas\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 16.79,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 24,\r\n        \"imgProduct\": \"./assets/images/Benegrip_Imuno_Energy.webp\",\r\n        \"description\": \"Benegrip Imuno Energy caixa com 20 comprimidos efervescentes\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 27.05,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 25,\r\n        \"imgProduct\": \"./assets/images/Dipirona_monoidratada.webp\",\r\n        \"description\": \"Dipirona Monoidratada Legrand 50mg/mL, caixa com 1 frasco com 100mL de solução de uso oral + copo medidor\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 15.00,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 26,\r\n        \"imgProduct\": \"./assets/images/neosadina.webp\",\r\n        \"description\": \"Neosaldina, caixa com 1 frasco gotejador com 15mL de solução de uso oral\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 29.47,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 27,\r\n        \"imgProduct\": \"./assets/images/Neosaldina_caixa_Comprimidos.webp\",\r\n        \"description\": \"Neosaldina, caixa com 20 Comprimidos resvestidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 22.30,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 28,\r\n        \"imgProduct\": \"./assets/images/Dorflex_Max.webp\",\r\n        \"description\": \"Dorflex Max, caixa com 8 comprimidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 12.99,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 29,\r\n        \"imgProduct\": \"./assets/images/Losartana_Potassica_Medley\",\r\n        \"description\": \"Losartana Potássica Medley 50mg, caixa com 30 comprimidos revestidos\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 2.78,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"health\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 30,\r\n        \"imgProduct\": \"./assets/images/Desodorante_Antitranspirante_Rexona_Men_Impacto.jpg\",\r\n        \"description\": \"Desodorante Antitranspirante Rexona Men Impacto aerossol com 150mL\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 12.99,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"personalHygiene\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 31,\r\n        \"imgProduct\": \"./assets/images/Desodorante_Antitranspirante_Rexona_Men_Invisible.jpg\",\r\n        \"description\": \"Desodorante Antitranspirante Rexona Men Invisible aerossol, 1 unidade com 250mL\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 21.19,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"personalHygiene\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 32,\r\n        \"imgProduct\": \"./assets/images/Desodorante_Antitranspirante_Feminino_Rexona_Clinical.webp\",\r\n        \"description\": \"Desodorante Antitranspirante Feminino Rexona Clinical Refresh +Controle de Odor aerossol com 150mL\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 17.59,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"personalHygiene\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 33,\r\n        \"imgProduct\": \"./assets/images/Fralda_Pampers_Supersec_XG.jpg\",\r\n        \"description\": \"Fralda Pampers Supersec XG, pacote com 40 unidades\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 56.55,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"baby\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 34,\r\n        \"imgProduct\": \"./assets/images/Fralda_Pampers_Pants_Ajuste_Total_XG,.jpg\",\r\n        \"description\": \"Fralda Pampers Pants Ajuste Total XG, pacote com 32 unidades\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 62.99,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"baby\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 35,\r\n        \"imgProduct\": \"./assets/images/Fralda_Pampers_Premium_Care_RN.jpg\",\r\n        \"description\": \"Fralda Pampers Premium Care RN+, pacote com 36 unidades\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 47.90,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"baby\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 36,\r\n        \"imgProduct\": \"./assets/images/Sabonete_de_Glicerina_Pampers.jpg\",\r\n        \"description\": \"Sabonete de Glicerina Pampers refil com 350mL\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 24.99,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"baby\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 37,\r\n        \"imgProduct\": \"./assets/images/Condicionador_de_Glicerina.jpg\",\r\n        \"description\": \"Condicionador de Glicerina Pampers 200mL\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 21.49,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"baby\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 38,\r\n        \"imgProduct\": \"./assets/images/Condicionador_Seda_Babosa.jpg\",\r\n        \"description\": \"Condicionador Seda Babosa + Óleos By Rayza Nicácio 325mL\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 10.17,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"personalHygiene\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 39,\r\n        \"imgProduct\": \"./assets/images/Kit_Seda_Mel_Antiquebra_shampoo.jpg\",\r\n        \"description\": \"Kit Seda Mel Antiquebra shampoo + condicionador, 325mL\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 21.76,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"personalHygiene\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 40,\r\n        \"imgProduct\": \"./assets/images/Kit_Seda_Recarga_Natural_Hidratacao.jpg\",\r\n        \"description\": \"Kit Seda Recarga Natural Hidratação Antinós com 325mL cada\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 21.76,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"personalHygiene\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 41,\r\n        \"imgProduct\": \"./assets/images/Talco_Johnsons_Baby.webp\",\r\n        \"description\": \"Talco Johnson's Baby Pura Proteção 200g\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 32.29,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"baby\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 42,\r\n        \"imgProduct\": \"./assets/images/Repelente_Infantil.webp\",\r\n        \"description\": \"Repelente Infantil Full Repel 100mL\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 32.29,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"baby\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 43,\r\n        \"imgProduct\": \"./assets/images/Formula_Infantil_NAN.webp\",\r\n        \"description\": \"Fórmula Infantil NAN Supreme 1 - 0 a 6 meses, lata com 800g\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 89.99,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"baby\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 44,\r\n        \"imgProduct\": \"./assets/images/Creme_Contra_Assaduras_cetrilan.png\",\r\n        \"description\": \"Creme Contra Assaduras TheraSkin Cetrilan 1 unidade com 40g\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 25.45,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"baby\",\r\n        \"isSale\": false\r\n    },\r\n    {\r\n        \"id\": 45,\r\n        \"imgProduct\": \"./assets/images/Creme_Contra_Assaduras_nebacetin.jpg\",\r\n        \"description\": \"Creme Contra Assaduras Nebacetin Baby Prevenção 120g\",\r\n        \"quantityInStock\": 88,\r\n        \"price\": 44.99,\r\n        \"priceBefore\": 0,\r\n        \"category\": \"baby\",\r\n        \"isSale\": false\r\n    },\r\n]","import { Injectable, OnInit } from '@angular/core';\r\nimport { IPorduct } from '../models/IPoduct.interface';\r\nimport { fakerDbProducts } from '../../assets/db/fakerDB';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n  \r\n})\r\nexport class ProductService{\r\n  private product!: IPorduct | undefined;\r\n  private products: IPorduct[] = []\r\n\r\n  constructor() { }\r\n\r\n  getAllProducts():IPorduct[]{    \r\n    return fakerDbProducts;\r\n  }\r\n\r\n  getProduct(id: number):IPorduct| undefined {\r\n    this.product = fakerDbProducts.find(product => product['id'] === id);       \r\n    return this.product;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CardComponent } from '../../components/card/card.component';\r\nimport { IPorduct } from '../../models/IPoduct.interface';\r\nimport { ProductService } from '../../services/product.service';\r\nimport { QuantityCartService } from '../../services/quantity-cart.service';\r\nimport { ProductCartService } from '../../services/product-cart.service';\r\nimport { faMagnifyingGlass } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  standalone: true,\r\n  imports: [CardComponent, FontAwesomeModule],\r\n  templateUrl: './home.component.html',\r\n  styleUrl: './home.component.css'\r\n})\r\n  export class HomeComponent implements OnInit {\r\n    searchIcon = faMagnifyingGlass;\r\n    category: string = '';\r\n\r\n    searchProduct: string = \"\";\r\n\r\n    products: IPorduct[] = [];\r\n\r\n    constructor(\r\n      private productService: ProductService,\r\n      private productCartService: ProductCartService,\r\n      private quantityCartService:QuantityCartService,\r\n      private route: ActivatedRoute\r\n    ){}\r\n\r\n    ngOnInit(){\r\n      const products = this.productService.getAllProducts();\r\n      this.route.queryParamMap.subscribe(params =>{\r\n        const description = params.get(\"description\")?.toLocaleLowerCase();\r\n        if(description){          \r\n          this.products = products.filter( p => p.description.toLowerCase().includes(description));\r\n          return;\r\n        }\r\n        \r\n        this.getAllProducts();\r\n        // this.products = products;\r\n      })\r\n      this.productCartService.updatedPriceTotal();\r\n      this.quantityCartService.getTotalInCart();\r\n\r\n    }\r\n\r\n    private getAllProducts():void{\r\n      this.productService.getAllProducts().map(product => this.products.push(product));           \r\n    }\r\n\r\n    onSearchProduct(event: Event){\r\n      const target = event.target as HTMLInputElement;\r\n      this.searchProduct = target.value;\r\n      \r\n    }\r\n\r\n    setCategory(event: Event){\r\n      const target = event.target as HTMLInputElement;\r\n      this.category = target?.value;\r\n      console.log(this.category);\r\n       \r\n    }\r\n\r\n    productIsContains(productDescription : string){\r\n      return productDescription.toLowerCase().match(this.searchProduct.toLowerCase());\r\n    }\r\n}\r\n","<div class=\"home__container\">\r\n    <section class=\"category__container\" (change)=\"setCategory($event)\">\r\n        <div class=\"category__group\">\r\n            <input type=\"radio\" name=\"category\" class=\"category-radio\" id=\"personalHygiene\" value=\"personalHygiene\">\r\n            <label class=\"category-text\" for=\"personalHygiene\">Higiene Pessoal</label>\r\n        </div>\r\n        <div class=\"category__group\">\r\n            <input type=\"radio\" name=\"category\" class=\"category-radio\" id=\"baby\" value=\"baby\">\r\n            <label class=\"category-text\" for=\"baby\">Bebê</label>\r\n        </div>\r\n        <div class=\"category__group\">\r\n            <input type=\"radio\" name=\"category\" class=\"category-radio\" id=\"health\" value=\"health\">\r\n            <label class=\"category-text\" for=\"health\">Saúde</label>\r\n        </div>\r\n    </section>\r\n    <section class=\"homer__search\">\r\n        <form class=\"search__content\">\r\n            <button type=\"submit\" class=\"search-btn\">\r\n                <fa-icon [icon]=\"searchIcon\" class=\"search-icon\">\r\n                </fa-icon>\r\n            </button>\r\n            <input type=\"text\" class=\"search-product\" name=\"description\" (input)=\"onSearchProduct($event)\">\r\n            @if(!searchProduct){\r\n            <p class=\"text-placeholder\"></p>\r\n            }\r\n        </form>\r\n\r\n    </section>\r\n    <section class=\"home__cards\">\r\n        @for (product of products; track $index) {\r\n            @if(category){\r\n                @if( product.category === category){\r\n                    <app-card [inputId]=\"product.id\" [inputImgSrc]=\"product.imgProduct\" [inputDescription]=\"product.description\"\r\n                    [inputBefore]=\"product.priceBefore\" [inputPrice]=\"product.price\" [inputIsSale]=\"product.isSale\"\r\n                    class=\"cards__card\" />\r\n                }\r\n            }\r\n            @else {\r\n            <app-card [inputId]=\"product.id\" [inputImgSrc]=\"product.imgProduct\" [inputDescription]=\"product.description\"\r\n                [inputBefore]=\"product.priceBefore\" [inputPrice]=\"product.price\" [inputIsSale]=\"product.isSale\"\r\n                class=\"cards__card\" />\r\n            }\r\n            \r\n        }@empty {\r\n        <h2>Nenhum produto encontrado</h2>\r\n        }\r\n\r\n    </section>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-not-found',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './not-found.component.html',\r\n  styleUrl: './not-found.component.css'\r\n})\r\nexport class NotFoundComponent {\r\n\r\n}\r\n","<h4>Página não encontrada</h4>","var prefix = \"far\";\nvar faTrashCan = {\n  prefix: 'far',\n  iconName: 'trash-can',\n  icon: [448, 512, [61460, \"trash-alt\"], \"f2ed\", \"M170.5 51.6L151.5 80h145l-19-28.4c-1.5-2.2-4-3.6-6.7-3.6H177.1c-2.7 0-5.2 1.3-6.7 3.6zm147-26.6L354.2 80H368h48 8c13.3 0 24 10.7 24 24s-10.7 24-24 24h-8V432c0 44.2-35.8 80-80 80H112c-44.2 0-80-35.8-80-80V128H24c-13.3 0-24-10.7-24-24S10.7 80 24 80h8H80 93.8l36.7-55.1C140.9 9.4 158.4 0 177.1 0h93.7c18.7 0 36.2 9.4 46.6 24.9zM80 128V432c0 17.7 14.3 32 32 32H336c17.7 0 32-14.3 32-32V128H80zm80 64V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16zm80 0V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16zm80 0V400c0 8.8-7.2 16-16 16s-16-7.2-16-16V192c0-8.8 7.2-16 16-16s16 7.2 16 16z\"]\n};\nvar faTrashAlt = faTrashCan;\nvar faMessage = {\n  prefix: 'far',\n  iconName: 'message',\n  icon: [512, 512, [\"comment-alt\"], \"f27a\", \"M160 368c26.5 0 48 21.5 48 48v16l72.5-54.4c8.3-6.2 18.4-9.6 28.8-9.6H448c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H64c-8.8 0-16 7.2-16 16V352c0 8.8 7.2 16 16 16h96zm48 124l-.2 .2-5.1 3.8-17.1 12.8c-4.8 3.6-11.3 4.2-16.8 1.5s-8.8-8.2-8.8-14.3V474.7v-6.4V468v-4V416H112 64c-35.3 0-64-28.7-64-64V64C0 28.7 28.7 0 64 0H448c35.3 0 64 28.7 64 64V352c0 35.3-28.7 64-64 64H309.3L208 492z\"]\n};\nvar faCommentAlt = faMessage;\nvar faFileLines = {\n  prefix: 'far',\n  iconName: 'file-lines',\n  icon: [384, 512, [128441, 128462, 61686, \"file-alt\", \"file-text\"], \"f15c\", \"M64 464c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16H224v80c0 17.7 14.3 32 32 32h80V448c0 8.8-7.2 16-16 16H64zM64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V154.5c0-17-6.7-33.3-18.7-45.3L274.7 18.7C262.7 6.7 246.5 0 229.5 0H64zm56 256c-13.3 0-24 10.7-24 24s10.7 24 24 24H264c13.3 0 24-10.7 24-24s-10.7-24-24-24H120zm0 96c-13.3 0-24 10.7-24 24s10.7 24 24 24H264c13.3 0 24-10.7 24-24s-10.7-24-24-24H120z\"]\n};\nvar faFileAlt = faFileLines;\nvar faFileText = faFileLines;\nvar faCalendarDays = {\n  prefix: 'far',\n  iconName: 'calendar-days',\n  icon: [448, 512, [\"calendar-alt\"], \"f073\", \"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192h80v56H48V192zm0 104h80v64H48V296zm128 0h96v64H176V296zm144 0h80v64H320V296zm80-48H320V192h80v56zm0 160v40c0 8.8-7.2 16-16 16H320V408h80zm-128 0v56H176V408h96zm-144 0v56H64c-8.8 0-16-7.2-16-16V408h80zM272 248H176V192h96v56z\"]\n};\nvar faCalendarAlt = faCalendarDays;\nvar faHandPointRight = {\n  prefix: 'far',\n  iconName: 'hand-point-right',\n  icon: [512, 512, [], \"f0a4\", \"M448 128l-177.6 0c1 5.2 1.6 10.5 1.6 16l0 16 32 0 144 0c8.8 0 16-7.2 16-16s-7.2-16-16-16zM224 144c0-17.7-14.3-32-32-32c0 0 0 0 0 0l-24 0c-66.3 0-120 53.7-120 120l0 48c0 52.5 33.7 97.1 80.7 113.4c-.5-3.1-.7-6.2-.7-9.4c0-20 9.2-37.9 23.6-49.7c-4.9-9-7.6-19.4-7.6-30.3c0-15.1 5.3-29 14-40c-8.8-11-14-24.9-14-40l0-40c0-13.3 10.7-24 24-24s24 10.7 24 24l0 40c0 8.8 7.2 16 16 16s16-7.2 16-16l0-40 0-40zM192 64s0 0 0 0c18 0 34.6 6 48 16l208 0c35.3 0 64 28.7 64 64s-28.7 64-64 64l-82 0c1.3 5.1 2 10.5 2 16c0 25.3-14.7 47.2-36 57.6c2.6 7 4 14.5 4 22.4c0 20-9.2 37.9-23.6 49.7c4.9 9 7.6 19.4 7.6 30.3c0 35.3-28.7 64-64 64l-64 0-24 0C75.2 448 0 372.8 0 280l0-48C0 139.2 75.2 64 168 64l24 0zm64 336c8.8 0 16-7.2 16-16s-7.2-16-16-16l-48 0-16 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l64 0zm16-176c0 5.5-.7 10.9-2 16l2 0 32 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-32 0 0 16zm-24 64l-40 0c-8.8 0-16 7.2-16 16s7.2 16 16 16l48 0 16 0c8.8 0 16-7.2 16-16s-7.2-16-16-16l-24 0z\"]\n};\nvar faFaceSmileBeam = {\n  prefix: 'far',\n  iconName: 'face-smile-beam',\n  icon: [512, 512, [128522, \"smile-beam\"], \"f5b8\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm177.6 62.1C192.8 334.5 218.8 352 256 352s63.2-17.5 78.4-33.9c9-9.7 24.2-10.4 33.9-1.4s10.4 24.2 1.4 33.9c-22 23.8-60 49.4-113.6 49.4s-91.7-25.5-113.6-49.4c-9-9.7-8.4-24.9 1.4-33.9s24.9-8.4 33.9 1.4zm40-89.3l0 0 0 0-.2-.2c-.2-.2-.4-.5-.7-.9c-.6-.8-1.6-2-2.8-3.4c-2.5-2.8-6-6.6-10.2-10.3c-8.8-7.8-18.8-14-27.7-14s-18.9 6.2-27.7 14c-4.2 3.7-7.7 7.5-10.2 10.3c-1.2 1.4-2.2 2.6-2.8 3.4c-.3 .4-.6 .7-.7 .9l-.2 .2 0 0 0 0 0 0c-2.1 2.8-5.7 3.9-8.9 2.8s-5.5-4.1-5.5-7.6c0-17.9 6.7-35.6 16.6-48.8c9.8-13 23.9-23.2 39.4-23.2s29.6 10.2 39.4 23.2c9.9 13.2 16.6 30.9 16.6 48.8c0 3.4-2.2 6.5-5.5 7.6s-6.9 0-8.9-2.8l0 0 0 0zm160 0l0 0-.2-.2c-.2-.2-.4-.5-.7-.9c-.6-.8-1.6-2-2.8-3.4c-2.5-2.8-6-6.6-10.2-10.3c-8.8-7.8-18.8-14-27.7-14s-18.9 6.2-27.7 14c-4.2 3.7-7.7 7.5-10.2 10.3c-1.2 1.4-2.2 2.6-2.8 3.4c-.3 .4-.6 .7-.7 .9l-.2 .2 0 0 0 0 0 0c-2.1 2.8-5.7 3.9-8.9 2.8s-5.5-4.1-5.5-7.6c0-17.9 6.7-35.6 16.6-48.8c9.8-13 23.9-23.2 39.4-23.2s29.6 10.2 39.4 23.2c9.9 13.2 16.6 30.9 16.6 48.8c0 3.4-2.2 6.5-5.5 7.6s-6.9 0-8.9-2.8l0 0 0 0 0 0z\"]\n};\nvar faSmileBeam = faFaceSmileBeam;\nvar faFaceGrinStars = {\n  prefix: 'far',\n  iconName: 'face-grin-stars',\n  icon: [512, 512, [129321, \"grin-stars\"], \"f587\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM183.2 132.6c-1.3-2.8-4.1-4.6-7.2-4.6s-5.9 1.8-7.2 4.6l-16.6 34.7-38.1 5c-3.1 .4-5.6 2.5-6.6 5.5s-.1 6.2 2.1 8.3l27.9 26.5-7 37.8c-.6 3 .7 6.1 3.2 7.9s5.8 2 8.5 .6L176 240.5l33.8 18.3c2.7 1.5 6 1.3 8.5-.6s3.7-4.9 3.2-7.9l-7-37.8L242.4 186c2.2-2.1 3.1-5.3 2.1-8.3s-3.5-5.1-6.6-5.5l-38.1-5-16.6-34.7zm160 0c-1.3-2.8-4.1-4.6-7.2-4.6s-5.9 1.8-7.2 4.6l-16.6 34.7-38.1 5c-3.1 .4-5.6 2.5-6.6 5.5s-.1 6.2 2.1 8.3l27.9 26.5-7 37.8c-.6 3 .7 6.1 3.2 7.9s5.8 2 8.5 .6L336 240.5l33.8 18.3c2.7 1.5 6 1.3 8.5-.6s3.7-4.9 3.2-7.9l-7-37.8L402.4 186c2.2-2.1 3.1-5.3 2.1-8.3s-3.5-5.1-6.6-5.5l-38.1-5-16.6-34.7zm6.3 175.8c-28.9 6.8-60.5 10.5-93.6 10.5s-64.7-3.7-93.6-10.5c-18.7-4.4-35.9 12-25.5 28.1c24.6 38.1 68.7 63.5 119.1 63.5s94.5-25.4 119.1-63.5c10.4-16.1-6.8-32.5-25.5-28.1z\"]\n};\nvar faGrinStars = faFaceGrinStars;\nvar faAddressBook = {\n  prefix: 'far',\n  iconName: 'address-book',\n  icon: [512, 512, [62138, \"contact-book\"], \"f2b9\", \"M384 48c8.8 0 16 7.2 16 16V448c0 8.8-7.2 16-16 16H96c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16H384zM96 0C60.7 0 32 28.7 32 64V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V64c0-35.3-28.7-64-64-64H96zM240 256a64 64 0 1 0 0-128 64 64 0 1 0 0 128zm-32 32c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16H336c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80H208zM512 80c0-8.8-7.2-16-16-16s-16 7.2-16 16v64c0 8.8 7.2 16 16 16s16-7.2 16-16V80zM496 192c-8.8 0-16 7.2-16 16v64c0 8.8 7.2 16 16 16s16-7.2 16-16V208c0-8.8-7.2-16-16-16zm16 144c0-8.8-7.2-16-16-16s-16 7.2-16 16v64c0 8.8 7.2 16 16 16s16-7.2 16-16V336z\"]\n};\nvar faContactBook = faAddressBook;\nvar faComments = {\n  prefix: 'far',\n  iconName: 'comments',\n  icon: [640, 512, [128490, 61670], \"f086\", \"M88.2 309.1c9.8-18.3 6.8-40.8-7.5-55.8C59.4 230.9 48 204 48 176c0-63.5 63.8-128 160-128s160 64.5 160 128s-63.8 128-160 128c-13.1 0-25.8-1.3-37.8-3.6c-10.4-2-21.2-.6-30.7 4.2c-4.1 2.1-8.3 4.1-12.6 6c-16 7.2-32.9 13.5-49.9 18c2.8-4.6 5.4-9.1 7.9-13.6c1.1-1.9 2.2-3.9 3.2-5.9zM0 176c0 41.8 17.2 80.1 45.9 110.3c-.9 1.7-1.9 3.5-2.8 5.1c-10.3 18.4-22.3 36.5-36.6 52.1c-6.6 7-8.3 17.2-4.6 25.9C5.8 378.3 14.4 384 24 384c43 0 86.5-13.3 122.7-29.7c4.8-2.2 9.6-4.5 14.2-6.8c15.1 3 30.9 4.5 47.1 4.5c114.9 0 208-78.8 208-176S322.9 0 208 0S0 78.8 0 176zM432 480c16.2 0 31.9-1.6 47.1-4.5c4.6 2.3 9.4 4.6 14.2 6.8C529.5 498.7 573 512 616 512c9.6 0 18.2-5.7 22-14.5c3.8-8.8 2-19-4.6-25.9c-14.2-15.6-26.2-33.7-36.6-52.1c-.9-1.7-1.9-3.4-2.8-5.1C622.8 384.1 640 345.8 640 304c0-94.4-87.9-171.5-198.2-175.8c4.1 15.2 6.2 31.2 6.2 47.8l0 .6c87.2 6.7 144 67.5 144 127.4c0 28-11.4 54.9-32.7 77.2c-14.3 15-17.3 37.6-7.5 55.8c1.1 2 2.2 4 3.2 5.9c2.5 4.5 5.2 9 7.9 13.6c-17-4.5-33.9-10.7-49.9-18c-4.3-1.9-8.5-3.9-12.6-6c-9.5-4.8-20.3-6.2-30.7-4.2c-12.1 2.4-24.7 3.6-37.8 3.6c-61.7 0-110-26.5-136.8-62.3c-16 5.4-32.8 9.4-50 11.8C279 439.8 350 480 432 480z\"]\n};\nvar faPaste = {\n  prefix: 'far',\n  iconName: 'paste',\n  icon: [512, 512, [\"file-clipboard\"], \"f0ea\", \"M104.6 48H64C28.7 48 0 76.7 0 112V384c0 35.3 28.7 64 64 64h96V400H64c-8.8 0-16-7.2-16-16V112c0-8.8 7.2-16 16-16H80c0 17.7 14.3 32 32 32h72.4C202 108.4 227.6 96 256 96h62c-7.1-27.6-32.2-48-62-48H215.4C211.6 20.9 188.2 0 160 0s-51.6 20.9-55.4 48zM144 56a16 16 0 1 1 32 0 16 16 0 1 1 -32 0zM448 464H256c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16l140.1 0L464 243.9V448c0 8.8-7.2 16-16 16zM256 512H448c35.3 0 64-28.7 64-64V243.9c0-12.7-5.1-24.9-14.1-33.9l-67.9-67.9c-9-9-21.2-14.1-33.9-14.1H256c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64z\"]\n};\nvar faFileClipboard = faPaste;\nvar faFaceGrinTongueSquint = {\n  prefix: 'far',\n  iconName: 'face-grin-tongue-squint',\n  icon: [512, 512, [128541, \"grin-tongue-squint\"], \"f58a\", \"M464 256c0-114.9-93.1-208-208-208S48 141.1 48 256c0 81.7 47.1 152.4 115.7 186.4c-2.4-8.4-3.7-17.3-3.7-26.4V392.7c-24-17.5-43.1-41.4-54.8-69.2c-5-11.8 7-22.5 19.3-18.7c39.7 12.2 84.5 19 131.8 19s92.1-6.8 131.8-19c12.3-3.8 24.3 6.9 19.3 18.7c-11.8 28-31.1 52-55.4 69.6V416c0 9.2-1.3 18-3.7 26.4C416.9 408.4 464 337.7 464 256zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm116-98.9c0-9 9.6-14.7 17.5-10.5l89.9 47.9c10.7 5.7 10.7 21.1 0 26.8l-89.9 47.9c-7.9 4.2-17.5-1.5-17.5-10.5c0-2.8 1-5.5 2.8-7.6l36-43.2-36-43.2c-1.8-2.1-2.8-4.8-2.8-7.6zm262.5-10.5c7.9-4.2 17.5 1.5 17.5 10.5c0 2.8-1 5.5-2.8 7.6l-36 43.2 36 43.2c1.8 2.1 2.8 4.8 2.8 7.6c0 9-9.6 14.7-17.5 10.5l-89.9-47.9c-10.7-5.7-10.7-21.1 0-26.8l89.9-47.9zM320 416V378.6c0-14.7-11.9-26.6-26.6-26.6h-2c-11.3 0-21.1 7.9-23.6 18.9c-2.8 12.6-20.8 12.6-23.6 0c-2.5-11.1-12.3-18.9-23.6-18.9h-2c-14.7 0-26.6 11.9-26.6 26.6V416c0 35.3 28.7 64 64 64s64-28.7 64-64z\"]\n};\nvar faGrinTongueSquint = faFaceGrinTongueSquint;\nvar faFaceFlushed = {\n  prefix: 'far',\n  iconName: 'face-flushed',\n  icon: [512, 512, [128563, \"flushed\"], \"f579\", \"M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM256 0a256 256 0 1 0 0 512A256 256 0 1 0 256 0zM160.4 248a24 24 0 1 0 0-48 24 24 0 1 0 0 48zm216-24a24 24 0 1 0 -48 0 24 24 0 1 0 48 0zM192 336c-13.3 0-24 10.7-24 24s10.7 24 24 24H320c13.3 0 24-10.7 24-24s-10.7-24-24-24H192zM160 176a48 48 0 1 1 0 96 48 48 0 1 1 0-96zm0 128a80 80 0 1 0 0-160 80 80 0 1 0 0 160zm144-80a48 48 0 1 1 96 0 48 48 0 1 1 -96 0zm128 0a80 80 0 1 0 -160 0 80 80 0 1 0 160 0z\"]\n};\nvar faFlushed = faFaceFlushed;\nvar faSquareCaretRight = {\n  prefix: 'far',\n  iconName: 'square-caret-right',\n  icon: [448, 512, [\"caret-square-right\"], \"f152\", \"M400 96c0-8.8-7.2-16-16-16L64 80c-8.8 0-16 7.2-16 16l0 320c0 8.8 7.2 16 16 16l320 0c8.8 0 16-7.2 16-16l0-320zM384 32c35.3 0 64 28.7 64 64l0 320c0 35.3-28.7 64-64 64L64 480c-35.3 0-64-28.7-64-64L0 96C0 60.7 28.7 32 64 32l320 0zM320 256c0 6.7-2.8 13-7.7 17.6l-112 104c-7 6.5-17.2 8.2-25.9 4.4s-14.4-12.5-14.4-22l0-208c0-9.5 5.7-18.2 14.4-22s18.9-2.1 25.9 4.4l112 104c4.9 4.5 7.7 10.9 7.7 17.6z\"]\n};\nvar faCaretSquareRight = faSquareCaretRight;\nvar faSquareMinus = {\n  prefix: 'far',\n  iconName: 'square-minus',\n  icon: [448, 512, [61767, \"minus-square\"], \"f146\", \"M64 80c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H384c8.8 0 16-7.2 16-16V96c0-8.8-7.2-16-16-16H64zM0 96C0 60.7 28.7 32 64 32H384c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zM152 232H296c13.3 0 24 10.7 24 24s-10.7 24-24 24H152c-13.3 0-24-10.7-24-24s10.7-24 24-24z\"]\n};\nvar faMinusSquare = faSquareMinus;\nvar faCompass = {\n  prefix: 'far',\n  iconName: 'compass',\n  icon: [512, 512, [129517], \"f14e\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm306.7 69.1L162.4 380.6c-19.4 7.5-38.5-11.6-31-31l55.5-144.3c3.3-8.5 9.9-15.1 18.4-18.4l144.3-55.5c19.4-7.5 38.5 11.6 31 31L325.1 306.7c-3.2 8.5-9.9 15.1-18.4 18.4zM288 256a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\"]\n};\nvar faSquareCaretDown = {\n  prefix: 'far',\n  iconName: 'square-caret-down',\n  icon: [448, 512, [\"caret-square-down\"], \"f150\", \"M384 432c8.8 0 16-7.2 16-16l0-320c0-8.8-7.2-16-16-16L64 80c-8.8 0-16 7.2-16 16l0 320c0 8.8 7.2 16 16 16l320 0zm64-16c0 35.3-28.7 64-64 64L64 480c-35.3 0-64-28.7-64-64L0 96C0 60.7 28.7 32 64 32l320 0c35.3 0 64 28.7 64 64l0 320zM224 352c-6.7 0-13-2.8-17.6-7.7l-104-112c-6.5-7-8.2-17.2-4.4-25.9s12.5-14.4 22-14.4l208 0c9.5 0 18.2 5.7 22 14.4s2.1 18.9-4.4 25.9l-104 112c-4.5 4.9-10.9 7.7-17.6 7.7z\"]\n};\nvar faCaretSquareDown = faSquareCaretDown;\nvar faFaceKissBeam = {\n  prefix: 'far',\n  iconName: 'face-kiss-beam',\n  icon: [512, 512, [128537, \"kiss-beam\"], \"f597\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm304.7 41.7c4.3 5.1 7.3 11.4 7.3 18.3s-3.1 13.2-7.3 18.3c-4.3 5.2-10.1 9.7-16.7 13.4c-2.7 1.5-5.7 3-8.7 4.3c3.1 1.3 6 2.7 8.7 4.3c6.6 3.7 12.5 8.2 16.7 13.4c4.3 5.1 7.3 11.4 7.3 18.3s-3.1 13.2-7.3 18.3c-4.3 5.2-10.1 9.7-16.7 13.4C274.7 427.1 257.4 432 240 432c-3.6 0-6.8-2.5-7.7-6s.6-7.2 3.8-9l0 0 0 0 0 0 0 0 .2-.1c.2-.1 .5-.3 .9-.5c.8-.5 2-1.2 3.4-2.1c2.8-1.9 6.5-4.5 10.2-7.6c3.7-3.1 7.2-6.6 9.6-10.1c2.5-3.5 3.5-6.4 3.5-8.6s-1-5-3.5-8.6c-2.5-3.5-5.9-6.9-9.6-10.1c-3.7-3.1-7.4-5.7-10.2-7.6c-1.4-.9-2.6-1.6-3.4-2.1c-.4-.2-.7-.4-.9-.5l-.2-.1 0 0 0 0 0 0c-2.5-1.4-4.1-4.1-4.1-7s1.6-5.6 4.1-7l0 0 0 0 0 0 0 0 0 0 .2-.1c.2-.1 .5-.3 .9-.5c.8-.5 2-1.2 3.4-2.1c2.8-1.9 6.5-4.5 10.2-7.6c3.7-3.1 7.2-6.6 9.6-10.1c2.5-3.5 3.5-6.4 3.5-8.6s-1-5-3.5-8.6c-2.5-3.5-5.9-6.9-9.6-10.1c-3.7-3.1-7.4-5.7-10.2-7.6c-1.4-.9-2.6-1.6-3.4-2.1c-.4-.2-.7-.4-.9-.5l-.2-.1 0 0 0 0 0 0c-3.2-1.8-4.7-5.5-3.8-9s4.1-6 7.7-6c17.4 0 34.7 4.9 47.9 12.3c6.6 3.7 12.5 8.2 16.7 13.4zm-87.1-68.9l0 0 0 0-.2-.2c-.2-.2-.4-.5-.7-.9c-.6-.8-1.6-2-2.8-3.4c-2.5-2.8-6-6.6-10.2-10.3c-8.8-7.8-18.8-14-27.7-14s-18.9 6.2-27.7 14c-4.2 3.7-7.7 7.5-10.2 10.3c-1.2 1.4-2.2 2.6-2.8 3.4c-.3 .4-.6 .7-.7 .9l-.2 .2 0 0 0 0 0 0c-2.1 2.8-5.7 3.9-8.9 2.8s-5.5-4.1-5.5-7.6c0-17.9 6.7-35.6 16.6-48.8c9.8-13 23.9-23.2 39.4-23.2s29.6 10.2 39.4 23.2c9.9 13.2 16.6 30.9 16.6 48.8c0 3.4-2.2 6.5-5.5 7.6s-6.9 0-8.9-2.8l0 0 0 0zm160 0l0 0-.2-.2c-.2-.2-.4-.5-.7-.9c-.6-.8-1.6-2-2.8-3.4c-2.5-2.8-6-6.6-10.2-10.3c-8.8-7.8-18.8-14-27.7-14s-18.9 6.2-27.7 14c-4.2 3.7-7.7 7.5-10.2 10.3c-1.2 1.4-2.2 2.6-2.8 3.4c-.3 .4-.6 .7-.7 .9l-.2 .2 0 0 0 0 0 0c-2.1 2.8-5.7 3.9-8.9 2.8s-5.5-4.1-5.5-7.6c0-17.9 6.7-35.6 16.6-48.8c9.8-13 23.9-23.2 39.4-23.2s29.6 10.2 39.4 23.2c9.9 13.2 16.6 30.9 16.6 48.8c0 3.4-2.2 6.5-5.5 7.6s-6.9 0-8.9-2.8l0 0 0 0 0 0z\"]\n};\nvar faKissBeam = faFaceKissBeam;\nvar faLightbulb = {\n  prefix: 'far',\n  iconName: 'lightbulb',\n  icon: [384, 512, [128161], \"f0eb\", \"M297.2 248.9C311.6 228.3 320 203.2 320 176c0-70.7-57.3-128-128-128S64 105.3 64 176c0 27.2 8.4 52.3 22.8 72.9c3.7 5.3 8.1 11.3 12.8 17.7l0 0c12.9 17.7 28.3 38.9 39.8 59.8c10.4 19 15.7 38.8 18.3 57.5H109c-2.2-12-5.9-23.7-11.8-34.5c-9.9-18-22.2-34.9-34.5-51.8l0 0 0 0c-5.2-7.1-10.4-14.2-15.4-21.4C27.6 247.9 16 213.3 16 176C16 78.8 94.8 0 192 0s176 78.8 176 176c0 37.3-11.6 71.9-31.4 100.3c-5 7.2-10.2 14.3-15.4 21.4l0 0 0 0c-12.3 16.8-24.6 33.7-34.5 51.8c-5.9 10.8-9.6 22.5-11.8 34.5H226.4c2.6-18.7 7.9-38.6 18.3-57.5c11.5-20.9 26.9-42.1 39.8-59.8l0 0 0 0 0 0c4.7-6.4 9-12.4 12.7-17.7zM192 128c-26.5 0-48 21.5-48 48c0 8.8-7.2 16-16 16s-16-7.2-16-16c0-44.2 35.8-80 80-80c8.8 0 16 7.2 16 16s-7.2 16-16 16zm0 384c-44.2 0-80-35.8-80-80V416H272v16c0 44.2-35.8 80-80 80z\"]\n};\nvar faFlag = {\n  prefix: 'far',\n  iconName: 'flag',\n  icon: [448, 512, [127988, 61725], \"f024\", \"M48 24C48 10.7 37.3 0 24 0S0 10.7 0 24V64 350.5 400v88c0 13.3 10.7 24 24 24s24-10.7 24-24V388l80.3-20.1c41.1-10.3 84.6-5.5 122.5 13.4c44.2 22.1 95.5 24.8 141.7 7.4l34.7-13c12.5-4.7 20.8-16.6 20.8-30V66.1c0-23-24.2-38-44.8-27.7l-9.6 4.8c-46.3 23.2-100.8 23.2-147.1 0c-35.1-17.6-75.4-22-113.5-12.5L48 52V24zm0 77.5l96.6-24.2c27-6.7 55.5-3.6 80.4 8.8c54.9 27.4 118.7 29.7 175 6.8V334.7l-24.4 9.1c-33.7 12.6-71.2 10.7-103.4-5.4c-48.2-24.1-103.3-30.1-155.6-17.1L48 338.5v-237z\"]\n};\nvar faSquareCheck = {\n  prefix: 'far',\n  iconName: 'square-check',\n  icon: [448, 512, [9745, 9989, 61510, \"check-square\"], \"f14a\", \"M64 80c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H384c8.8 0 16-7.2 16-16V96c0-8.8-7.2-16-16-16H64zM0 96C0 60.7 28.7 32 64 32H384c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zM337 209L209 337c-9.4 9.4-24.6 9.4-33.9 0l-64-64c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47L303 175c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z\"]\n};\nvar faCheckSquare = faSquareCheck;\nvar faCircleDot = {\n  prefix: 'far',\n  iconName: 'circle-dot',\n  icon: [512, 512, [128280, \"dot-circle\"], \"f192\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256-96a96 96 0 1 1 0 192 96 96 0 1 1 0-192z\"]\n};\nvar faDotCircle = faCircleDot;\nvar faFaceDizzy = {\n  prefix: 'far',\n  iconName: 'face-dizzy',\n  icon: [512, 512, [\"dizzy\"], \"f567\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm256 32a64 64 0 1 1 0 128 64 64 0 1 1 0-128zM103 135c9.4-9.4 24.6-9.4 33.9 0l23 23 23-23c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-23 23 23 23c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-23-23-23 23c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l23-23-23-23c-9.4-9.4-9.4-24.6 0-33.9zm192 0c9.4-9.4 24.6-9.4 33.9 0l23 23 23-23c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-23 23 23 23c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-23-23-23 23c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l23-23-23-23c-9.4-9.4-9.4-24.6 0-33.9z\"]\n};\nvar faDizzy = faFaceDizzy;\nvar faFutbol = {\n  prefix: 'far',\n  iconName: 'futbol',\n  icon: [512, 512, [9917, \"futbol-ball\", \"soccer-ball\"], \"f1e3\", \"M435.4 361.3l-89.7-6c-5.2-.3-10.3 1.1-14.5 4.2s-7.2 7.4-8.4 12.5l-22 87.2c-14.4 3.2-29.4 4.8-44.8 4.8s-30.3-1.7-44.8-4.8l-22-87.2c-1.3-5-4.3-9.4-8.4-12.5s-9.3-4.5-14.5-4.2l-89.7 6C61.7 335.9 51.9 307 49 276.2L125 228.3c4.4-2.8 7.6-7 9.2-11.9s1.4-10.2-.5-15L100.4 118c19.9-22.4 44.6-40.5 72.4-52.7l69.1 57.6c4 3.3 9 5.1 14.1 5.1s10.2-1.8 14.1-5.1l69.1-57.6c27.8 12.2 52.5 30.3 72.4 52.7l-33.4 83.4c-1.9 4.8-2.1 10.1-.5 15s4.9 9.1 9.2 11.9L463 276.2c-3 30.8-12.7 59.7-27.6 85.1zM256 48l.9 0h-1.8l.9 0zM56.7 196.2c.9-3 1.9-6.1 2.9-9.1l-2.9 9.1zM132 423l3.8 2.7c-1.3-.9-2.5-1.8-3.8-2.7zm248.1-.1c-1.3 1-2.7 2-4 2.9l4-2.9zm75.2-226.6l-3-9.2c1.1 3 2.1 6.1 3 9.2zM256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm14.1-325.7c-8.4-6.1-19.8-6.1-28.2 0L194 221c-8.4 6.1-11.9 16.9-8.7 26.8l18.3 56.3c3.2 9.9 12.4 16.6 22.8 16.6h59.2c10.4 0 19.6-6.7 22.8-16.6l18.3-56.3c3.2-9.9-.3-20.7-8.7-26.8l-47.9-34.8z\"]\n};\nvar faFutbolBall = faFutbol;\nvar faSoccerBall = faFutbol;\nvar faPenToSquare = {\n  prefix: 'far',\n  iconName: 'pen-to-square',\n  icon: [512, 512, [\"edit\"], \"f044\", \"M441 58.9L453.1 71c9.4 9.4 9.4 24.6 0 33.9L424 134.1 377.9 88 407 58.9c9.4-9.4 24.6-9.4 33.9 0zM209.8 256.2L344 121.9 390.1 168 255.8 302.2c-2.9 2.9-6.5 5-10.4 6.1l-58.5 16.7 16.7-58.5c1.1-3.9 3.2-7.5 6.1-10.4zM373.1 25L175.8 222.2c-8.7 8.7-15 19.4-18.3 31.1l-28.6 100c-2.4 8.4-.1 17.4 6.1 23.6s15.2 8.5 23.6 6.1l100-28.6c11.8-3.4 22.5-9.7 31.1-18.3L487 138.9c28.1-28.1 28.1-73.7 0-101.8L474.9 25C446.8-3.1 401.2-3.1 373.1 25zM88 64C39.4 64 0 103.4 0 152V424c0 48.6 39.4 88 88 88H360c48.6 0 88-39.4 88-88V312c0-13.3-10.7-24-24-24s-24 10.7-24 24V424c0 22.1-17.9 40-40 40H88c-22.1 0-40-17.9-40-40V152c0-22.1 17.9-40 40-40H200c13.3 0 24-10.7 24-24s-10.7-24-24-24H88z\"]\n};\nvar faEdit = faPenToSquare;\nvar faHourglassHalf = {\n  prefix: 'far',\n  iconName: 'hourglass-half',\n  icon: [384, 512, [\"hourglass-2\"], \"f252\", \"M0 24C0 10.7 10.7 0 24 0H360c13.3 0 24 10.7 24 24s-10.7 24-24 24h-8V67c0 40.3-16 79-44.5 107.5L225.9 256l81.5 81.5C336 366 352 404.7 352 445v19h8c13.3 0 24 10.7 24 24s-10.7 24-24 24H24c-13.3 0-24-10.7-24-24s10.7-24 24-24h8V445c0-40.3 16-79 44.5-107.5L158.1 256 76.5 174.5C48 146 32 107.3 32 67V48H24C10.7 48 0 37.3 0 24zM110.5 371.5c-3.9 3.9-7.5 8.1-10.7 12.5H284.2c-3.2-4.4-6.8-8.6-10.7-12.5L192 289.9l-81.5 81.5zM284.2 128C297 110.4 304 89 304 67V48H80V67c0 22.1 7 43.4 19.8 61H284.2z\"]\n};\nvar faHourglass2 = faHourglassHalf;\nvar faEyeSlash = {\n  prefix: 'far',\n  iconName: 'eye-slash',\n  icon: [640, 512, [], \"f070\", \"M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L525.6 386.7c39.6-40.6 66.4-86.1 79.9-118.4c3.3-7.9 3.3-16.7 0-24.6c-14.9-35.7-46.2-87.7-93-131.1C465.5 68.8 400.8 32 320 32c-68.2 0-125 26.3-169.3 60.8L38.8 5.1zm151 118.3C226 97.7 269.5 80 320 80c65.2 0 118.8 29.6 159.9 67.7C518.4 183.5 545 226 558.6 256c-12.6 28-36.6 66.8-70.9 100.9l-53.8-42.2c9.1-17.6 14.2-37.5 14.2-58.7c0-70.7-57.3-128-128-128c-32.2 0-61.7 11.9-84.2 31.5l-46.1-36.1zM394.9 284.2l-81.5-63.9c4.2-8.5 6.6-18.2 6.6-28.3c0-5.5-.7-10.9-2-16c.7 0 1.3 0 2 0c44.2 0 80 35.8 80 80c0 9.9-1.8 19.4-5.1 28.2zm51.3 163.3l-41.9-33C378.8 425.4 350.7 432 320 432c-65.2 0-118.8-29.6-159.9-67.7C121.6 328.5 95 286 81.4 256c8.3-18.4 21.5-41.5 39.4-64.8L83.1 161.5C60.3 191.2 44 220.8 34.5 243.7c-3.3 7.9-3.3 16.7 0 24.6c14.9 35.7 46.2 87.7 93 131.1C174.5 443.2 239.2 480 320 480c47.8 0 89.9-12.9 126.2-32.5zm-88-69.3L302 334c-23.5-5.4-43.1-21.2-53.7-42.3l-56.1-44.2c-.2 2.8-.3 5.6-.3 8.5c0 70.7 57.3 128 128 128c13.3 0 26.1-2 38.2-5.8z\"]\n};\nvar faHand = {\n  prefix: 'far',\n  iconName: 'hand',\n  icon: [512, 512, [129306, 9995, \"hand-paper\"], \"f256\", \"M256 0c-25.3 0-47.2 14.7-57.6 36c-7-2.6-14.5-4-22.4-4c-35.3 0-64 28.7-64 64V261.5l-2.7-2.7c-25-25-65.5-25-90.5 0s-25 65.5 0 90.5L106.5 437c48 48 113.1 75 181 75H296h8c1.5 0 3-.1 4.5-.4c91.7-6.2 165-79.4 171.1-171.1c.3-1.5 .4-3 .4-4.5V160c0-35.3-28.7-64-64-64c-5.5 0-10.9 .7-16 2V96c0-35.3-28.7-64-64-64c-7.9 0-15.4 1.4-22.4 4C303.2 14.7 281.3 0 256 0zM240 96.1c0 0 0-.1 0-.1V64c0-8.8 7.2-16 16-16s16 7.2 16 16V95.9c0 0 0 .1 0 .1V232c0 13.3 10.7 24 24 24s24-10.7 24-24V96c0 0 0 0 0-.1c0-8.8 7.2-16 16-16s16 7.2 16 16v55.9c0 0 0 .1 0 .1v80c0 13.3 10.7 24 24 24s24-10.7 24-24V160.1c0 0 0-.1 0-.1c0-8.8 7.2-16 16-16s16 7.2 16 16V332.9c-.1 .6-.1 1.3-.2 1.9c-3.4 69.7-59.3 125.6-129 129c-.6 0-1.3 .1-1.9 .2H296h-8.5c-55.2 0-108.1-21.9-147.1-60.9L52.7 315.3c-6.2-6.2-6.2-16.4 0-22.6s16.4-6.2 22.6 0L119 336.4c6.9 6.9 17.2 8.9 26.2 5.2s14.8-12.5 14.8-22.2V96c0-8.8 7.2-16 16-16c8.8 0 16 7.1 16 15.9V232c0 13.3 10.7 24 24 24s24-10.7 24-24V96.1z\"]\n};\nvar faHandPaper = faHand;\nvar faHandSpock = {\n  prefix: 'far',\n  iconName: 'hand-spock',\n  icon: [576, 512, [128406], \"f259\", \"M170.2 80.8C161 47 180.8 12 214.6 2.4c34-9.6 69.4 10.2 79 44.2l30.3 107.1L337.1 84c6.6-34.7 40.1-57.5 74.8-50.9c31.4 6 53 33.9 52 64.9c10-2.6 20.8-2.8 31.5-.1c34.3 8.6 55.1 43.3 46.6 77.6L486.7 397.2C469.8 464.7 409.2 512 339.6 512c-11.2 0-22.5 0-33.7 0c-56.9 0-112.2-19-157.2-53.9l-92-71.6c-27.9-21.7-32.9-61.9-11.2-89.8s61.9-32.9 89.8-11.2l17 13.2L100.5 167.5c-13-32.9 3.2-70.1 36-83c11.1-4.4 22.7-5.4 33.7-3.7zm77.1-21.2c-2.4-8.5-11.2-13.4-19.7-11s-13.4 11.2-11 19.7l54.8 182.4c3.5 12.3-3.3 25.2-15.4 29.3s-25.3-2-30-13.9L174.9 138.1c-3.2-8.2-12.5-12.3-20.8-9s-12.3 12.5-9 20.8l73.3 185.6c12 30.3-23.7 57-49.4 37l-63.1-49.1c-7-5.4-17-4.2-22.5 2.8s-4.2 17 2.8 22.5l92 71.6c36.5 28.4 81.4 43.8 127.7 43.8c11.2 0 22.5 0 33.7 0c47.5 0 89-32.4 100.5-78.5l55.4-221.6c2.1-8.6-3.1-17.3-11.6-19.4s-17.3 3.1-19.4 11.6l-26 104C435.6 271.8 425 280 413 280c-16.5 0-28.9-15-25.8-31.2L415.7 99c1.7-8.7-4-17.1-12.7-18.7s-17.1 4-18.7 12.7L352.5 260c-2.2 11.6-12.4 20-24.2 20c-11 0-20.7-7.3-23.7-17.9L247.4 59.6z\"]\n};\nvar faFaceKiss = {\n  prefix: 'far',\n  iconName: 'face-kiss',\n  icon: [512, 512, [128535, \"kiss\"], \"f596\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm304.7 25.7c4.3 5.1 7.3 11.4 7.3 18.3s-3.1 13.2-7.3 18.3c-4.3 5.2-10.1 9.7-16.7 13.4c-2.7 1.5-5.7 3-8.7 4.3c3.1 1.3 6 2.7 8.7 4.3c6.6 3.7 12.5 8.2 16.7 13.4c4.3 5.1 7.3 11.4 7.3 18.3s-3.1 13.2-7.3 18.3c-4.3 5.2-10.1 9.7-16.7 13.4C274.7 411.1 257.4 416 240 416c-3.6 0-6.8-2.5-7.7-6s.6-7.2 3.8-9l0 0 0 0 0 0 0 0 .2-.1c.2-.1 .5-.3 .9-.5c.8-.5 2-1.2 3.4-2.1c2.8-1.9 6.5-4.5 10.2-7.6c3.7-3.1 7.2-6.6 9.6-10.1c2.5-3.5 3.5-6.4 3.5-8.6s-1-5-3.5-8.6c-2.5-3.5-5.9-6.9-9.6-10.1c-3.7-3.1-7.4-5.7-10.2-7.6c-1.4-.9-2.6-1.6-3.4-2.1l-.8-.5-.1-.1-.2-.1 0 0 0 0 0 0c-2.5-1.4-4.1-4.1-4.1-7s1.6-5.6 4.1-7l0 0 0 0 0 0 0 0 0 0 .2-.1c.2-.1 .5-.3 .9-.5c.8-.5 2-1.2 3.4-2.1c2.8-1.9 6.5-4.5 10.2-7.6c3.7-3.1 7.2-6.6 9.6-10.1c2.5-3.5 3.5-6.4 3.5-8.6s-1-5-3.5-8.6c-2.5-3.5-5.9-6.9-9.6-10.1c-3.7-3.1-7.4-5.7-10.2-7.6c-1.4-.9-2.6-1.6-3.4-2.1c-.4-.2-.7-.4-.9-.5l-.2-.1 0 0 0 0 0 0c-3.2-1.8-4.7-5.5-3.8-9s4.1-6 7.7-6c17.4 0 34.7 4.9 47.9 12.3c6.6 3.7 12.5 8.2 16.7 13.4zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"]\n};\nvar faKiss = faFaceKiss;\nvar faFaceGrinTongue = {\n  prefix: 'far',\n  iconName: 'face-grin-tongue',\n  icon: [512, 512, [128539, \"grin-tongue\"], \"f589\", \"M464 256c0-114.9-93.1-208-208-208S48 141.1 48 256c0 81.7 47.1 152.4 115.7 186.4c-2.4-8.4-3.7-17.3-3.7-26.4V363.6c-8.9-8-16.7-17.1-23.1-27.1c-10.4-16.1 6.8-32.5 25.5-28.1c28.9 6.8 60.5 10.5 93.6 10.5s64.7-3.7 93.6-10.5c18.7-4.4 35.9 12 25.5 28.1c-6.4 9.9-14.2 19-23 27V416c0 9.2-1.3 18-3.7 26.4C416.9 408.4 464 337.7 464 256zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm176.4-80a32 32 0 1 1 0 64 32 32 0 1 1 0-64zm128 32a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zM320 416V378.6c0-14.7-11.9-26.6-26.6-26.6h-2c-11.3 0-21.1 7.9-23.6 18.9c-2.8 12.6-20.8 12.6-23.6 0c-2.5-11.1-12.3-18.9-23.6-18.9h-2c-14.7 0-26.6 11.9-26.6 26.6V416c0 35.3 28.7 64 64 64s64-28.7 64-64z\"]\n};\nvar faGrinTongue = faFaceGrinTongue;\nvar faChessBishop = {\n  prefix: 'far',\n  iconName: 'chess-bishop',\n  icon: [320, 512, [9821], \"f43a\", \"M104 0C90.7 0 80 10.7 80 24c0 11.2 7.6 20.6 18 23.2c-7.8 8-16.1 17-24.4 27C38.2 116.7 0 178.8 0 250.9c0 44.8 24.6 72.2 48 87.8V352H96V325c0-9-5-17.2-13-21.3c-18-9.3-35-24.7-35-52.7c0-55.5 29.8-106.8 62.4-145.9c16-19.2 32.1-34.8 44.2-45.5c1.9-1.7 3.7-3.2 5.3-4.6c1.7 1.4 3.4 3 5.3 4.6c12.1 10.7 28.2 26.3 44.2 45.5c5.3 6.3 10.5 13 15.5 20L159 191c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l57.8-57.8c12.8 25.9 21.2 54.3 21.2 83.8c0 28-17 43.4-35 52.7c-8 4.1-13 12.3-13 21.3v27h48V338.7c23.4-15.6 48-42.9 48-87.8c0-72.1-38.2-134.2-73.6-176.7c-8.3-9.9-16.6-19-24.4-27c10.3-2.7 18-12.1 18-23.2c0-13.3-10.7-24-24-24H160 104zM52.7 464l16.6-32H250.8l16.6 32H52.7zm207.9-80H59.5c-12 0-22.9 6.7-28.4 17.3L4.6 452.5c-3 5.8-4.6 12.2-4.6 18.7C0 493.8 18.2 512 40.8 512H279.2c22.5 0 40.8-18.2 40.8-40.8c0-6.5-1.6-12.9-4.6-18.7l-26.5-51.2c-5.5-10.6-16.5-17.3-28.4-17.3z\"]\n};\nvar faFaceGrinWink = {\n  prefix: 'far',\n  iconName: 'face-grin-wink',\n  icon: [512, 512, [\"grin-wink\"], \"f58c\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm349.5 52.4c18.7-4.4 35.9 12 25.5 28.1C350.4 374.6 306.3 400 255.9 400s-94.5-25.4-119.1-63.5c-10.4-16.1 6.8-32.5 25.5-28.1c28.9 6.8 60.5 10.5 93.6 10.5s64.7-3.7 93.6-10.5zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm165.8 21.7c-7.6 8.1-20.2 8.5-28.3 .9s-8.5-20.2-.9-28.3c14.5-15.5 35.2-22.3 54.6-22.3s40.1 6.8 54.6 22.3c7.6 8.1 7.1 20.7-.9 28.3s-20.7 7.1-28.3-.9c-5.5-5.8-14.8-9.7-25.4-9.7s-19.9 3.8-25.4 9.7z\"]\n};\nvar faGrinWink = faFaceGrinWink;\nvar faFaceGrinWide = {\n  prefix: 'far',\n  iconName: 'face-grin-wide',\n  icon: [512, 512, [128515, \"grin-alt\"], \"f581\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm349.5 52.4c18.7-4.4 35.9 12 25.5 28.1C350.4 374.6 306.3 400 255.9 400s-94.5-25.4-119.1-63.5c-10.4-16.1 6.8-32.5 25.5-28.1c28.9 6.8 60.5 10.5 93.6 10.5s64.7-3.7 93.6-10.5zM224 192c0 35.3-14.3 64-32 64s-32-28.7-32-64s14.3-64 32-64s32 28.7 32 64zm96 64c-17.7 0-32-28.7-32-64s14.3-64 32-64s32 28.7 32 64s-14.3 64-32 64z\"]\n};\nvar faGrinAlt = faFaceGrinWide;\nvar faFaceFrownOpen = {\n  prefix: 'far',\n  iconName: 'face-frown-open',\n  icon: [512, 512, [128550, \"frown-open\"], \"f57a\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM182.4 382.5c-12.4 5.2-26.5-4.1-21.1-16.4c16-36.6 52.4-62.1 94.8-62.1s78.8 25.6 94.8 62.1c5.4 12.3-8.7 21.6-21.1 16.4c-22.4-9.5-47.4-14.8-73.7-14.8s-51.3 5.3-73.7 14.8zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"]\n};\nvar faFrownOpen = faFaceFrownOpen;\nvar faHandPointUp = {\n  prefix: 'far',\n  iconName: 'hand-point-up',\n  icon: [384, 512, [9757], \"f0a6\", \"M64 64V241.6c5.2-1 10.5-1.6 16-1.6H96V208 64c0-8.8-7.2-16-16-16s-16 7.2-16 16zM80 288c-17.7 0-32 14.3-32 32c0 0 0 0 0 0v24c0 66.3 53.7 120 120 120h48c52.5 0 97.1-33.7 113.4-80.7c-3.1 .5-6.2 .7-9.4 .7c-20 0-37.9-9.2-49.7-23.6c-9 4.9-19.4 7.6-30.3 7.6c-15.1 0-29-5.3-40-14c-11 8.8-24.9 14-40 14H120c-13.3 0-24-10.7-24-24s10.7-24 24-24h40c8.8 0 16-7.2 16-16s-7.2-16-16-16H120 80zM0 320s0 0 0 0c0-18 6-34.6 16-48V64C16 28.7 44.7 0 80 0s64 28.7 64 64v82c5.1-1.3 10.5-2 16-2c25.3 0 47.2 14.7 57.6 36c7-2.6 14.5-4 22.4-4c20 0 37.9 9.2 49.7 23.6c9-4.9 19.4-7.6 30.3-7.6c35.3 0 64 28.7 64 64v64 24c0 92.8-75.2 168-168 168H168C75.2 512 0 436.8 0 344V320zm336-64c0-8.8-7.2-16-16-16s-16 7.2-16 16v48 16c0 8.8 7.2 16 16 16s16-7.2 16-16V256zM160 240c5.5 0 10.9 .7 16 2v-2V208c0-8.8-7.2-16-16-16s-16 7.2-16 16v32h16zm64 24v40c0 8.8 7.2 16 16 16s16-7.2 16-16V256 240c0-8.8-7.2-16-16-16s-16 7.2-16 16v24z\"]\n};\nvar faBookmark = {\n  prefix: 'far',\n  iconName: 'bookmark',\n  icon: [384, 512, [128278, 61591], \"f02e\", \"M0 48C0 21.5 21.5 0 48 0l0 48V441.4l130.1-92.9c8.3-6 19.6-6 27.9 0L336 441.4V48H48V0H336c26.5 0 48 21.5 48 48V488c0 9-5 17.2-13 21.3s-17.6 3.4-24.9-1.8L192 397.5 37.9 507.5c-7.3 5.2-16.9 5.9-24.9 1.8S0 497 0 488V48z\"]\n};\nvar faHandPointDown = {\n  prefix: 'far',\n  iconName: 'hand-point-down',\n  icon: [384, 512, [], \"f0a7\", \"M64 448l0-177.6c5.2 1 10.5 1.6 16 1.6l16 0 0 32 0 144c0 8.8-7.2 16-16 16s-16-7.2-16-16zM80 224c-17.7 0-32-14.3-32-32c0 0 0 0 0 0l0-24c0-66.3 53.7-120 120-120l48 0c52.5 0 97.1 33.7 113.4 80.7c-3.1-.5-6.2-.7-9.4-.7c-20 0-37.9 9.2-49.7 23.6c-9-4.9-19.4-7.6-30.3-7.6c-15.1 0-29 5.3-40 14c-11-8.8-24.9-14-40-14l-40 0c-13.3 0-24 10.7-24 24s10.7 24 24 24l40 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-40 0-40 0zM0 192s0 0 0 0c0 18 6 34.6 16 48l0 208c0 35.3 28.7 64 64 64s64-28.7 64-64l0-82c5.1 1.3 10.5 2 16 2c25.3 0 47.2-14.7 57.6-36c7 2.6 14.5 4 22.4 4c20 0 37.9-9.2 49.7-23.6c9 4.9 19.4 7.6 30.3 7.6c35.3 0 64-28.7 64-64l0-64 0-24C384 75.2 308.8 0 216 0L168 0C75.2 0 0 75.2 0 168l0 24zm336 64c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-48 0-16c0-8.8 7.2-16 16-16s16 7.2 16 16l0 64zM160 272c5.5 0 10.9-.7 16-2l0 2 0 32c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-32 16 0zm64-24l0-40c0-8.8 7.2-16 16-16s16 7.2 16 16l0 48 0 16c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-24z\"]\n};\nvar faFolder = {\n  prefix: 'far',\n  iconName: 'folder',\n  icon: [512, 512, [128193, 128447, 61716, \"folder-blank\"], \"f07b\", \"M0 96C0 60.7 28.7 32 64 32H196.1c19.1 0 37.4 7.6 50.9 21.1L289.9 96H448c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zM64 80c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H448c8.8 0 16-7.2 16-16V160c0-8.8-7.2-16-16-16H286.6c-10.6 0-20.8-4.2-28.3-11.7L213.1 87c-4.5-4.5-10.6-7-17-7H64z\"]\n};\nvar faFolderBlank = faFolder;\nvar faUser = {\n  prefix: 'far',\n  iconName: 'user',\n  icon: [448, 512, [128100, 62144], \"f007\", \"M304 128a80 80 0 1 0 -160 0 80 80 0 1 0 160 0zM96 128a128 128 0 1 1 256 0A128 128 0 1 1 96 128zM49.3 464H398.7c-8.9-63.3-63.3-112-129-112H178.3c-65.7 0-120.1 48.7-129 112zM0 482.3C0 383.8 79.8 304 178.3 304h91.4C368.2 304 448 383.8 448 482.3c0 16.4-13.3 29.7-29.7 29.7H29.7C13.3 512 0 498.7 0 482.3z\"]\n};\nvar faSquareCaretLeft = {\n  prefix: 'far',\n  iconName: 'square-caret-left',\n  icon: [448, 512, [\"caret-square-left\"], \"f191\", \"M48 416c0 8.8 7.2 16 16 16l320 0c8.8 0 16-7.2 16-16l0-320c0-8.8-7.2-16-16-16L64 80c-8.8 0-16 7.2-16 16l0 320zm16 64c-35.3 0-64-28.7-64-64L0 96C0 60.7 28.7 32 64 32l320 0c35.3 0 64 28.7 64 64l0 320c0 35.3-28.7 64-64 64L64 480zm64-224c0-6.7 2.8-13 7.7-17.6l112-104c7-6.5 17.2-8.2 25.9-4.4s14.4 12.5 14.4 22l0 208c0 9.5-5.7 18.2-14.4 22s-18.9 2.1-25.9-4.4l-112-104c-4.9-4.5-7.7-10.9-7.7-17.6z\"]\n};\nvar faCaretSquareLeft = faSquareCaretLeft;\nvar faStar = {\n  prefix: 'far',\n  iconName: 'star',\n  icon: [576, 512, [11088, 61446], \"f005\", \"M287.9 0c9.2 0 17.6 5.2 21.6 13.5l68.6 141.3 153.2 22.6c9 1.3 16.5 7.6 19.3 16.3s.5 18.1-5.9 24.5L433.6 328.4l26.2 155.6c1.5 9-2.2 18.1-9.7 23.5s-17.3 6-25.3 1.7l-137-73.2L151 509.1c-8.1 4.3-17.9 3.7-25.3-1.7s-11.2-14.5-9.7-23.5l26.2-155.6L31.1 218.2c-6.5-6.4-8.7-15.9-5.9-24.5s10.3-14.9 19.3-16.3l153.2-22.6L266.3 13.5C270.4 5.2 278.7 0 287.9 0zm0 79L235.4 187.2c-3.5 7.1-10.2 12.1-18.1 13.3L99 217.9 184.9 303c5.5 5.5 8.1 13.3 6.8 21L171.4 443.7l105.2-56.2c7.1-3.8 15.6-3.8 22.6 0l105.2 56.2L384.2 324.1c-1.3-7.7 1.2-15.5 6.8-21l85.9-85.1L358.6 200.5c-7.8-1.2-14.6-6.1-18.1-13.3L287.9 79z\"]\n};\nvar faChessKnight = {\n  prefix: 'far',\n  iconName: 'chess-knight',\n  icon: [448, 512, [9822], \"f441\", \"M226.6 48H117.3l17.1 12.8c6 4.5 9.6 11.6 9.6 19.2s-3.6 14.7-9.6 19.2l-6.5 4.9c-10 7.5-16 19.3-16 31.9l-.3 91c0 10.2 4.9 19.9 13.2 25.8l1.9 1.3c9.9 7.1 23.3 7 33.2-.1l49.9-36.3c10.7-7.8 25.7-5.4 33.5 5.3s5.4 25.7-5.3 33.5l-49.9 36.3-53.8 39.1c-7.3 5.3-13 12.2-16.9 20.1H66.8c5.3-22.1 17.8-41.9 35.9-56.3c-1.3-.8-2.6-1.7-3.8-2.6L97 291.8c-21-15-33.4-39.2-33.3-65l.3-91c.1-19.8 6.7-38.7 18.6-53.9l-.4-.3C70.7 73 64 59.6 64 45.3C64 20.3 84.3 0 109.3 0H226.6C331.2 0 416 84.8 416 189.4c0 11.1-1 22.2-2.9 33.2L390.1 352H341.3l24.5-137.8c1.5-8.2 2.2-16.5 2.2-24.8C368 111.3 304.7 48 226.6 48zM85.2 432L68.7 464H379.3l-16.6-32H85.2zm315.7-30.7l26.5 51.2c3 5.8 4.6 12.2 4.6 18.7c0 22.5-18.2 40.8-40.8 40.8H56.8C34.2 512 16 493.8 16 471.2c0-6.5 1.6-12.9 4.6-18.7l26.5-51.2C52.5 390.7 63.5 384 75.5 384h297c12 0 22.9 6.7 28.4 17.3zM172 128a20 20 0 1 1 0 40 20 20 0 1 1 0-40z\"]\n};\nvar faFaceLaughSquint = {\n  prefix: 'far',\n  iconName: 'face-laugh-squint',\n  icon: [512, 512, [\"laugh-squint\"], \"f59b\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm130.7 57.9c-4.2-13.6 7.1-25.9 21.3-25.9H364.5c14.2 0 25.5 12.4 21.3 25.9C369 368.4 318.2 408 258.2 408s-110.8-39.6-127.5-94.1zm2.8-183.3l89.9 47.9c10.7 5.7 10.7 21.1 0 26.8l-89.9 47.9c-7.9 4.2-17.5-1.5-17.5-10.5c0-2.8 1-5.5 2.8-7.6l36-43.2-36-43.2c-1.8-2.1-2.8-4.8-2.8-7.6c0-9 9.6-14.7 17.5-10.5zM396 141.1c0 2.8-1 5.5-2.8 7.6l-36 43.2 36 43.2c1.8 2.1 2.8 4.8 2.8 7.6c0 9-9.6 14.7-17.5 10.5l-89.9-47.9c-10.7-5.7-10.7-21.1 0-26.8l89.9-47.9c7.9-4.2 17.5 1.5 17.5 10.5z\"]\n};\nvar faLaughSquint = faFaceLaughSquint;\nvar faFaceLaugh = {\n  prefix: 'far',\n  iconName: 'face-laugh',\n  icon: [512, 512, [\"laugh\"], \"f599\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm130.7 57.9c-4.2-13.6 7.1-25.9 21.3-25.9H364.5c14.2 0 25.5 12.4 21.3 25.9C369 368.4 318.2 408 258.2 408s-110.8-39.6-127.5-94.1zM144.4 192a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"]\n};\nvar faLaugh = faFaceLaugh;\nvar faFolderOpen = {\n  prefix: 'far',\n  iconName: 'folder-open',\n  icon: [576, 512, [128194, 128449, 61717], \"f07c\", \"M384 480h48c11.4 0 21.9-6 27.6-15.9l112-192c5.8-9.9 5.8-22.1 .1-32.1S555.5 224 544 224H144c-11.4 0-21.9 6-27.6 15.9L48 357.1V96c0-8.8 7.2-16 16-16H181.5c4.2 0 8.3 1.7 11.3 4.7l26.5 26.5c21 21 49.5 32.8 79.2 32.8H416c8.8 0 16 7.2 16 16v32h48V160c0-35.3-28.7-64-64-64H298.5c-17 0-33.3-6.7-45.3-18.7L226.7 50.7c-12-12-28.3-18.7-45.3-18.7H64C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H87.7 384z\"]\n};\nvar faClipboard = {\n  prefix: 'far',\n  iconName: 'clipboard',\n  icon: [384, 512, [128203], \"f328\", \"M280 64h40c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128C0 92.7 28.7 64 64 64h40 9.6C121 27.5 153.3 0 192 0s71 27.5 78.4 64H280zM64 112c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H320c8.8 0 16-7.2 16-16V128c0-8.8-7.2-16-16-16H304v24c0 13.3-10.7 24-24 24H192 104c-13.3 0-24-10.7-24-24V112H64zm128-8a24 24 0 1 0 0-48 24 24 0 1 0 0 48z\"]\n};\nvar faChessQueen = {\n  prefix: 'far',\n  iconName: 'chess-queen',\n  icon: [512, 512, [9819], \"f445\", \"M256 96a48 48 0 1 0 0-96 48 48 0 1 0 0 96zm-95.2-8c-18.1 0-31.3 12.8-35.6 26.9c-8 26.2-32.4 45.2-61.2 45.2c-10 0-19.4-2.3-27.7-6.3c-7.6-3.7-16.7-3.3-24 1.2C.7 162.1-3.1 177.1 3.7 188.9L97.6 352H153l-83-144.1c40.5-2.2 75.3-25.9 93.1-59.8c22 26.8 55.4 43.9 92.8 43.9s70.8-17.1 92.8-43.9c17.8 34 52.6 57.7 93.1 59.8L359 352h55.4l93.9-163.1c6.8-11.7 3-26.7-8.6-33.8c-7.3-4.5-16.4-4.9-24-1.2c-8.4 4-17.7 6.3-27.7 6.3c-28.8 0-53.2-19-61.2-45.2C382.5 100.8 369.3 88 351.2 88c-14.5 0-26.3 8.5-32.4 19.3c-12.4 22-35.9 36.7-62.8 36.7s-50.4-14.8-62.8-36.7C187.1 96.5 175.4 88 160.8 88zM133.2 432H378.8l16.6 32H116.7l16.6-32zm283.7-30.7c-5.5-10.6-16.5-17.3-28.4-17.3h-265c-12 0-22.9 6.7-28.4 17.3L68.6 452.5c-3 5.8-4.6 12.2-4.6 18.7c0 22.5 18.2 40.8 40.8 40.8H407.2c22.5 0 40.8-18.2 40.8-40.8c0-6.5-1.6-12.9-4.6-18.7l-26.5-51.2z\"]\n};\nvar faHandBackFist = {\n  prefix: 'far',\n  iconName: 'hand-back-fist',\n  icon: [448, 512, [\"hand-rock\"], \"f255\", \"M144 64c0-8.8 7.2-16 16-16s16 7.2 16 16c0 9.1 5.1 17.4 13.3 21.5s17.9 3.2 25.1-2.3c2.7-2 6-3.2 9.6-3.2c8.8 0 16 7.2 16 16c0 9.1 5.1 17.4 13.3 21.5s17.9 3.2 25.1-2.3c2.7-2 6-3.2 9.6-3.2c8.8 0 16 7.2 16 16c0 9.1 5.1 17.4 13.3 21.5s17.9 3.2 25.1-2.3c2.7-2 6-3.2 9.6-3.2c8.8 0 16 7.2 16 16V264c0 31.3-20 58-48 67.9c-9.6 3.4-16 12.5-16 22.6V488c0 13.3 10.7 24 24 24s24-10.7 24-24V370.2c38-20.1 64-60.1 64-106.2V160c0-35.3-28.7-64-64-64c-2.8 0-5.6 .2-8.3 .5C332.8 77.1 311.9 64 288 64c-2.8 0-5.6 .2-8.3 .5C268.8 45.1 247.9 32 224 32c-2.8 0-5.6 .2-8.3 .5C204.8 13.1 183.9 0 160 0C124.7 0 96 28.7 96 64v64.3c-11.7 7.4-22.5 16.4-32 26.9l17.8 16.1L64 155.2l-9.4 10.5C40 181.8 32 202.8 32 224.6v12.8c0 49.6 24.2 96.1 64.8 124.5l13.8-19.7L96.8 361.9l8.9 6.2c6.9 4.8 14.4 8.6 22.3 11.3V488c0 13.3 10.7 24 24 24s24-10.7 24-24V359.9c0-12.6-9.8-23.1-22.4-23.9c-7.3-.5-14.3-2.9-20.3-7.1l-13.1 18.7 13.1-18.7-8.9-6.2C96.6 303.1 80 271.3 80 237.4V224.6c0-9.9 3.7-19.4 10.3-26.8l9.4-10.5c3.8-4.2 7.9-8.1 12.3-11.6V208c0 8.8 7.2 16 16 16s16-7.2 16-16V142.3 128 64z\"]\n};\nvar faHandRock = faHandBackFist;\nvar faSquareCaretUp = {\n  prefix: 'far',\n  iconName: 'square-caret-up',\n  icon: [448, 512, [\"caret-square-up\"], \"f151\", \"M64 80c-8.8 0-16 7.2-16 16l0 320c0 8.8 7.2 16 16 16l320 0c8.8 0 16-7.2 16-16l0-320c0-8.8-7.2-16-16-16L64 80zM0 96C0 60.7 28.7 32 64 32l320 0c35.3 0 64 28.7 64 64l0 320c0 35.3-28.7 64-64 64L64 480c-35.3 0-64-28.7-64-64L0 96zm224 64c6.7 0 13 2.8 17.6 7.7l104 112c6.5 7 8.2 17.2 4.4 25.9s-12.5 14.4-22 14.4l-208 0c-9.5 0-18.2-5.7-22-14.4s-2.1-18.9 4.4-25.9l104-112c4.5-4.9 10.9-7.7 17.6-7.7z\"]\n};\nvar faCaretSquareUp = faSquareCaretUp;\nvar faChartBar = {\n  prefix: 'far',\n  iconName: 'chart-bar',\n  icon: [512, 512, [\"bar-chart\"], \"f080\", \"M24 32c13.3 0 24 10.7 24 24V408c0 13.3 10.7 24 24 24H488c13.3 0 24 10.7 24 24s-10.7 24-24 24H72c-39.8 0-72-32.2-72-72V56C0 42.7 10.7 32 24 32zM128 136c0-13.3 10.7-24 24-24l208 0c13.3 0 24 10.7 24 24s-10.7 24-24 24l-208 0c-13.3 0-24-10.7-24-24zm24 72H296c13.3 0 24 10.7 24 24s-10.7 24-24 24H152c-13.3 0-24-10.7-24-24s10.7-24 24-24zm0 96H424c13.3 0 24 10.7 24 24s-10.7 24-24 24H152c-13.3 0-24-10.7-24-24s10.7-24 24-24z\"]\n};\nvar faBarChart = faChartBar;\nvar faWindowRestore = {\n  prefix: 'far',\n  iconName: 'window-restore',\n  icon: [512, 512, [], \"f2d2\", \"M432 48H208c-17.7 0-32 14.3-32 32V96H128V80c0-44.2 35.8-80 80-80H432c44.2 0 80 35.8 80 80V304c0 44.2-35.8 80-80 80H416V336h16c17.7 0 32-14.3 32-32V80c0-17.7-14.3-32-32-32zM48 448c0 8.8 7.2 16 16 16H320c8.8 0 16-7.2 16-16V256H48V448zM64 128H320c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V192c0-35.3 28.7-64 64-64z\"]\n};\nvar faSquarePlus = {\n  prefix: 'far',\n  iconName: 'square-plus',\n  icon: [448, 512, [61846, \"plus-square\"], \"f0fe\", \"M64 80c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H384c8.8 0 16-7.2 16-16V96c0-8.8-7.2-16-16-16H64zM0 96C0 60.7 28.7 32 64 32H384c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zM200 344V280H136c-13.3 0-24-10.7-24-24s10.7-24 24-24h64V168c0-13.3 10.7-24 24-24s24 10.7 24 24v64h64c13.3 0 24 10.7 24 24s-10.7 24-24 24H248v64c0 13.3-10.7 24-24 24s-24-10.7-24-24z\"]\n};\nvar faPlusSquare = faSquarePlus;\nvar faImage = {\n  prefix: 'far',\n  iconName: 'image',\n  icon: [512, 512, [], \"f03e\", \"M448 80c8.8 0 16 7.2 16 16V415.8l-5-6.5-136-176c-4.5-5.9-11.6-9.3-19-9.3s-14.4 3.4-19 9.3L202 340.7l-30.5-42.7C167 291.7 159.8 288 152 288s-15 3.7-19.5 10.1l-80 112L48 416.3l0-.3V96c0-8.8 7.2-16 16-16H448zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zm80 192a48 48 0 1 0 0-96 48 48 0 1 0 0 96z\"]\n};\nvar faFolderClosed = {\n  prefix: 'far',\n  iconName: 'folder-closed',\n  icon: [512, 512, [], \"e185\", \"M64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H448c35.3 0 64-28.7 64-64V160c0-35.3-28.7-64-64-64H289.9L247 53.1C233.5 39.6 215.2 32 196.1 32H64zM48 96c0-8.8 7.2-16 16-16H196.1c6.4 0 12.5 2.5 17 7l45.3 45.3c7.5 7.5 17.7 11.7 28.3 11.7H448c8.8 0 16 7.2 16 16v32H48V96zm0 144H464V416c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V240z\"]\n};\nvar faLemon = {\n  prefix: 'far',\n  iconName: 'lemon',\n  icon: [448, 512, [127819], \"f094\", \"M368 80c-3.2 0-6.2 .4-8.9 1.3C340 86.8 313 91.9 284.8 84.6C227.4 69.7 160.2 92 110.1 142.1S37.7 259.4 52.6 316.8c7.3 28.2 2.2 55.2-3.3 74.3c-.8 2.8-1.3 5.8-1.3 8.9c0 17.7 14.3 32 32 32c3.2 0 6.2-.4 8.9-1.3c19.1-5.5 46.1-10.7 74.3-3.3c57.4 14.9 124.6-7.4 174.7-57.5s72.4-117.3 57.5-174.7c-7.3-28.2-2.2-55.2 3.3-74.3c.8-2.8 1.3-5.8 1.3-8.9c0-17.7-14.3-32-32-32zm0-48c44.2 0 80 35.8 80 80c0 7.7-1.1 15.2-3.1 22.3c-4.6 15.8-7.1 32.9-3 48.9c20.1 77.6-10.9 161.5-70 220.7s-143.1 90.2-220.7 70c-16-4.1-33-1.6-48.9 3c-7.1 2-14.6 3.1-22.3 3.1c-44.2 0-80-35.8-80-80c0-7.7 1.1-15.2 3.1-22.3c4.6-15.8 7.1-32.9 3-48.9C-14 251.3 17 167.3 76.2 108.2S219.3 18 296.8 38.1c16 4.1 33 1.6 48.9-3c7.1-2 14.6-3.1 22.3-3.1zM246.7 167c-52 15.2-96.5 59.7-111.7 111.7c-3.7 12.7-17.1 20-29.8 16.3s-20-17.1-16.3-29.8c19.8-67.7 76.6-124.5 144.3-144.3c12.7-3.7 26.1 3.6 29.8 16.3s-3.6 26.1-16.3 29.8z\"]\n};\nvar faHandshake = {\n  prefix: 'far',\n  iconName: 'handshake',\n  icon: [640, 512, [], \"f2b5\", \"M272.2 64.6l-51.1 51.1c-15.3 4.2-29.5 11.9-41.5 22.5L153 161.9C142.8 171 129.5 176 115.8 176H96V304c20.4 .6 39.8 8.9 54.3 23.4l35.6 35.6 7 7 0 0L219.9 397c6.2 6.2 16.4 6.2 22.6 0c1.7-1.7 3-3.7 3.7-5.8c2.8-7.7 9.3-13.5 17.3-15.3s16.4 .6 22.2 6.5L296.5 393c11.6 11.6 30.4 11.6 41.9 0c5.4-5.4 8.3-12.3 8.6-19.4c.4-8.8 5.6-16.6 13.6-20.4s17.3-3 24.4 2.1c9.4 6.7 22.5 5.8 30.9-2.6c9.4-9.4 9.4-24.6 0-33.9L340.1 243l-35.8 33c-27.3 25.2-69.2 25.6-97 .9c-31.7-28.2-32.4-77.4-1.6-106.5l70.1-66.2C303.2 78.4 339.4 64 377.1 64c36.1 0 71 13.3 97.9 37.2L505.1 128H544h40 40c8.8 0 16 7.2 16 16V352c0 17.7-14.3 32-32 32H576c-11.8 0-22.2-6.4-27.7-16H463.4c-3.4 6.7-7.9 13.1-13.5 18.7c-17.1 17.1-40.8 23.8-63 20.1c-3.6 7.3-8.5 14.1-14.6 20.2c-27.3 27.3-70 30-100.4 8.1c-25.1 20.8-62.5 19.5-86-4.1L159 404l-7-7-35.6-35.6c-5.5-5.5-12.7-8.7-20.4-9.3C96 369.7 81.6 384 64 384H32c-17.7 0-32-14.3-32-32V144c0-8.8 7.2-16 16-16H56 96h19.8c2 0 3.9-.7 5.3-2l26.5-23.6C175.5 77.7 211.4 64 248.7 64H259c4.4 0 8.9 .2 13.2 .6zM544 320V176H496c-5.9 0-11.6-2.2-15.9-6.1l-36.9-32.8c-18.2-16.2-41.7-25.1-66.1-25.1c-25.4 0-49.8 9.7-68.3 27.1l-70.1 66.2c-10.3 9.8-10.1 26.3 .5 35.7c9.3 8.3 23.4 8.1 32.5-.3l71.9-66.4c9.7-9 24.9-8.4 33.9 1.4s8.4 24.9-1.4 33.9l-.8 .8 74.4 74.4c10 10 16.5 22.3 19.4 35.1H544zM64 336a16 16 0 1 0 -32 0 16 16 0 1 0 32 0zm528 16a16 16 0 1 0 0-32 16 16 0 1 0 0 32z\"]\n};\nvar faGem = {\n  prefix: 'far',\n  iconName: 'gem',\n  icon: [512, 512, [128142], \"f3a5\", \"M168.5 72L256 165l87.5-93h-175zM383.9 99.1L311.5 176h129L383.9 99.1zm50 124.9H256 78.1L256 420.3 433.9 224zM71.5 176h129L128.1 99.1 71.5 176zm434.3 40.1l-232 256c-4.5 5-11 7.9-17.8 7.9s-13.2-2.9-17.8-7.9l-232-256c-7.7-8.5-8.3-21.2-1.5-30.4l112-152c4.5-6.1 11.7-9.8 19.3-9.8H376c7.6 0 14.8 3.6 19.3 9.8l112 152c6.8 9.2 6.1 21.9-1.5 30.4z\"]\n};\nvar faCirclePlay = {\n  prefix: 'far',\n  iconName: 'circle-play',\n  icon: [512, 512, [61469, \"play-circle\"], \"f144\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM188.3 147.1c7.6-4.2 16.8-4.1 24.3 .5l144 88c7.1 4.4 11.5 12.1 11.5 20.5s-4.4 16.1-11.5 20.5l-144 88c-7.4 4.5-16.7 4.7-24.3 .5s-12.3-12.2-12.3-20.9V168c0-8.7 4.7-16.7 12.3-20.9z\"]\n};\nvar faPlayCircle = faCirclePlay;\nvar faCircleCheck = {\n  prefix: 'far',\n  iconName: 'circle-check',\n  icon: [512, 512, [61533, \"check-circle\"], \"f058\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM369 209c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-111 111-47-47c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9l64 64c9.4 9.4 24.6 9.4 33.9 0L369 209z\"]\n};\nvar faCheckCircle = faCircleCheck;\nvar faCircleStop = {\n  prefix: 'far',\n  iconName: 'circle-stop',\n  icon: [512, 512, [62094, \"stop-circle\"], \"f28d\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm192-96H320c17.7 0 32 14.3 32 32V320c0 17.7-14.3 32-32 32H192c-17.7 0-32-14.3-32-32V192c0-17.7 14.3-32 32-32z\"]\n};\nvar faStopCircle = faCircleStop;\nvar faIdBadge = {\n  prefix: 'far',\n  iconName: 'id-badge',\n  icon: [384, 512, [], \"f2c1\", \"M256 48V64c0 17.7-14.3 32-32 32H160c-17.7 0-32-14.3-32-32V48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H320c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H256zM0 64C0 28.7 28.7 0 64 0H320c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zM160 320h64c44.2 0 80 35.8 80 80c0 8.8-7.2 16-16 16H96c-8.8 0-16-7.2-16-16c0-44.2 35.8-80 80-80zm-32-96a64 64 0 1 1 128 0 64 64 0 1 1 -128 0z\"]\n};\nvar faFaceLaughBeam = {\n  prefix: 'far',\n  iconName: 'face-laugh-beam',\n  icon: [512, 512, [128513, \"laugh-beam\"], \"f59a\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm130.7 57.9c-4.2-13.6 7.1-25.9 21.3-25.9H364.5c14.2 0 25.5 12.4 21.3 25.9C369 368.4 318.2 408 258.2 408s-110.8-39.6-127.5-94.1zm86.9-85.1l0 0 0 0-.2-.2c-.2-.2-.4-.5-.7-.9c-.6-.8-1.6-2-2.8-3.4c-2.5-2.8-6-6.6-10.2-10.3c-8.8-7.8-18.8-14-27.7-14s-18.9 6.2-27.7 14c-4.2 3.7-7.7 7.5-10.2 10.3c-1.2 1.4-2.2 2.6-2.8 3.4c-.3 .4-.6 .7-.7 .9l-.2 .2 0 0 0 0 0 0c-2.1 2.8-5.7 3.9-8.9 2.8s-5.5-4.1-5.5-7.6c0-17.9 6.7-35.6 16.6-48.8c9.8-13 23.9-23.2 39.4-23.2s29.6 10.2 39.4 23.2c9.9 13.2 16.6 30.9 16.6 48.8c0 3.4-2.2 6.5-5.5 7.6s-6.9 0-8.9-2.8l0 0 0 0zm160 0l0 0-.2-.2c-.2-.2-.4-.5-.7-.9c-.6-.8-1.6-2-2.8-3.4c-2.5-2.8-6-6.6-10.2-10.3c-8.8-7.8-18.8-14-27.7-14s-18.9 6.2-27.7 14c-4.2 3.7-7.7 7.5-10.2 10.3c-1.2 1.4-2.2 2.6-2.8 3.4c-.3 .4-.6 .7-.7 .9l-.2 .2 0 0 0 0 0 0c-2.1 2.8-5.7 3.9-8.9 2.8s-5.5-4.1-5.5-7.6c0-17.9 6.7-35.6 16.6-48.8c9.8-13 23.9-23.2 39.4-23.2s29.6 10.2 39.4 23.2c9.9 13.2 16.6 30.9 16.6 48.8c0 3.4-2.2 6.5-5.5 7.6s-6.9 0-8.9-2.8l0 0 0 0 0 0z\"]\n};\nvar faLaughBeam = faFaceLaughBeam;\nvar faRegistered = {\n  prefix: 'far',\n  iconName: 'registered',\n  icon: [512, 512, [174], \"f25d\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM160 152V264v96c0 13.3 10.7 24 24 24s24-10.7 24-24V288h60.9l37.2 81.9c5.5 12.1 19.7 17.4 31.8 11.9s17.4-19.7 11.9-31.8L315.7 275c21.8-14.3 36.3-39 36.3-67c0-44.2-35.8-80-80-80H184c-13.3 0-24 10.7-24 24zm48 88V176h64c17.7 0 32 14.3 32 32s-14.3 32-32 32H208z\"]\n};\nvar faAddressCard = {\n  prefix: 'far',\n  iconName: 'address-card',\n  icon: [576, 512, [62140, \"contact-card\", \"vcard\"], \"f2bb\", \"M512 80c8.8 0 16 7.2 16 16V416c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V96c0-8.8 7.2-16 16-16H512zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H512c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zM208 256a64 64 0 1 0 0-128 64 64 0 1 0 0 128zm-32 32c-44.2 0-80 35.8-80 80c0 8.8 7.2 16 16 16H304c8.8 0 16-7.2 16-16c0-44.2-35.8-80-80-80H176zM376 144c-13.3 0-24 10.7-24 24s10.7 24 24 24h80c13.3 0 24-10.7 24-24s-10.7-24-24-24H376zm0 96c-13.3 0-24 10.7-24 24s10.7 24 24 24h80c13.3 0 24-10.7 24-24s-10.7-24-24-24H376z\"]\n};\nvar faContactCard = faAddressCard;\nvar faVcard = faAddressCard;\nvar faFaceTired = {\n  prefix: 'far',\n  iconName: 'face-tired',\n  icon: [512, 512, [128555, \"tired\"], \"f5c8\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm176.5 64.3C196.1 302.1 223.8 288 256 288s59.9 14.1 79.5 32.3C354.5 338.1 368 362 368 384c0 5.4-2.7 10.4-7.2 13.4s-10.2 3.4-15.2 1.3l-17.2-7.5c-22.8-10-47.5-15.1-72.4-15.1s-49.6 5.2-72.4 15.1l-17.2 7.5c-4.9 2.2-10.7 1.7-15.2-1.3s-7.2-8-7.2-13.4c0-22 13.5-45.9 32.5-63.7zm-43-173.6l89.9 47.9c10.7 5.7 10.7 21.1 0 26.8l-89.9 47.9c-7.9 4.2-17.5-1.5-17.5-10.5c0-2.8 1-5.5 2.8-7.6l36-43.2-36-43.2c-1.8-2.1-2.8-4.8-2.8-7.6c0-9 9.6-14.7 17.5-10.5zM396 157.1c0 2.8-1 5.5-2.8 7.6l-36 43.2 36 43.2c1.8 2.1 2.8 4.8 2.8 7.6c0 9-9.6 14.7-17.5 10.5l-89.9-47.9c-10.7-5.7-10.7-21.1 0-26.8l89.9-47.9c7.9-4.2 17.5 1.5 17.5 10.5z\"]\n};\nvar faTired = faFaceTired;\nvar faFontAwesome = {\n  prefix: 'far',\n  iconName: 'font-awesome',\n  icon: [448, 512, [62501, 62694, \"font-awesome-flag\", \"font-awesome-logo-full\"], \"f2b4\", \"M48 56c0-13.3-10.7-24-24-24S0 42.7 0 56V456c0 13.3 10.7 24 24 24s24-10.7 24-24V124.2l12.5-2.4c16.7-3.2 31.5-8.5 44.2-13.1l0 0 0 0c3.7-1.3 7.1-2.6 10.4-3.7c15.2-5.2 30.4-9.1 51.2-9.1c25.6 0 43 6 63.5 13.3l.5 .2c20.9 7.4 44.8 15.9 79.1 15.9c32.4 0 53.7-6.8 90.5-19.6V342.9l-9.5 3.3c-41.5 14.4-55.2 19.2-81 19.2c-25.7 0-43.1-6-63.6-13.3l-.6-.2c-20.8-7.4-44.8-15.8-79-15.8c-16.8 0-31 2-43.9 5c-12.9 3-20.9 16-17.9 28.9s16 20.9 28.9 17.9c9.6-2.2 20.1-3.7 32.9-3.7c25.6 0 43 6 63.5 13.3l.5 .2c20.9 7.4 44.8 15.9 79.1 15.9c34.4 0 56.4-7.7 97.8-22.2c7.5-2.6 15.5-5.4 24.4-8.5l16.2-5.5V360 72 38.4L416.2 49.3c-9.7 3.3-18.2 6.3-25.7 8.9c-41.5 14.4-55.2 19.2-81 19.2c-25.7 0-43.1-6-63.6-13.3l-.6-.2c-20.8-7.4-44.8-15.8-79-15.8c-27.8 0-48.5 5.5-66.6 11.6c-4.9 1.7-9.3 3.3-13.6 4.8c-11.9 4.3-22 7.9-34.7 10.3L48 75.4V56z\"]\n};\nvar faFontAwesomeFlag = faFontAwesome;\nvar faFontAwesomeLogoFull = faFontAwesome;\nvar faFaceSmileWink = {\n  prefix: 'far',\n  iconName: 'face-smile-wink',\n  icon: [512, 512, [128521, \"smile-wink\"], \"f4da\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm177.6 62.1C192.8 334.5 218.8 352 256 352s63.2-17.5 78.4-33.9c9-9.7 24.2-10.4 33.9-1.4s10.4 24.2 1.4 33.9c-22 23.8-60 49.4-113.6 49.4s-91.7-25.5-113.6-49.4c-9-9.7-8.4-24.9 1.4-33.9s24.9-8.4 33.9 1.4zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm165.8 21.7c-7.6 8.1-20.2 8.5-28.3 .9s-8.5-20.2-.9-28.3c14.5-15.5 35.2-22.3 54.6-22.3s40.1 6.8 54.6 22.3c7.6 8.1 7.1 20.7-.9 28.3s-20.7 7.1-28.3-.9c-5.5-5.8-14.8-9.7-25.4-9.7s-19.9 3.8-25.4 9.7z\"]\n};\nvar faSmileWink = faFaceSmileWink;\nvar faFileWord = {\n  prefix: 'far',\n  iconName: 'file-word',\n  icon: [384, 512, [], \"f1c2\", \"M48 448V64c0-8.8 7.2-16 16-16H224v80c0 17.7 14.3 32 32 32h80V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16zM64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V154.5c0-17-6.7-33.3-18.7-45.3L274.7 18.7C262.7 6.7 246.5 0 229.5 0H64zm55 241.1c-3.8-12.7-17.2-19.9-29.9-16.1s-19.9 17.2-16.1 29.9l48 160c3 10.2 12.4 17.1 23 17.1s19.9-7 23-17.1l25-83.4 25 83.4c3 10.2 12.4 17.1 23 17.1s19.9-7 23-17.1l48-160c3.8-12.7-3.4-26.1-16.1-29.9s-26.1 3.4-29.9 16.1l-25 83.4-25-83.4c-3-10.2-12.4-17.1-23-17.1s-19.9 7-23 17.1l-25 83.4-25-83.4z\"]\n};\nvar faFilePowerpoint = {\n  prefix: 'far',\n  iconName: 'file-powerpoint',\n  icon: [384, 512, [], \"f1c4\", \"M64 464c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16H224v80c0 17.7 14.3 32 32 32h80V448c0 8.8-7.2 16-16 16H64zM64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V154.5c0-17-6.7-33.3-18.7-45.3L274.7 18.7C262.7 6.7 246.5 0 229.5 0H64zm72 208c-13.3 0-24 10.7-24 24V336v56c0 13.3 10.7 24 24 24s24-10.7 24-24V360h44c42 0 76-34 76-76s-34-76-76-76H136zm68 104H160V256h44c15.5 0 28 12.5 28 28s-12.5 28-28 28z\"]\n};\nvar faEnvelopeOpen = {\n  prefix: 'far',\n  iconName: 'envelope-open',\n  icon: [512, 512, [62135], \"f2b6\", \"M255.4 48.2c.2-.1 .4-.2 .6-.2s.4 .1 .6 .2L460.6 194c2.1 1.5 3.4 3.9 3.4 6.5v13.6L291.5 355.7c-20.7 17-50.4 17-71.1 0L48 214.1V200.5c0-2.6 1.2-5 3.4-6.5L255.4 48.2zM48 276.2L190 392.8c38.4 31.5 93.7 31.5 132 0L464 276.2V456c0 4.4-3.6 8-8 8H56c-4.4 0-8-3.6-8-8V276.2zM256 0c-10.2 0-20.2 3.2-28.5 9.1L23.5 154.9C8.7 165.4 0 182.4 0 200.5V456c0 30.9 25.1 56 56 56H456c30.9 0 56-25.1 56-56V200.5c0-18.1-8.7-35.1-23.4-45.6L284.5 9.1C276.2 3.2 266.2 0 256 0z\"]\n};\nvar faFileZipper = {\n  prefix: 'far',\n  iconName: 'file-zipper',\n  icon: [384, 512, [\"file-archive\"], \"f1c6\", \"M64 464c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16h48c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16h48v80c0 17.7 14.3 32 32 32h80V448c0 8.8-7.2 16-16 16H64zM64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V154.5c0-17-6.7-33.3-18.7-45.3L274.7 18.7C262.7 6.7 246.5 0 229.5 0H64zm48 112c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16s-7.2-16-16-16H128c-8.8 0-16 7.2-16 16zm0 64c0 8.8 7.2 16 16 16h32c8.8 0 16-7.2 16-16s-7.2-16-16-16H128c-8.8 0-16 7.2-16 16zm-6.3 71.8L82.1 335.9c-1.4 5.4-2.1 10.9-2.1 16.4c0 35.2 28.8 63.7 64 63.7s64-28.5 64-63.7c0-5.5-.7-11.1-2.1-16.4l-23.5-88.2c-3.7-14-16.4-23.8-30.9-23.8H136.6c-14.5 0-27.2 9.7-30.9 23.8zM128 336h32c8.8 0 16 7.2 16 16s-7.2 16-16 16H128c-8.8 0-16-7.2-16-16s7.2-16 16-16z\"]\n};\nvar faFileArchive = faFileZipper;\nvar faSquare = {\n  prefix: 'far',\n  iconName: 'square',\n  icon: [448, 512, [9632, 9723, 9724, 61590], \"f0c8\", \"M384 80c8.8 0 16 7.2 16 16V416c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V96c0-8.8 7.2-16 16-16H384zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64z\"]\n};\nvar faSnowflake = {\n  prefix: 'far',\n  iconName: 'snowflake',\n  icon: [448, 512, [10052, 10054], \"f2dc\", \"M224 0c13.3 0 24 10.7 24 24V70.1l23-23c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-57 57v76.5l66.2-38.2 20.9-77.8c3.4-12.8 16.6-20.4 29.4-17s20.4 16.6 17 29.4L373 142.2l37.1-21.4c11.5-6.6 26.2-2.7 32.8 8.8s2.7 26.2-8.8 32.8L397 183.8l31.5 8.4c12.8 3.4 20.4 16.6 17 29.4s-16.6 20.4-29.4 17l-77.8-20.9L272 256l66.2 38.2 77.8-20.9c12.8-3.4 26 4.2 29.4 17s-4.2 26-17 29.4L397 328.2l37.1 21.4c11.5 6.6 15.4 21.3 8.8 32.8s-21.3 15.4-32.8 8.8L373 369.8l8.4 31.5c3.4 12.8-4.2 26-17 29.4s-26-4.2-29.4-17l-20.9-77.8L248 297.6v76.5l57 57c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-23-23V488c0 13.3-10.7 24-24 24s-24-10.7-24-24V441.9l-23 23c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l57-57V297.6l-66.2 38.2-20.9 77.8c-3.4 12.8-16.6 20.4-29.4 17s-20.4-16.6-17-29.4L75 369.8 37.9 391.2c-11.5 6.6-26.2 2.7-32.8-8.8s-2.7-26.2 8.8-32.8L51 328.2l-31.5-8.4c-12.8-3.4-20.4-16.6-17-29.4s16.6-20.4 29.4-17l77.8 20.9L176 256l-66.2-38.2L31.9 238.6c-12.8 3.4-26-4.2-29.4-17s4.2-26 17-29.4L51 183.8 13.9 162.4c-11.5-6.6-15.4-21.3-8.8-32.8s21.3-15.4 32.8-8.8L75 142.2l-8.4-31.5c-3.4-12.8 4.2-26 17-29.4s26 4.2 29.4 17l20.9 77.8L200 214.4V137.9L143 81c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l23 23V24c0-13.3 10.7-24 24-24z\"]\n};\nvar faNewspaper = {\n  prefix: 'far',\n  iconName: 'newspaper',\n  icon: [512, 512, [128240], \"f1ea\", \"M168 80c-13.3 0-24 10.7-24 24V408c0 8.4-1.4 16.5-4.1 24H440c13.3 0 24-10.7 24-24V104c0-13.3-10.7-24-24-24H168zM72 480c-39.8 0-72-32.2-72-72V112C0 98.7 10.7 88 24 88s24 10.7 24 24V408c0 13.3 10.7 24 24 24s24-10.7 24-24V104c0-39.8 32.2-72 72-72H440c39.8 0 72 32.2 72 72V408c0 39.8-32.2 72-72 72H72zM176 136c0-13.3 10.7-24 24-24h96c13.3 0 24 10.7 24 24v80c0 13.3-10.7 24-24 24H200c-13.3 0-24-10.7-24-24V136zm200-24h32c13.3 0 24 10.7 24 24s-10.7 24-24 24H376c-13.3 0-24-10.7-24-24s10.7-24 24-24zm0 80h32c13.3 0 24 10.7 24 24s-10.7 24-24 24H376c-13.3 0-24-10.7-24-24s10.7-24 24-24zM200 272H408c13.3 0 24 10.7 24 24s-10.7 24-24 24H200c-13.3 0-24-10.7-24-24s10.7-24 24-24zm0 80H408c13.3 0 24 10.7 24 24s-10.7 24-24 24H200c-13.3 0-24-10.7-24-24s10.7-24 24-24z\"]\n};\nvar faFaceKissWinkHeart = {\n  prefix: 'far',\n  iconName: 'face-kiss-wink-heart',\n  icon: [512, 512, [128536, \"kiss-wink-heart\"], \"f598\", \"M338.9 446.8c-25.4 11-53.4 17.2-82.9 17.2C141.1 464 48 370.9 48 256S141.1 48 256 48s208 93.1 208 208c0 22.4-3.5 43.9-10.1 64.1c3.1 4.5 5.7 9.4 7.8 14.6c12.7-1.6 25.1 .4 36.2 5c9.1-26.2 14-54.4 14-83.7C512 114.6 397.4 0 256 0S0 114.6 0 256S114.6 512 256 512c35.4 0 69.1-7.2 99.7-20.2c-4.8-5.5-8.5-12.2-10.4-19.7l-6.5-25.3zM296 316c0-6.9-3.1-13.2-7.3-18.3c-4.3-5.2-10.1-9.7-16.7-13.4C258.7 276.9 241.4 272 224 272c-3.6 0-6.8 2.5-7.7 6s.6 7.2 3.8 9l0 0 0 0 0 0 .2 .1c.2 .1 .5 .3 .9 .5c.8 .5 2 1.2 3.4 2.1c2.8 1.9 6.5 4.5 10.2 7.6c3.7 3.1 7.2 6.6 9.6 10.1c2.5 3.5 3.5 6.4 3.5 8.6s-1 5-3.5 8.6c-2.5 3.5-5.9 6.9-9.6 10.1c-3.7 3.1-7.4 5.7-10.2 7.6c-1.4 .9-2.6 1.6-3.4 2.1c-.4 .2-.7 .4-.9 .5l-.2 .1 0 0 0 0 0 0 0 0 0 0c-2.5 1.4-4.1 4.1-4.1 7s1.6 5.6 4.1 7l0 0 0 0 0 0 .2 .1c.2 .1 .5 .3 .9 .5c.8 .5 2 1.2 3.4 2.1c2.8 1.9 6.5 4.5 10.2 7.6c3.7 3.1 7.2 6.6 9.6 10.1c2.5 3.5 3.5 6.4 3.5 8.6s-1 5-3.5 8.6c-2.5 3.5-5.9 6.9-9.6 10.1c-3.7 3.1-7.4 5.7-10.2 7.6c-1.4 .9-2.6 1.6-3.4 2.1c-.4 .2-.7 .4-.9 .5l-.2 .1 0 0 0 0 0 0 0 0c-3.2 1.8-4.7 5.5-3.8 9s4.1 6 7.7 6c17.4 0 34.7-4.9 47.9-12.3c6.6-3.7 12.5-8.2 16.7-13.4c4.3-5.1 7.3-11.4 7.3-18.3s-3.1-13.2-7.3-18.3c-4.3-5.2-10.1-9.7-16.7-13.4c-2.7-1.5-5.7-3-8.7-4.3c3.1-1.3 6-2.7 8.7-4.3c6.6-3.7 12.5-8.2 16.7-13.4c4.3-5.1 7.3-11.4 7.3-18.3zM176.4 240a32 32 0 1 0 0-64 32 32 0 1 0 0 64zm159.3-20c10.6 0 19.9 3.8 25.4 9.7c7.6 8.1 20.2 8.5 28.3 .9s8.5-20.2 .9-28.3C375.7 186.8 355 180 335.6 180s-40.1 6.8-54.6 22.3c-7.6 8.1-7.1 20.7 .9 28.3s20.7 7.1 28.3-.9c5.5-5.8 14.8-9.7 25.4-9.7zM434 352.3c-6-23.2-28.8-37-51.1-30.8s-35.4 30.1-29.5 53.4l22.9 89.3c2.2 8.7 11.2 13.9 19.8 11.4l84.9-23.8c22.2-6.2 35.4-30.1 29.5-53.4s-28.8-37-51.1-30.8l-20.2 5.6-5.4-21z\"]\n};\nvar faKissWinkHeart = faFaceKissWinkHeart;\nvar faStarHalfStroke = {\n  prefix: 'far',\n  iconName: 'star-half-stroke',\n  icon: [576, 512, [\"star-half-alt\"], \"f5c0\", \"M309.5 13.5C305.5 5.2 297.1 0 287.9 0s-17.6 5.2-21.6 13.5L197.7 154.8 44.5 177.5c-9 1.3-16.5 7.6-19.3 16.3s-.5 18.1 5.9 24.5L142.2 328.4 116 483.9c-1.5 9 2.2 18.1 9.7 23.5s17.3 6 25.3 1.7l137-73.2 137 73.2c8.1 4.3 17.9 3.7 25.3-1.7s11.2-14.5 9.7-23.5L433.6 328.4 544.8 218.2c6.5-6.4 8.7-15.9 5.9-24.5s-10.3-14.9-19.3-16.3L378.1 154.8 309.5 13.5zM288 384.7V79.1l52.5 108.1c3.5 7.1 10.2 12.1 18.1 13.3l118.3 17.5L391 303c-5.5 5.5-8.1 13.3-6.8 21l20.2 119.6L299.2 387.5c-3.5-1.9-7.4-2.8-11.2-2.8z\"]\n};\nvar faStarHalfAlt = faStarHalfStroke;\nvar faFileExcel = {\n  prefix: 'far',\n  iconName: 'file-excel',\n  icon: [384, 512, [], \"f1c3\", \"M48 448V64c0-8.8 7.2-16 16-16H224v80c0 17.7 14.3 32 32 32h80V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16zM64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V154.5c0-17-6.7-33.3-18.7-45.3L274.7 18.7C262.7 6.7 246.5 0 229.5 0H64zm90.9 233.3c-8.1-10.5-23.2-12.3-33.7-4.2s-12.3 23.2-4.2 33.7L161.6 320l-44.5 57.3c-8.1 10.5-6.3 25.5 4.2 33.7s25.5 6.3 33.7-4.2L192 359.1l37.1 47.6c8.1 10.5 23.2 12.3 33.7 4.2s12.3-23.2 4.2-33.7L222.4 320l44.5-57.3c8.1-10.5 6.3-25.5-4.2-33.7s-25.5-6.3-33.7 4.2L192 280.9l-37.1-47.6z\"]\n};\nvar faFaceGrinBeam = {\n  prefix: 'far',\n  iconName: 'face-grin-beam',\n  icon: [512, 512, [128516, \"grin-beam\"], \"f582\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm349.5 52.4c18.7-4.4 35.9 12 25.5 28.1C350.4 374.6 306.3 400 255.9 400s-94.5-25.4-119.1-63.5c-10.4-16.1 6.8-32.5 25.5-28.1c28.9 6.8 60.5 10.5 93.6 10.5s64.7-3.7 93.6-10.5zM217.6 228.8l0 0 0 0-.2-.2c-.2-.2-.4-.5-.7-.9c-.6-.8-1.6-2-2.8-3.4c-2.5-2.8-6-6.6-10.2-10.3c-8.8-7.8-18.8-14-27.7-14s-18.9 6.2-27.7 14c-4.2 3.7-7.7 7.5-10.2 10.3c-1.2 1.4-2.2 2.6-2.8 3.4c-.3 .4-.6 .7-.7 .9l-.2 .2 0 0 0 0 0 0c-2.1 2.8-5.7 3.9-8.9 2.8s-5.5-4.1-5.5-7.6c0-17.9 6.7-35.6 16.6-48.8c9.8-13 23.9-23.2 39.4-23.2s29.6 10.2 39.4 23.2c9.9 13.2 16.6 30.9 16.6 48.8c0 3.4-2.2 6.5-5.5 7.6s-6.9 0-8.9-2.8l0 0 0 0zm160 0l0 0-.2-.2c-.2-.2-.4-.5-.7-.9c-.6-.8-1.6-2-2.8-3.4c-2.5-2.8-6-6.6-10.2-10.3c-8.8-7.8-18.8-14-27.7-14s-18.9 6.2-27.7 14c-4.2 3.7-7.7 7.5-10.2 10.3c-1.2 1.4-2.2 2.6-2.8 3.4c-.3 .4-.6 .7-.7 .9l-.2 .2 0 0 0 0 0 0c-2.1 2.8-5.7 3.9-8.9 2.8s-5.5-4.1-5.5-7.6c0-17.9 6.7-35.6 16.6-48.8c9.8-13 23.9-23.2 39.4-23.2s29.6 10.2 39.4 23.2c9.9 13.2 16.6 30.9 16.6 48.8c0 3.4-2.2 6.5-5.5 7.6s-6.9 0-8.9-2.8l0 0 0 0 0 0z\"]\n};\nvar faGrinBeam = faFaceGrinBeam;\nvar faObjectUngroup = {\n  prefix: 'far',\n  iconName: 'object-ungroup',\n  icon: [640, 512, [], \"f248\", \"M48.2 66.8c-.1-.8-.2-1.7-.2-2.5c0-.1 0-.1 0-.2c0-8.8 7.2-16 16-16c.9 0 1.9 .1 2.8 .2C74.3 49.5 80 56.1 80 64c0 8.8-7.2 16-16 16c-7.9 0-14.5-5.7-15.8-13.2zM0 64c0 26.9 16.5 49.9 40 59.3V228.7C16.5 238.1 0 261.1 0 288c0 35.3 28.7 64 64 64c26.9 0 49.9-16.5 59.3-40H324.7c9.5 23.5 32.5 40 59.3 40c35.3 0 64-28.7 64-64c0-26.9-16.5-49.9-40-59.3V123.3c23.5-9.5 40-32.5 40-59.3c0-35.3-28.7-64-64-64c-26.9 0-49.9 16.5-59.3 40H123.3C113.9 16.5 90.9 0 64 0C28.7 0 0 28.7 0 64zm368 0a16 16 0 1 1 32 0 16 16 0 1 1 -32 0zM324.7 88c6.5 16 19.3 28.9 35.3 35.3V228.7c-16 6.5-28.9 19.3-35.3 35.3H123.3c-6.5-16-19.3-28.9-35.3-35.3V123.3c16-6.5 28.9-19.3 35.3-35.3H324.7zM384 272a16 16 0 1 1 0 32 16 16 0 1 1 0-32zM80 288c0 7.9-5.7 14.5-13.2 15.8c-.8 .1-1.7 .2-2.5 .2l-.2 0c-8.8 0-16-7.2-16-16c0-.9 .1-1.9 .2-2.8C49.5 277.7 56.1 272 64 272c8.8 0 16 7.2 16 16zm391.3-40h45.4c6.5 16 19.3 28.9 35.3 35.3V388.7c-16 6.5-28.9 19.3-35.3 35.3H315.3c-6.5-16-19.3-28.9-35.3-35.3V352H232v36.7c-23.5 9.5-40 32.5-40 59.3c0 35.3 28.7 64 64 64c26.9 0 49.9-16.5 59.3-40H516.7c9.5 23.5 32.5 40 59.3 40c35.3 0 64-28.7 64-64c0-26.9-16.5-49.9-40-59.3V283.3c23.5-9.5 40-32.5 40-59.3c0-35.3-28.7-64-64-64c-26.9 0-49.9 16.5-59.3 40H448v16.4c9.8 8.8 17.8 19.5 23.3 31.6zm88.9-26.7a16 16 0 1 1 31.5 5.5 16 16 0 1 1 -31.5-5.5zM271.8 450.7a16 16 0 1 1 -31.5-5.5 16 16 0 1 1 31.5 5.5zm301.5 13c-7.5-1.3-13.2-7.9-13.2-15.8c0-8.8 7.2-16 16-16c7.9 0 14.5 5.7 15.8 13.2l0 .1c.1 .9 .2 1.8 .2 2.7c0 8.8-7.2 16-16 16c-.9 0-1.9-.1-2.8-.2z\"]\n};\nvar faCircleRight = {\n  prefix: 'far',\n  iconName: 'circle-right',\n  icon: [512, 512, [61838, \"arrow-alt-circle-right\"], \"f35a\", \"M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM294.6 135.1c-4.2-4.5-10.1-7.1-16.3-7.1C266 128 256 138 256 150.3V208H160c-17.7 0-32 14.3-32 32v32c0 17.7 14.3 32 32 32h96v57.7c0 12.3 10 22.3 22.3 22.3c6.2 0 12.1-2.6 16.3-7.1l99.9-107.1c3.5-3.8 5.5-8.7 5.5-13.8s-2-10.1-5.5-13.8L294.6 135.1z\"]\n};\nvar faArrowAltCircleRight = faCircleRight;\nvar faFaceRollingEyes = {\n  prefix: 'far',\n  iconName: 'face-rolling-eyes',\n  icon: [512, 512, [128580, \"meh-rolling-eyes\"], \"f5a5\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM168 376c0 13.3 10.7 24 24 24H320c13.3 0 24-10.7 24-24s-10.7-24-24-24H192c-13.3 0-24 10.7-24 24zm-8-104c-26.5 0-48-21.5-48-48c0-14.3 6.3-27.2 16.2-36c-.2 1.3-.2 2.6-.2 4c0 17.7 14.3 32 32 32s32-14.3 32-32c0-1.4-.1-2.7-.2-4c10 8.8 16.2 21.7 16.2 36c0 26.5-21.5 48-48 48zm0 32a80 80 0 1 0 0-160 80 80 0 1 0 0 160zm192-32c-26.5 0-48-21.5-48-48c0-14.3 6.3-27.2 16.2-36c-.2 1.3-.2 2.6-.2 4c0 17.7 14.3 32 32 32s32-14.3 32-32c0-1.4-.1-2.7-.2-4c10 8.8 16.2 21.7 16.2 36c0 26.5-21.5 48-48 48zm0 32a80 80 0 1 0 0-160 80 80 0 1 0 0 160z\"]\n};\nvar faMehRollingEyes = faFaceRollingEyes;\nvar faObjectGroup = {\n  prefix: 'far',\n  iconName: 'object-group',\n  icon: [576, 512, [], \"f247\", \"M48 115.8C38.2 107 32 94.2 32 80c0-26.5 21.5-48 48-48c14.2 0 27 6.2 35.8 16H460.2c8.8-9.8 21.6-16 35.8-16c26.5 0 48 21.5 48 48c0 14.2-6.2 27-16 35.8V396.2c9.8 8.8 16 21.6 16 35.8c0 26.5-21.5 48-48 48c-14.2 0-27-6.2-35.8-16H115.8c-8.8 9.8-21.6 16-35.8 16c-26.5 0-48-21.5-48-48c0-14.2 6.2-27 16-35.8V115.8zM125.3 96c-4.8 13.6-15.6 24.4-29.3 29.3V386.7c13.6 4.8 24.4 15.6 29.3 29.3H450.7c4.8-13.6 15.6-24.4 29.3-29.3V125.3c-13.6-4.8-24.4-15.6-29.3-29.3H125.3zm2.7 64c0-17.7 14.3-32 32-32H288c17.7 0 32 14.3 32 32v96c0 17.7-14.3 32-32 32H160c-17.7 0-32-14.3-32-32V160zM256 320h32c35.3 0 64-28.7 64-64V224h64c17.7 0 32 14.3 32 32v96c0 17.7-14.3 32-32 32H288c-17.7 0-32-14.3-32-32V320z\"]\n};\nvar faHeart = {\n  prefix: 'far',\n  iconName: 'heart',\n  icon: [512, 512, [128153, 128154, 128155, 128156, 128420, 129293, 129294, 129505, 9829, 10084, 61578], \"f004\", \"M225.8 468.2l-2.5-2.3L48.1 303.2C17.4 274.7 0 234.7 0 192.8v-3.3c0-70.4 50-130.8 119.2-144C158.6 37.9 198.9 47 231 69.6c9 6.4 17.4 13.8 25 22.3c4.2-4.8 8.7-9.2 13.5-13.3c3.7-3.2 7.5-6.2 11.5-9c0 0 0 0 0 0C313.1 47 353.4 37.9 392.8 45.4C462 58.6 512 119.1 512 189.5v3.3c0 41.9-17.4 81.9-48.1 110.4L288.7 465.9l-2.5 2.3c-8.2 7.6-19 11.9-30.2 11.9s-22-4.2-30.2-11.9zM239.1 145c-.4-.3-.7-.7-1-1.1l-17.8-20c0 0-.1-.1-.1-.1c0 0 0 0 0 0c-23.1-25.9-58-37.7-92-31.2C81.6 101.5 48 142.1 48 189.5v3.3c0 28.5 11.9 55.8 32.8 75.2L256 430.7 431.2 268c20.9-19.4 32.8-46.7 32.8-75.2v-3.3c0-47.3-33.6-88-80.1-96.9c-34-6.5-69 5.4-92 31.2c0 0 0 0-.1 .1s0 0-.1 .1l-17.8 20c-.3 .4-.7 .7-1 1.1c-4.5 4.5-10.6 7-16.9 7s-12.4-2.5-16.9-7z\"]\n};\nvar faFaceSurprise = {\n  prefix: 'far',\n  iconName: 'face-surprise',\n  icon: [512, 512, [128558, \"surprise\"], \"f5c2\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm176.4-80a32 32 0 1 1 0 64 32 32 0 1 1 0-64zm128 32a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zM256 288a64 64 0 1 1 0 128 64 64 0 1 1 0-128z\"]\n};\nvar faSurprise = faFaceSurprise;\nvar faCirclePause = {\n  prefix: 'far',\n  iconName: 'circle-pause',\n  icon: [512, 512, [62092, \"pause-circle\"], \"f28b\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm224-72V328c0 13.3-10.7 24-24 24s-24-10.7-24-24V184c0-13.3 10.7-24 24-24s24 10.7 24 24zm112 0V328c0 13.3-10.7 24-24 24s-24-10.7-24-24V184c0-13.3 10.7-24 24-24s24 10.7 24 24z\"]\n};\nvar faPauseCircle = faCirclePause;\nvar faCircle = {\n  prefix: 'far',\n  iconName: 'circle',\n  icon: [512, 512, [128308, 128309, 128992, 128993, 128994, 128995, 128996, 9679, 9898, 9899, 11044, 61708, 61915], \"f111\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256z\"]\n};\nvar faCircleUp = {\n  prefix: 'far',\n  iconName: 'circle-up',\n  icon: [512, 512, [61467, \"arrow-alt-circle-up\"], \"f35b\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM135.1 217.4c-4.5 4.2-7.1 10.1-7.1 16.3c0 12.3 10 22.3 22.3 22.3H208v96c0 17.7 14.3 32 32 32h32c17.7 0 32-14.3 32-32V256h57.7c12.3 0 22.3-10 22.3-22.3c0-6.2-2.6-12.1-7.1-16.3L269.8 117.5c-3.8-3.5-8.7-5.5-13.8-5.5s-10.1 2-13.8 5.5L135.1 217.4z\"]\n};\nvar faArrowAltCircleUp = faCircleUp;\nvar faFileAudio = {\n  prefix: 'far',\n  iconName: 'file-audio',\n  icon: [384, 512, [], \"f1c7\", \"M64 464H320c8.8 0 16-7.2 16-16V160H256c-17.7 0-32-14.3-32-32V48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16zM0 64C0 28.7 28.7 0 64 0H229.5c17 0 33.3 6.7 45.3 18.7l90.5 90.5c12 12 18.7 28.3 18.7 45.3V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zM192 272V400c0 6.5-3.9 12.3-9.9 14.8s-12.9 1.1-17.4-3.5L129.4 376H112c-8.8 0-16-7.2-16-16V312c0-8.8 7.2-16 16-16h17.4l35.3-35.3c4.6-4.6 11.5-5.9 17.4-3.5s9.9 8.3 9.9 14.8zm85.8-4c11.6 20 18.2 43.3 18.2 68s-6.6 48-18.2 68c-6.6 11.5-21.3 15.4-32.8 8.8s-15.4-21.3-8.8-32.8c7.5-12.9 11.8-27.9 11.8-44s-4.3-31.1-11.8-44c-6.6-11.5-2.7-26.2 8.8-32.8s26.2-2.7 32.8 8.8z\"]\n};\nvar faFileImage = {\n  prefix: 'far',\n  iconName: 'file-image',\n  icon: [384, 512, [128443], \"f1c5\", \"M64 464c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16H224v80c0 17.7 14.3 32 32 32h80V448c0 8.8-7.2 16-16 16H64zM64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V154.5c0-17-6.7-33.3-18.7-45.3L274.7 18.7C262.7 6.7 246.5 0 229.5 0H64zm96 256a32 32 0 1 0 -64 0 32 32 0 1 0 64 0zm69.2 46.9c-3-4.3-7.9-6.9-13.2-6.9s-10.2 2.6-13.2 6.9l-41.3 59.7-11.9-19.1c-2.9-4.7-8.1-7.5-13.6-7.5s-10.6 2.8-13.6 7.5l-40 64c-3.1 4.9-3.2 11.1-.4 16.2s8.2 8.2 14 8.2h48 32 40 72c6 0 11.4-3.3 14.2-8.6s2.4-11.6-1-16.5l-72-104z\"]\n};\nvar faCircleQuestion = {\n  prefix: 'far',\n  iconName: 'circle-question',\n  icon: [512, 512, [62108, \"question-circle\"], \"f059\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm169.8-90.7c7.9-22.3 29.1-37.3 52.8-37.3h58.3c34.9 0 63.1 28.3 63.1 63.1c0 22.6-12.1 43.5-31.7 54.8L280 264.4c-.2 13-10.9 23.6-24 23.6c-13.3 0-24-10.7-24-24V250.5c0-8.6 4.6-16.5 12.1-20.8l44.3-25.4c4.7-2.7 7.6-7.7 7.6-13.1c0-8.4-6.8-15.1-15.1-15.1H222.6c-3.4 0-6.4 2.1-7.5 5.3l-.4 1.2c-4.4 12.5-18.2 19-30.6 14.6s-19-18.2-14.6-30.6l.4-1.2zM224 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"]\n};\nvar faQuestionCircle = faCircleQuestion;\nvar faFaceMehBlank = {\n  prefix: 'far',\n  iconName: 'face-meh-blank',\n  icon: [512, 512, [128566, \"meh-blank\"], \"f5a4\", \"M256 48a208 208 0 1 0 0 416 208 208 0 1 0 0-416zM512 256A256 256 0 1 1 0 256a256 256 0 1 1 512 0zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"]\n};\nvar faMehBlank = faFaceMehBlank;\nvar faEye = {\n  prefix: 'far',\n  iconName: 'eye',\n  icon: [576, 512, [128065], \"f06e\", \"M288 80c-65.2 0-118.8 29.6-159.9 67.7C89.6 183.5 63 226 49.4 256c13.6 30 40.2 72.5 78.6 108.3C169.2 402.4 222.8 432 288 432s118.8-29.6 159.9-67.7C486.4 328.5 513 286 526.6 256c-13.6-30-40.2-72.5-78.6-108.3C406.8 109.6 353.2 80 288 80zM95.4 112.6C142.5 68.8 207.2 32 288 32s145.5 36.8 192.6 80.6c46.8 43.5 78.1 95.4 93 131.1c3.3 7.9 3.3 16.7 0 24.6c-14.9 35.7-46.2 87.7-93 131.1C433.5 443.2 368.8 480 288 480s-145.5-36.8-192.6-80.6C48.6 356 17.3 304 2.5 268.3c-3.3-7.9-3.3-16.7 0-24.6C17.3 208 48.6 156 95.4 112.6zM288 336c44.2 0 80-35.8 80-80s-35.8-80-80-80c-.7 0-1.3 0-2 0c1.3 5.1 2 10.5 2 16c0 35.3-28.7 64-64 64c-5.5 0-10.9-.7-16-2c0 .7 0 1.3 0 2c0 44.2 35.8 80 80 80zm0-208a128 128 0 1 1 0 256 128 128 0 1 1 0-256z\"]\n};\nvar faFaceSadCry = {\n  prefix: 'far',\n  iconName: 'face-sad-cry',\n  icon: [512, 512, [128557, \"sad-cry\"], \"f5b3\", \"M400 406.1V288c0-13.3-10.7-24-24-24s-24 10.7-24 24V440.6c-28.7 15-61.4 23.4-96 23.4s-67.3-8.5-96-23.4V288c0-13.3-10.7-24-24-24s-24 10.7-24 24V406.1C72.6 368.2 48 315 48 256C48 141.1 141.1 48 256 48s208 93.1 208 208c0 59-24.6 112.2-64 150.1zM256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM159.6 220c10.6 0 19.9 3.8 25.4 9.7c7.6 8.1 20.2 8.5 28.3 .9s8.5-20.2 .9-28.3C199.7 186.8 179 180 159.6 180s-40.1 6.8-54.6 22.3c-7.6 8.1-7.1 20.7 .9 28.3s20.7 7.1 28.3-.9c5.5-5.8 14.8-9.7 25.4-9.7zm166.6 9.7c5.5-5.8 14.8-9.7 25.4-9.7s19.9 3.8 25.4 9.7c7.6 8.1 20.2 8.5 28.3 .9s8.5-20.2 .9-28.3C391.7 186.8 371 180 351.6 180s-40.1 6.8-54.6 22.3c-7.6 8.1-7.1 20.7 .9 28.3s20.7 7.1 28.3-.9zM208 320v32c0 26.5 21.5 48 48 48s48-21.5 48-48V320c0-26.5-21.5-48-48-48s-48 21.5-48 48z\"]\n};\nvar faSadCry = faFaceSadCry;\nvar faFileCode = {\n  prefix: 'far',\n  iconName: 'file-code',\n  icon: [384, 512, [], \"f1c9\", \"M64 464c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16H224v80c0 17.7 14.3 32 32 32h80V448c0 8.8-7.2 16-16 16H64zM64 0C28.7 0 0 28.7 0 64V448c0 35.3 28.7 64 64 64H320c35.3 0 64-28.7 64-64V154.5c0-17-6.7-33.3-18.7-45.3L274.7 18.7C262.7 6.7 246.5 0 229.5 0H64zm97 289c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0L79 303c-9.4 9.4-9.4 24.6 0 33.9l48 48c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-31-31 31-31zM257 255c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9l31 31-31 31c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l48-48c9.4-9.4 9.4-24.6 0-33.9l-48-48z\"]\n};\nvar faWindowMaximize = {\n  prefix: 'far',\n  iconName: 'window-maximize',\n  icon: [512, 512, [128470], \"f2d0\", \"M.3 89.5C.1 91.6 0 93.8 0 96V224 416c0 35.3 28.7 64 64 64l384 0c35.3 0 64-28.7 64-64V224 96c0-35.3-28.7-64-64-64H64c-2.2 0-4.4 .1-6.5 .3c-9.2 .9-17.8 3.8-25.5 8.2C21.8 46.5 13.4 55.1 7.7 65.5c-3.9 7.3-6.5 15.4-7.4 24zM48 224H464l0 192c0 8.8-7.2 16-16 16L64 432c-8.8 0-16-7.2-16-16l0-192z\"]\n};\nvar faFaceFrown = {\n  prefix: 'far',\n  iconName: 'face-frown',\n  icon: [512, 512, [9785, \"frown\"], \"f119\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zM174.6 384.1c-4.5 12.5-18.2 18.9-30.7 14.4s-18.9-18.2-14.4-30.7C146.9 319.4 198.9 288 256 288s109.1 31.4 126.6 79.9c4.5 12.5-2 26.2-14.4 30.7s-26.2-2-30.7-14.4C328.2 358.5 297.2 336 256 336s-72.2 22.5-81.4 48.1zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"]\n};\nvar faFrown = faFaceFrown;\nvar faFloppyDisk = {\n  prefix: 'far',\n  iconName: 'floppy-disk',\n  icon: [448, 512, [128190, 128426, \"save\"], \"f0c7\", \"M48 96V416c0 8.8 7.2 16 16 16H384c8.8 0 16-7.2 16-16V170.5c0-4.2-1.7-8.3-4.7-11.3l33.9-33.9c12 12 18.7 28.3 18.7 45.3V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96C0 60.7 28.7 32 64 32H309.5c17 0 33.3 6.7 45.3 18.7l74.5 74.5-33.9 33.9L320.8 84.7c-.3-.3-.5-.5-.8-.8V184c0 13.3-10.7 24-24 24H104c-13.3 0-24-10.7-24-24V80H64c-8.8 0-16 7.2-16 16zm80-16v80H272V80H128zm32 240a64 64 0 1 1 128 0 64 64 0 1 1 -128 0z\"]\n};\nvar faSave = faFloppyDisk;\nvar faCommentDots = {\n  prefix: 'far',\n  iconName: 'comment-dots',\n  icon: [512, 512, [128172, 62075, \"commenting\"], \"f4ad\", \"M168.2 384.9c-15-5.4-31.7-3.1-44.6 6.4c-8.2 6-22.3 14.8-39.4 22.7c5.6-14.7 9.9-31.3 11.3-49.4c1-12.9-3.3-25.7-11.8-35.5C60.4 302.8 48 272 48 240c0-79.5 83.3-160 208-160s208 80.5 208 160s-83.3 160-208 160c-31.6 0-61.3-5.5-87.8-15.1zM26.3 423.8c-1.6 2.7-3.3 5.4-5.1 8.1l-.3 .5c-1.6 2.3-3.2 4.6-4.8 6.9c-3.5 4.7-7.3 9.3-11.3 13.5c-4.6 4.6-5.9 11.4-3.4 17.4c2.5 6 8.3 9.9 14.8 9.9c5.1 0 10.2-.3 15.3-.8l.7-.1c4.4-.5 8.8-1.1 13.2-1.9c.8-.1 1.6-.3 2.4-.5c17.8-3.5 34.9-9.5 50.1-16.1c22.9-10 42.4-21.9 54.3-30.6c31.8 11.5 67 17.9 104.1 17.9c141.4 0 256-93.1 256-208S397.4 32 256 32S0 125.1 0 240c0 45.1 17.7 86.8 47.7 120.9c-1.9 24.5-11.4 46.3-21.4 62.9zM144 272a32 32 0 1 0 0-64 32 32 0 1 0 0 64zm144-32a32 32 0 1 0 -64 0 32 32 0 1 0 64 0zm80 32a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"]\n};\nvar faCommenting = faCommentDots;\nvar faFaceGrinSquint = {\n  prefix: 'far',\n  iconName: 'face-grin-squint',\n  icon: [512, 512, [128518, \"grin-squint\"], \"f585\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm349.5 52.4c18.7-4.4 35.9 12 25.5 28.1C350.4 374.6 306.3 400 255.9 400s-94.5-25.4-119.1-63.5c-10.4-16.1 6.8-32.5 25.5-28.1c28.9 6.8 60.5 10.5 93.6 10.5s64.7-3.7 93.6-10.5zm-216-161.7l89.9 47.9c10.7 5.7 10.7 21.1 0 26.8l-89.9 47.9c-7.9 4.2-17.5-1.5-17.5-10.5c0-2.8 1-5.5 2.8-7.6l36-43.2-36-43.2c-1.8-2.1-2.8-4.8-2.8-7.6c0-9 9.6-14.7 17.5-10.5zM396 157.1c0 2.8-1 5.5-2.8 7.6l-36 43.2 36 43.2c1.8 2.1 2.8 4.8 2.8 7.6c0 9-9.6 14.7-17.5 10.5l-89.9-47.9c-10.7-5.7-10.7-21.1 0-26.8l89.9-47.9c7.9-4.2 17.5 1.5 17.5 10.5z\"]\n};\nvar faGrinSquint = faFaceGrinSquint;\nvar faHandPointer = {\n  prefix: 'far',\n  iconName: 'hand-pointer',\n  icon: [448, 512, [], \"f25a\", \"M160 64c0-8.8 7.2-16 16-16s16 7.2 16 16V200c0 10.3 6.6 19.5 16.4 22.8s20.6-.1 26.8-8.3c3-3.9 7.6-6.4 12.8-6.4c8.8 0 16 7.2 16 16c0 10.3 6.6 19.5 16.4 22.8s20.6-.1 26.8-8.3c3-3.9 7.6-6.4 12.8-6.4c7.8 0 14.3 5.6 15.7 13c1.6 8.2 7.3 15.1 15.1 18s16.7 1.6 23.3-3.6c2.7-2.1 6.1-3.4 9.9-3.4c8.8 0 16 7.2 16 16l0 16V392c0 39.8-32.2 72-72 72H272 212.3h-.9c-37.4 0-72.4-18.7-93.2-49.9L50.7 312.9c-4.9-7.4-2.9-17.3 4.4-22.2s17.3-2.9 22.2 4.4L116 353.2c5.9 8.8 16.8 12.7 26.9 9.7s17-12.4 17-23V320 64zM176 0c-35.3 0-64 28.7-64 64V261.7C91.2 238 55.5 232.8 28.5 250.7C-.9 270.4-8.9 310.1 10.8 339.5L78.3 440.8c29.7 44.5 79.6 71.2 133.1 71.2h.9H272h56c66.3 0 120-53.7 120-120V288l0-16c0-35.3-28.7-64-64-64c-4.5 0-8.8 .5-13 1.3c-11.7-15.4-30.2-25.3-51-25.3c-6.9 0-13.5 1.1-19.7 3.1C288.7 170.7 269.6 160 248 160c-2.7 0-5.4 .2-8 .5V64c0-35.3-28.7-64-64-64zm48 304c0-8.8-7.2-16-16-16s-16 7.2-16 16v96c0 8.8 7.2 16 16 16s16-7.2 16-16V304zm48-16c-8.8 0-16 7.2-16 16v96c0 8.8 7.2 16 16 16s16-7.2 16-16V304c0-8.8-7.2-16-16-16zm80 16c0-8.8-7.2-16-16-16s-16 7.2-16 16v96c0 8.8 7.2 16 16 16s16-7.2 16-16V304z\"]\n};\nvar faHandScissors = {\n  prefix: 'far',\n  iconName: 'hand-scissors',\n  icon: [512, 512, [], \"f257\", \"M.2 276.3c-1.2-35.3 26.4-65 61.7-66.2l3.3-.1L57 208.1C22.5 200.5 .7 166.3 8.3 131.8S50.2 75.5 84.7 83.2l173 38.3c2.3-2.9 4.7-5.7 7.1-8.5l18.4-20.3C299.9 74.5 323.5 64 348.3 64l10.2 0c54.1 0 104.1 28.7 131.3 75.4l1.5 2.6c13.6 23.2 20.7 49.7 20.7 76.6L512 344c0 66.3-53.7 120-120 120l-8 0-96 0c-35.3 0-64-28.7-64-64c0-2.8 .2-5.6 .5-8.3c-19.4-11-32.5-31.8-32.5-55.7c0-.8 0-1.6 0-2.4L66.4 338c-35.3 1.2-65-26.4-66.2-61.7zm63.4-18.2c-8.8 .3-15.7 7.7-15.4 16.5s7.7 15.7 16.5 15.4l161.5-5.6c9.8-.3 18.7 5.3 22.7 14.2s2.2 19.3-4.5 26.4c-2.8 2.9-4.4 6.7-4.4 11c0 8.8 7.2 16 16 16c9.1 0 17.4 5.1 21.5 13.3s3.2 17.9-2.3 25.1c-2 2.7-3.2 6-3.2 9.6c0 8.8 7.2 16 16 16l96 0 8 0c39.8 0 72-32.2 72-72l0-125.4c0-18.4-4.9-36.5-14.2-52.4l-1.5-2.6c-18.6-32-52.8-51.6-89.8-51.6l-10.2 0c-11.3 0-22 4.8-29.6 13.1l-17.5-15.9 17.5 15.9-18.4 20.3c-.6 .6-1.1 1.3-1.7 1.9l57 13.2c8.6 2 14 10.6 12 19.2s-10.6 14-19.2 12l-85.6-19.7L74.3 130c-8.6-1.9-17.2 3.5-19.1 12.2s3.5 17.2 12.2 19.1l187.5 41.6c10.2 2.3 17.8 10.9 18.7 21.4l.1 1c.6 6.6-1.5 13.1-5.8 18.1s-10.6 7.9-17.2 8.2L63.6 258.1z\"]\n};\nvar faFaceGrinTears = {\n  prefix: 'far',\n  iconName: 'face-grin-tears',\n  icon: [640, 512, [128514, \"grin-tears\"], \"f588\", \"M516.1 325.5c1 3 2.1 6 3.3 8.9c3.3 8.1 8.4 18.5 16.5 26.6c3.9 3.9 8.2 7.4 12.7 10.3C506.4 454.8 419.9 512 320 512s-186.4-57.2-228.6-140.6c4.5-2.9 8.7-6.3 12.7-10.3c8.1-8.1 13.2-18.6 16.5-26.6c1.2-2.9 2.3-5.9 3.3-8.9C152.5 406.2 229.5 464 320 464s167.5-57.8 196.1-138.5zM320 48c-101.4 0-185.8 72.5-204.3 168.5c-6.7-3.1-14.3-4.3-22.3-3.1c-6.8 .9-16.2 2.4-26.6 4.4C85.3 94.5 191.6 0 320 0S554.7 94.5 573.2 217.7c-10.3-2-19.8-3.5-26.6-4.4c-8-1.2-15.7 .1-22.3 3.1C505.8 120.5 421.4 48 320 48zM78.5 341.1C60 356.7 32 355.5 14.3 337.7c-18.7-18.7-19.1-48.8-.7-67.2c8.6-8.6 30.1-15.1 50.5-19.6c13-2.8 25.5-4.8 33.9-6c5.4-.8 9.9 3.7 9 9c-3.1 21.5-11.4 70.2-25.5 84.4c-.9 1-1.9 1.8-2.9 2.7zm483 0c-.8-.6-1.5-1.3-2.3-2c-.2-.2-.5-.4-.7-.7c-14.1-14.1-22.5-62.9-25.5-84.4c-.8-5.4 3.7-9.9 9-9c1 .1 2.2 .3 3.3 .5c8.2 1.2 19.2 3 30.6 5.5c20.4 4.4 41.9 10.9 50.5 19.6c18.4 18.4 18 48.5-.7 67.2c-17.7 17.7-45.7 19-64.2 3.4zM439 336.5C414.4 374.6 370.3 400 319.9 400s-94.5-25.4-119.1-63.5c-10.4-16.1 6.8-32.5 25.5-28.1c28.9 6.8 60.5 10.5 93.6 10.5s64.7-3.7 93.6-10.5c18.7-4.4 35.9 12 25.5 28.1zM281.6 228.8l0 0-.2-.2c-.2-.2-.4-.5-.7-.9c-.6-.8-1.6-2-2.8-3.4c-2.5-2.8-6-6.6-10.2-10.3c-8.8-7.8-18.8-14-27.7-14s-18.9 6.2-27.7 14c-4.2 3.7-7.7 7.5-10.2 10.3c-1.2 1.4-2.2 2.6-2.8 3.4c-.3 .4-.6 .7-.7 .9l-.2 .2 0 0 0 0 0 0c-2.1 2.8-5.7 3.9-8.9 2.8s-5.5-4.1-5.5-7.6c0-17.9 6.7-35.6 16.6-48.8c9.8-13 23.9-23.2 39.4-23.2s29.6 10.2 39.4 23.2c9.9 13.2 16.6 30.9 16.6 48.8c0 3.4-2.2 6.5-5.5 7.6s-6.9 0-8.9-2.8l0 0 0 0 0 0zm160 0l0 0 0 0-.2-.2c-.2-.2-.4-.5-.7-.9c-.6-.8-1.6-2-2.8-3.4c-2.5-2.8-6-6.6-10.2-10.3c-8.8-7.8-18.8-14-27.7-14s-18.9 6.2-27.7 14c-4.2 3.7-7.7 7.5-10.2 10.3c-1.2 1.4-2.2 2.6-2.8 3.4c-.3 .4-.6 .7-.7 .9l-.2 .2 0 0 0 0 0 0c-2.1 2.8-5.7 3.9-8.9 2.8s-5.5-4.1-5.5-7.6c0-17.9 6.7-35.6 16.6-48.8c9.8-13 23.9-23.2 39.4-23.2s29.6 10.2 39.4 23.2c9.9 13.2 16.6 30.9 16.6 48.8c0 3.4-2.2 6.5-5.5 7.6s-6.9 0-8.9-2.8l0 0 0 0z\"]\n};\nvar faGrinTears = faFaceGrinTears;\nvar faCalendarXmark = {\n  prefix: 'far',\n  iconName: 'calendar-xmark',\n  icon: [448, 512, [\"calendar-times\"], \"f273\", \"M128 0c13.3 0 24 10.7 24 24V64H296V24c0-13.3 10.7-24 24-24s24 10.7 24 24V64h40c35.3 0 64 28.7 64 64v16 48V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V192 144 128C0 92.7 28.7 64 64 64h40V24c0-13.3 10.7-24 24-24zM400 192H48V448c0 8.8 7.2 16 16 16H384c8.8 0 16-7.2 16-16V192zm-95 89l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z\"]\n};\nvar faCalendarTimes = faCalendarXmark;\nvar faFileVideo = {\n  prefix: 'far',\n  iconName: 'file-video',\n  icon: [384, 512, [], \"f1c8\", \"M320 464c8.8 0 16-7.2 16-16V160H256c-17.7 0-32-14.3-32-32V48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H320zM0 64C0 28.7 28.7 0 64 0H229.5c17 0 33.3 6.7 45.3 18.7l90.5 90.5c12 12 18.7 28.3 18.7 45.3V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zM80 288c0-17.7 14.3-32 32-32h96c17.7 0 32 14.3 32 32v16l44.9-29.9c2-1.3 4.4-2.1 6.8-2.1c6.8 0 12.3 5.5 12.3 12.3V387.7c0 6.8-5.5 12.3-12.3 12.3c-2.4 0-4.8-.7-6.8-2.1L240 368v16c0 17.7-14.3 32-32 32H112c-17.7 0-32-14.3-32-32V288z\"]\n};\nvar faFilePdf = {\n  prefix: 'far',\n  iconName: 'file-pdf',\n  icon: [512, 512, [], \"f1c1\", \"M64 464l48 0 0 48-48 0c-35.3 0-64-28.7-64-64L0 64C0 28.7 28.7 0 64 0L229.5 0c17 0 33.3 6.7 45.3 18.7l90.5 90.5c12 12 18.7 28.3 18.7 45.3L384 304l-48 0 0-144-80 0c-17.7 0-32-14.3-32-32l0-80L64 48c-8.8 0-16 7.2-16 16l0 384c0 8.8 7.2 16 16 16zM176 352l32 0c30.9 0 56 25.1 56 56s-25.1 56-56 56l-16 0 0 32c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-48 0-80c0-8.8 7.2-16 16-16zm32 80c13.3 0 24-10.7 24-24s-10.7-24-24-24l-16 0 0 48 16 0zm96-80l32 0c26.5 0 48 21.5 48 48l0 64c0 26.5-21.5 48-48 48l-32 0c-8.8 0-16-7.2-16-16l0-128c0-8.8 7.2-16 16-16zm32 128c8.8 0 16-7.2 16-16l0-64c0-8.8-7.2-16-16-16l-16 0 0 96 16 0zm80-112c0-8.8 7.2-16 16-16l48 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-32 0 0 32 32 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-32 0 0 48c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-64 0-64z\"]\n};\nvar faComment = {\n  prefix: 'far',\n  iconName: 'comment',\n  icon: [512, 512, [128489, 61669], \"f075\", \"M123.6 391.3c12.9-9.4 29.6-11.8 44.6-6.4c26.5 9.6 56.2 15.1 87.8 15.1c124.7 0 208-80.5 208-160s-83.3-160-208-160S48 160.5 48 240c0 32 12.4 62.8 35.7 89.2c8.6 9.7 12.8 22.5 11.8 35.5c-1.4 18.1-5.7 34.7-11.3 49.4c17-7.9 31.1-16.7 39.4-22.7zM21.2 431.9c1.8-2.7 3.5-5.4 5.1-8.1c10-16.6 19.5-38.4 21.4-62.9C17.7 326.8 0 285.1 0 240C0 125.1 114.6 32 256 32s256 93.1 256 208s-114.6 208-256 208c-37.1 0-72.3-6.4-104.1-17.9c-11.9 8.7-31.3 20.6-54.3 30.6c-15.1 6.6-32.3 12.6-50.1 16.1c-.8 .2-1.6 .3-2.4 .5c-4.4 .8-8.7 1.5-13.2 1.9c-.2 0-.5 .1-.7 .1c-5.1 .5-10.2 .8-15.3 .8c-6.5 0-12.3-3.9-14.8-9.9c-2.5-6-1.1-12.8 3.4-17.4c4.1-4.2 7.8-8.7 11.3-13.5c1.7-2.3 3.3-4.6 4.8-6.9c.1-.2 .2-.3 .3-.5z\"]\n};\nvar faEnvelope = {\n  prefix: 'far',\n  iconName: 'envelope',\n  icon: [512, 512, [128386, 9993, 61443], \"f0e0\", \"M64 112c-8.8 0-16 7.2-16 16v22.1L220.5 291.7c20.7 17 50.4 17 71.1 0L464 150.1V128c0-8.8-7.2-16-16-16H64zM48 212.2V384c0 8.8 7.2 16 16 16H448c8.8 0 16-7.2 16-16V212.2L322 328.8c-38.4 31.5-93.7 31.5-132 0L48 212.2zM0 128C0 92.7 28.7 64 64 64H448c35.3 0 64 28.7 64 64V384c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128z\"]\n};\nvar faHourglass = {\n  prefix: 'far',\n  iconName: 'hourglass',\n  icon: [384, 512, [9203, 62032, \"hourglass-empty\"], \"f254\", \"M24 0C10.7 0 0 10.7 0 24S10.7 48 24 48h8V67c0 40.3 16 79 44.5 107.5L158.1 256 76.5 337.5C48 366 32 404.7 32 445v19H24c-13.3 0-24 10.7-24 24s10.7 24 24 24H360c13.3 0 24-10.7 24-24s-10.7-24-24-24h-8V445c0-40.3-16-79-44.5-107.5L225.9 256l81.5-81.5C336 146 352 107.3 352 67V48h8c13.3 0 24-10.7 24-24s-10.7-24-24-24H24zM192 289.9l81.5 81.5C293 391 304 417.4 304 445v19H80V445c0-27.6 11-54 30.5-73.5L192 289.9zm0-67.9l-81.5-81.5C91 121 80 94.6 80 67V48H304V67c0 27.6-11 54-30.5 73.5L192 222.1z\"]\n};\nvar faHourglassEmpty = faHourglass;\nvar faCalendarCheck = {\n  prefix: 'far',\n  iconName: 'calendar-check',\n  icon: [448, 512, [], \"f274\", \"M128 0c13.3 0 24 10.7 24 24V64H296V24c0-13.3 10.7-24 24-24s24 10.7 24 24V64h40c35.3 0 64 28.7 64 64v16 48V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V192 144 128C0 92.7 28.7 64 64 64h40V24c0-13.3 10.7-24 24-24zM400 192H48V448c0 8.8 7.2 16 16 16H384c8.8 0 16-7.2 16-16V192zM329 297L217 409c-9.4 9.4-24.6 9.4-33.9 0l-64-64c-9.4-9.4-9.4-24.6 0-33.9s24.6-9.4 33.9 0l47 47 95-95c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9z\"]\n};\nvar faHardDrive = {\n  prefix: 'far',\n  iconName: 'hard-drive',\n  icon: [512, 512, [128436, \"hdd\"], \"f0a0\", \"M64 80c-8.8 0-16 7.2-16 16V258c5.1-1.3 10.5-2 16-2H448c5.5 0 10.9 .7 16 2V96c0-8.8-7.2-16-16-16H64zM48 320v96c0 8.8 7.2 16 16 16H448c8.8 0 16-7.2 16-16V320c0-8.8-7.2-16-16-16H64c-8.8 0-16 7.2-16 16zM0 320V96C0 60.7 28.7 32 64 32H448c35.3 0 64 28.7 64 64V320v96c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V320zm280 48a24 24 0 1 1 48 0 24 24 0 1 1 -48 0zm120-24a24 24 0 1 1 0 48 24 24 0 1 1 0-48z\"]\n};\nvar faHdd = faHardDrive;\nvar faFaceGrinSquintTears = {\n  prefix: 'far',\n  iconName: 'face-grin-squint-tears',\n  icon: [512, 512, [129315, \"grin-squint-tears\"], \"f586\", \"M426.8 14.2C446-5 477.5-4.6 497.1 14.9s20 51 .7 70.3c-14.8 14.8-65.7 23.6-88.3 26.7c-5.6 .9-10.3-3.9-9.5-9.5C403.3 79.9 412 29 426.8 14.2zM75 75C158.2-8.3 284.5-22.2 382.2 33.2c-1.5 4.8-2.9 9.6-4.1 14.3c-3.1 12.2-5.5 24.6-7.3 35c-80.8-53.6-190.7-44.8-261.9 26.4C37.7 180.1 28.9 290 82.5 370.8c-10.5 1.8-22.9 4.2-35 7.3c-4.7 1.2-9.5 2.5-14.3 4.1C-22.2 284.5-8.2 158.2 75 75zm389.6 58.9c4.7-1.2 9.5-2.5 14.3-4.1C534.2 227.5 520.2 353.8 437 437c-83.2 83.2-209.5 97.2-307.2 41.8c1.5-4.8 2.8-9.6 4-14.3c3.1-12.2 5.5-24.6 7.3-35c80.8 53.6 190.7 44.8 261.9-26.4c71.2-71.2 80-181.1 26.4-261.9c10.5-1.8 22.9-4.2 35-7.3zm-105.4 93c10.1-16.3 33.9-16.9 37.9 1.9c9.5 44.4-3.7 93.5-39.3 129.1s-84.8 48.8-129.1 39.3c-18.7-4-18.2-27.8-1.9-37.9c25.2-15.7 50.2-35.4 73.6-58.8s43.1-48.4 58.8-73.6zM92 265.3l97.4-29.7c11.6-3.5 22.5 7.3 19 19l-29.7 97.4c-2.6 8.6-13.4 11.3-19.8 4.9c-2-2-3.2-4.6-3.4-7.3l-5.1-56.1-56.1-5.1c-2.8-.3-5.4-1.5-7.3-3.4c-6.3-6.3-3.6-17.2 4.9-19.8zm193-178.2c2 2 3.2 4.6 3.4 7.3l5.1 56.1 56.1 5.1c2.8 .3 5.4 1.5 7.3 3.4c6.3 6.3 3.6 17.2-4.9 19.8l-97.4 29.7c-11.6 3.5-22.5-7.3-19-19L265.3 92c2.6-8.6 13.4-11.3 19.8-4.9zM14.9 497.1c-19.6-19.6-20-51-.7-70.3C29 412 79.8 403.2 102.4 400.1c5.6-.9 10.3 3.9 9.5 9.5c-3.2 22.5-11.9 73.5-26.7 88.3C66 517 34.5 516.6 14.9 497.1z\"]\n};\nvar faGrinSquintTears = faFaceGrinSquintTears;\nvar faRectangleList = {\n  prefix: 'far',\n  iconName: 'rectangle-list',\n  icon: [576, 512, [\"list-alt\"], \"f022\", \"M64 80c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H512c8.8 0 16-7.2 16-16V96c0-8.8-7.2-16-16-16H64zM0 96C0 60.7 28.7 32 64 32H512c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zm96 64a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm104 0c0-13.3 10.7-24 24-24H448c13.3 0 24 10.7 24 24s-10.7 24-24 24H224c-13.3 0-24-10.7-24-24zm0 96c0-13.3 10.7-24 24-24H448c13.3 0 24 10.7 24 24s-10.7 24-24 24H224c-13.3 0-24-10.7-24-24zm0 96c0-13.3 10.7-24 24-24H448c13.3 0 24 10.7 24 24s-10.7 24-24 24H224c-13.3 0-24-10.7-24-24zm-72-64a32 32 0 1 1 0-64 32 32 0 1 1 0 64zM96 352a32 32 0 1 1 64 0 32 32 0 1 1 -64 0z\"]\n};\nvar faListAlt = faRectangleList;\nvar faCalendarPlus = {\n  prefix: 'far',\n  iconName: 'calendar-plus',\n  icon: [448, 512, [], \"f271\", \"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192zm176 40c-13.3 0-24 10.7-24 24v48H152c-13.3 0-24 10.7-24 24s10.7 24 24 24h48v48c0 13.3 10.7 24 24 24s24-10.7 24-24V352h48c13.3 0 24-10.7 24-24s-10.7-24-24-24H248V256c0-13.3-10.7-24-24-24z\"]\n};\nvar faCircleLeft = {\n  prefix: 'far',\n  iconName: 'circle-left',\n  icon: [512, 512, [61840, \"arrow-alt-circle-left\"], \"f359\", \"M48 256a208 208 0 1 1 416 0A208 208 0 1 1 48 256zm464 0A256 256 0 1 0 0 256a256 256 0 1 0 512 0zM217.4 376.9c4.2 4.5 10.1 7.1 16.3 7.1c12.3 0 22.3-10 22.3-22.3V304h96c17.7 0 32-14.3 32-32V240c0-17.7-14.3-32-32-32H256V150.3c0-12.3-10-22.3-22.3-22.3c-6.2 0-12.1 2.6-16.3 7.1L117.5 242.2c-3.5 3.8-5.5 8.7-5.5 13.8s2 10.1 5.5 13.8l99.9 107.1z\"]\n};\nvar faArrowAltCircleLeft = faCircleLeft;\nvar faMoneyBill1 = {\n  prefix: 'far',\n  iconName: 'money-bill-1',\n  icon: [576, 512, [\"money-bill-alt\"], \"f3d1\", \"M112 112c0 35.3-28.7 64-64 64V336c35.3 0 64 28.7 64 64H464c0-35.3 28.7-64 64-64V176c-35.3 0-64-28.7-64-64H112zM0 128C0 92.7 28.7 64 64 64H512c35.3 0 64 28.7 64 64V384c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128zM176 256a112 112 0 1 1 224 0 112 112 0 1 1 -224 0zm80-48c0 8.8 7.2 16 16 16v64h-8c-8.8 0-16 7.2-16 16s7.2 16 16 16h24 24c8.8 0 16-7.2 16-16s-7.2-16-16-16h-8V208c0-8.8-7.2-16-16-16H272c-8.8 0-16 7.2-16 16z\"]\n};\nvar faMoneyBillAlt = faMoneyBill1;\nvar faClock = {\n  prefix: 'far',\n  iconName: 'clock',\n  icon: [512, 512, [128339, \"clock-four\"], \"f017\", \"M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM232 120V256c0 8 4 15.5 10.7 20l96 64c11 7.4 25.9 4.4 33.3-6.7s4.4-25.9-6.7-33.3L280 243.2V120c0-13.3-10.7-24-24-24s-24 10.7-24 24z\"]\n};\nvar faClockFour = faClock;\nvar faKeyboard = {\n  prefix: 'far',\n  iconName: 'keyboard',\n  icon: [576, 512, [9000], \"f11c\", \"M64 112c-8.8 0-16 7.2-16 16V384c0 8.8 7.2 16 16 16H512c8.8 0 16-7.2 16-16V128c0-8.8-7.2-16-16-16H64zM0 128C0 92.7 28.7 64 64 64H512c35.3 0 64 28.7 64 64V384c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V128zM176 320H400c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H176c-8.8 0-16-7.2-16-16V336c0-8.8 7.2-16 16-16zm-72-72c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H120c-8.8 0-16-7.2-16-16V248zm16-96h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H120c-8.8 0-16-7.2-16-16V168c0-8.8 7.2-16 16-16zm64 96c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H200c-8.8 0-16-7.2-16-16V248zm16-96h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H200c-8.8 0-16-7.2-16-16V168c0-8.8 7.2-16 16-16zm64 96c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H280c-8.8 0-16-7.2-16-16V248zm16-96h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H280c-8.8 0-16-7.2-16-16V168c0-8.8 7.2-16 16-16zm64 96c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H360c-8.8 0-16-7.2-16-16V248zm16-96h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H360c-8.8 0-16-7.2-16-16V168c0-8.8 7.2-16 16-16zm64 96c0-8.8 7.2-16 16-16h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H440c-8.8 0-16-7.2-16-16V248zm16-96h16c8.8 0 16 7.2 16 16v16c0 8.8-7.2 16-16 16H440c-8.8 0-16-7.2-16-16V168c0-8.8 7.2-16 16-16z\"]\n};\nvar faClosedCaptioning = {\n  prefix: 'far',\n  iconName: 'closed-captioning',\n  icon: [576, 512, [], \"f20a\", \"M512 80c8.8 0 16 7.2 16 16V416c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V96c0-8.8 7.2-16 16-16H512zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H512c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zM200 208c14.2 0 27 6.1 35.8 16c8.8 9.9 24 10.7 33.9 1.9s10.7-24 1.9-33.9c-17.5-19.6-43.1-32-71.5-32c-53 0-96 43-96 96s43 96 96 96c28.4 0 54-12.4 71.5-32c8.8-9.9 8-25-1.9-33.9s-25-8-33.9 1.9c-8.8 9.9-21.6 16-35.8 16c-26.5 0-48-21.5-48-48s21.5-48 48-48zm144 48c0-26.5 21.5-48 48-48c14.2 0 27 6.1 35.8 16c8.8 9.9 24 10.7 33.9 1.9s10.7-24 1.9-33.9c-17.5-19.6-43.1-32-71.5-32c-53 0-96 43-96 96s43 96 96 96c28.4 0 54-12.4 71.5-32c8.8-9.9 8-25-1.9-33.9s-25-8-33.9 1.9c-8.8 9.9-21.6 16-35.8 16c-26.5 0-48-21.5-48-48z\"]\n};\nvar faImages = {\n  prefix: 'far',\n  iconName: 'images',\n  icon: [576, 512, [], \"f302\", \"M160 80H512c8.8 0 16 7.2 16 16V320c0 8.8-7.2 16-16 16H490.8L388.1 178.9c-4.4-6.8-12-10.9-20.1-10.9s-15.7 4.1-20.1 10.9l-52.2 79.8-12.4-16.9c-4.5-6.2-11.7-9.8-19.4-9.8s-14.8 3.6-19.4 9.8L175.6 336H160c-8.8 0-16-7.2-16-16V96c0-8.8 7.2-16 16-16zM96 96V320c0 35.3 28.7 64 64 64H512c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H160c-35.3 0-64 28.7-64 64zM48 120c0-13.3-10.7-24-24-24S0 106.7 0 120V344c0 75.1 60.9 136 136 136H456c13.3 0 24-10.7 24-24s-10.7-24-24-24H136c-48.6 0-88-39.4-88-88V120zm208 24a32 32 0 1 0 -64 0 32 32 0 1 0 64 0z\"]\n};\nvar faFaceGrin = {\n  prefix: 'far',\n  iconName: 'face-grin',\n  icon: [512, 512, [128512, \"grin\"], \"f580\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm349.5 52.4c18.7-4.4 35.9 12 25.5 28.1C350.4 374.6 306.3 400 255.9 400s-94.5-25.4-119.1-63.5c-10.4-16.1 6.8-32.5 25.5-28.1c28.9 6.8 60.5 10.5 93.6 10.5s64.7-3.7 93.6-10.5zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"]\n};\nvar faGrin = faFaceGrin;\nvar faFaceMeh = {\n  prefix: 'far',\n  iconName: 'face-meh',\n  icon: [512, 512, [128528, \"meh\"], \"f11a\", \"M464 256A208 208 0 1 1 48 256a208 208 0 1 1 416 0zM256 0a256 256 0 1 0 0 512A256 256 0 1 0 256 0zM176.4 240a32 32 0 1 0 0-64 32 32 0 1 0 0 64zm192-32a32 32 0 1 0 -64 0 32 32 0 1 0 64 0zM184 328c-13.3 0-24 10.7-24 24s10.7 24 24 24H328c13.3 0 24-10.7 24-24s-10.7-24-24-24H184z\"]\n};\nvar faMeh = faFaceMeh;\nvar faIdCard = {\n  prefix: 'far',\n  iconName: 'id-card',\n  icon: [576, 512, [62147, \"drivers-license\"], \"f2c2\", \"M528 160V416c0 8.8-7.2 16-16 16H320c0-44.2-35.8-80-80-80H176c-44.2 0-80 35.8-80 80H64c-8.8 0-16-7.2-16-16V160H528zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H512c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zM272 256a64 64 0 1 0 -128 0 64 64 0 1 0 128 0zm104-48c-13.3 0-24 10.7-24 24s10.7 24 24 24h80c13.3 0 24-10.7 24-24s-10.7-24-24-24H376zm0 96c-13.3 0-24 10.7-24 24s10.7 24 24 24h80c13.3 0 24-10.7 24-24s-10.7-24-24-24H376z\"]\n};\nvar faDriversLicense = faIdCard;\nvar faSun = {\n  prefix: 'far',\n  iconName: 'sun',\n  icon: [512, 512, [9728], \"f185\", \"M375.7 19.7c-1.5-8-6.9-14.7-14.4-17.8s-16.1-2.2-22.8 2.4L256 61.1 173.5 4.2c-6.7-4.6-15.3-5.5-22.8-2.4s-12.9 9.8-14.4 17.8l-18.1 98.5L19.7 136.3c-8 1.5-14.7 6.9-17.8 14.4s-2.2 16.1 2.4 22.8L61.1 256 4.2 338.5c-4.6 6.7-5.5 15.3-2.4 22.8s9.8 13 17.8 14.4l98.5 18.1 18.1 98.5c1.5 8 6.9 14.7 14.4 17.8s16.1 2.2 22.8-2.4L256 450.9l82.5 56.9c6.7 4.6 15.3 5.5 22.8 2.4s12.9-9.8 14.4-17.8l18.1-98.5 98.5-18.1c8-1.5 14.7-6.9 17.8-14.4s2.2-16.1-2.4-22.8L450.9 256l56.9-82.5c4.6-6.7 5.5-15.3 2.4-22.8s-9.8-12.9-17.8-14.4l-98.5-18.1L375.7 19.7zM269.6 110l65.6-45.2 14.4 78.3c1.8 9.8 9.5 17.5 19.3 19.3l78.3 14.4L402 242.4c-5.7 8.2-5.7 19 0 27.2l45.2 65.6-78.3 14.4c-9.8 1.8-17.5 9.5-19.3 19.3l-14.4 78.3L269.6 402c-8.2-5.7-19-5.7-27.2 0l-65.6 45.2-14.4-78.3c-1.8-9.8-9.5-17.5-19.3-19.3L64.8 335.2 110 269.6c5.7-8.2 5.7-19 0-27.2L64.8 176.8l78.3-14.4c9.8-1.8 17.5-9.5 19.3-19.3l14.4-78.3L242.4 110c8.2 5.7 19 5.7 27.2 0zM256 368a112 112 0 1 0 0-224 112 112 0 1 0 0 224zM192 256a64 64 0 1 1 128 0 64 64 0 1 1 -128 0z\"]\n};\nvar faFaceLaughWink = {\n  prefix: 'far',\n  iconName: 'face-laugh-wink',\n  icon: [512, 512, [\"laugh-wink\"], \"f59c\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm130.7 57.9c-4.2-13.6 7.1-25.9 21.3-25.9H364.5c14.2 0 25.5 12.4 21.3 25.9C369 368.4 318.2 408 258.2 408s-110.8-39.6-127.5-94.1zM144.4 192a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm165.8 21.7c-7.6 8.1-20.2 8.5-28.3 .9s-8.5-20.2-.9-28.3c14.5-15.5 35.2-22.3 54.6-22.3s40.1 6.8 54.6 22.3c7.6 8.1 7.1 20.7-.9 28.3s-20.7 7.1-28.3-.9c-5.5-5.8-14.8-9.7-25.4-9.7s-19.9 3.8-25.4 9.7z\"]\n};\nvar faLaughWink = faFaceLaughWink;\nvar faCircleDown = {\n  prefix: 'far',\n  iconName: 'circle-down',\n  icon: [512, 512, [61466, \"arrow-alt-circle-down\"], \"f358\", \"M256 464a208 208 0 1 1 0-416 208 208 0 1 1 0 416zM256 0a256 256 0 1 0 0 512A256 256 0 1 0 256 0zM376.9 294.6c4.5-4.2 7.1-10.1 7.1-16.3c0-12.3-10-22.3-22.3-22.3H304V160c0-17.7-14.3-32-32-32l-32 0c-17.7 0-32 14.3-32 32v96H150.3C138 256 128 266 128 278.3c0 6.2 2.6 12.1 7.1 16.3l107.1 99.9c3.8 3.5 8.7 5.5 13.8 5.5s10.1-2 13.8-5.5l107.1-99.9z\"]\n};\nvar faArrowAltCircleDown = faCircleDown;\nvar faThumbsDown = {\n  prefix: 'far',\n  iconName: 'thumbs-down',\n  icon: [512, 512, [128078, 61576], \"f165\", \"M323.8 477.2c-38.2 10.9-78.1-11.2-89-49.4l-5.7-20c-3.7-13-10.4-25-19.5-35l-51.3-56.4c-8.9-9.8-8.2-25 1.6-33.9s25-8.2 33.9 1.6l51.3 56.4c14.1 15.5 24.4 34 30.1 54.1l5.7 20c3.6 12.7 16.9 20.1 29.7 16.5s20.1-16.9 16.5-29.7l-5.7-20c-5.7-19.9-14.7-38.7-26.6-55.5c-5.2-7.3-5.8-16.9-1.7-24.9s12.3-13 21.3-13L448 288c8.8 0 16-7.2 16-16c0-6.8-4.3-12.7-10.4-15c-7.4-2.8-13-9-14.9-16.7s.1-15.8 5.3-21.7c2.5-2.8 4-6.5 4-10.6c0-7.8-5.6-14.3-13-15.7c-8.2-1.6-15.1-7.3-18-15.2s-1.6-16.7 3.6-23.3c2.1-2.7 3.4-6.1 3.4-9.9c0-6.7-4.2-12.6-10.2-14.9c-11.5-4.5-17.7-16.9-14.4-28.8c.4-1.3 .6-2.8 .6-4.3c0-8.8-7.2-16-16-16H286.5c-12.6 0-25 3.7-35.5 10.7l-61.7 41.1c-11 7.4-25.9 4.4-33.3-6.7s-4.4-25.9 6.7-33.3l61.7-41.1c18.4-12.3 40-18.8 62.1-18.8H384c34.7 0 62.9 27.6 64 62c14.6 11.7 24 29.7 24 50c0 4.5-.5 8.8-1.3 13c15.4 11.7 25.3 30.2 25.3 51c0 6.5-1 12.8-2.8 18.7C504.8 238.3 512 254.3 512 272c0 35.3-28.6 64-64 64l-92.3 0c4.7 10.4 8.7 21.2 11.8 32.2l5.7 20c10.9 38.2-11.2 78.1-49.4 89zM32 384c-17.7 0-32-14.3-32-32V128c0-17.7 14.3-32 32-32H96c17.7 0 32 14.3 32 32V352c0 17.7-14.3 32-32 32H32z\"]\n};\nvar faChessPawn = {\n  prefix: 'far',\n  iconName: 'chess-pawn',\n  icon: [320, 512, [9823], \"f443\", \"M232 152A72 72 0 1 0 88 152a72 72 0 1 0 144 0zm24 120H243.4l10.7 80H205.7L195 272H160 125l-10.7 80H65.9l10.7-80H64c-13.3 0-24-10.7-24-24s10.7-24 24-24c-15.1-20.1-24-45-24-72C40 85.7 93.7 32 160 32s120 53.7 120 120c0 27-8.9 51.9-24 72c13.3 0 24 10.7 24 24s-10.7 24-24 24zM52.7 464H267.3l-16.6-32H69.2L52.7 464zm207.9-80c12 0 22.9 6.7 28.4 17.3l26.5 51.2c3 5.8 4.6 12.2 4.6 18.7c0 22.5-18.2 40.8-40.8 40.8H40.8C18.2 512 0 493.8 0 471.2c0-6.5 1.6-12.9 4.6-18.7l26.5-51.2C36.5 390.7 47.5 384 59.5 384h201z\"]\n};\nvar faCreditCard = {\n  prefix: 'far',\n  iconName: 'credit-card',\n  icon: [576, 512, [128179, 62083, \"credit-card-alt\"], \"f09d\", \"M512 80c8.8 0 16 7.2 16 16v32H48V96c0-8.8 7.2-16 16-16H512zm16 144V416c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V224H528zM64 32C28.7 32 0 60.7 0 96V416c0 35.3 28.7 64 64 64H512c35.3 0 64-28.7 64-64V96c0-35.3-28.7-64-64-64H64zm56 304c-13.3 0-24 10.7-24 24s10.7 24 24 24h48c13.3 0 24-10.7 24-24s-10.7-24-24-24H120zm128 0c-13.3 0-24 10.7-24 24s10.7 24 24 24H360c13.3 0 24-10.7 24-24s-10.7-24-24-24H248z\"]\n};\nvar faCreditCardAlt = faCreditCard;\nvar faBell = {\n  prefix: 'far',\n  iconName: 'bell',\n  icon: [448, 512, [128276, 61602], \"f0f3\", \"M224 0c-17.7 0-32 14.3-32 32V51.2C119 66 64 130.6 64 208v25.4c0 45.4-15.5 89.5-43.8 124.9L5.3 377c-5.8 7.2-6.9 17.1-2.9 25.4S14.8 416 24 416H424c9.2 0 17.6-5.3 21.6-13.6s2.9-18.2-2.9-25.4l-14.9-18.6C399.5 322.9 384 278.8 384 233.4V208c0-77.4-55-142-128-156.8V32c0-17.7-14.3-32-32-32zm0 96c61.9 0 112 50.1 112 112v25.4c0 47.9 13.9 94.6 39.7 134.6H72.3C98.1 328 112 281.3 112 233.4V208c0-61.9 50.1-112 112-112zm64 352H224 160c0 17 6.7 33.3 18.7 45.3s28.3 18.7 45.3 18.7s33.3-6.7 45.3-18.7s18.7-28.3 18.7-45.3z\"]\n};\nvar faFile = {\n  prefix: 'far',\n  iconName: 'file',\n  icon: [384, 512, [128196, 128459, 61462], \"f15b\", \"M320 464c8.8 0 16-7.2 16-16V160H256c-17.7 0-32-14.3-32-32V48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16H320zM0 64C0 28.7 28.7 0 64 0H229.5c17 0 33.3 6.7 45.3 18.7l90.5 90.5c12 12 18.7 28.3 18.7 45.3V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64z\"]\n};\nvar faHospital = {\n  prefix: 'far',\n  iconName: 'hospital',\n  icon: [640, 512, [127973, 62589, \"hospital-alt\", \"hospital-wide\"], \"f0f8\", \"M232 0c-39.8 0-72 32.2-72 72v8H72C32.2 80 0 112.2 0 152V440c0 39.8 32.2 72 72 72h.2 .2 .2 .2 .2H73h.2 .2 .2 .2 .2 .2 .2 .2 .2 .2H75h.2 .2 .2 .2 .2 .2 .2 .2 .2 .2H77h.2 .2 .2 .2 .2 .2 .2 .2 .2 .2H79h.2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2H82h.2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2H85h.2 .2 .2 .2H86h.2 .2 .2 .2H87h.2 .2 .2 .2H88h.2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2H98h.2 .2 .2 .2H99h.2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2 .2v0H456h8v0H568c39.8 0 72-32.2 72-72V152c0-39.8-32.2-72-72-72H480V72c0-39.8-32.2-72-72-72H232zM480 128h88c13.3 0 24 10.7 24 24v40H536c-13.3 0-24 10.7-24 24s10.7 24 24 24h56v48H536c-13.3 0-24 10.7-24 24s10.7 24 24 24h56V440c0 13.3-10.7 24-24 24H480V336 128zM72 128h88V464h-.1-.2-.2-.2H159h-.2-.2-.2H158h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H154h-.2-.2-.2H153h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H150h-.2-.2-.2H149h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H146h-.2-.2-.2H145h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H142h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H139h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H136h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H133h-.2-.2-.2-.2-.2-.2-.2-.2H131h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H128h-.2-.2-.2-.2-.2-.2-.2-.2H126h-.2-.2-.2-.2-.2-.2-.2-.2H124h-.2-.2-.2-.2-.2-.2-.2-.2H122h-.2-.2-.2-.2-.2-.2-.2-.2H120h-.2-.2-.2-.2-.2-.2-.2-.2H118h-.2-.2-.2-.2-.2-.2-.2-.2H116h-.2-.2-.2-.2-.2-.2-.2-.2H114h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H111h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H108h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H105h-.2-.2-.2-.2H104h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H100h-.2-.2-.2-.2H99h-.2-.2-.2-.2H98h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H88h-.2-.2-.2-.2H87h-.2-.2-.2-.2H86h-.2-.2-.2-.2H85h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H82h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H79h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H77h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H75h-.2-.2-.2-.2-.2-.2-.2-.2-.2-.2H73h-.2-.2-.2-.2-.2H72c-13.2 0-24-10.7-24-24V336h56c13.3 0 24-10.7 24-24s-10.7-24-24-24H48V240h56c13.3 0 24-10.7 24-24s-10.7-24-24-24H48V152c0-13.3 10.7-24 24-24zM208 72c0-13.3 10.7-24 24-24H408c13.3 0 24 10.7 24 24V336 464H368V400c0-26.5-21.5-48-48-48s-48 21.5-48 48v64H208V72zm88 24v24H272c-8.8 0-16 7.2-16 16v16c0 8.8 7.2 16 16 16h24v24c0 8.8 7.2 16 16 16h16c8.8 0 16-7.2 16-16V168h24c8.8 0 16-7.2 16-16V136c0-8.8-7.2-16-16-16H344V96c0-8.8-7.2-16-16-16H312c-8.8 0-16 7.2-16 16z\"]\n};\nvar faHospitalAlt = faHospital;\nvar faHospitalWide = faHospital;\nvar faChessRook = {\n  prefix: 'far',\n  iconName: 'chess-rook',\n  icon: [448, 512, [9820], \"f447\", \"M80 80V192c0 2.5 1.2 4.9 3.2 6.4l51.2 38.4c6.8 5.1 10.4 13.4 9.5 21.9L133.5 352H85.2l9.4-85L54.4 236.8C40.3 226.2 32 209.6 32 192V72c0-22.1 17.9-40 40-40H376c22.1 0 40 17.9 40 40V192c0 17.6-8.3 34.2-22.4 44.8L353.4 267l9.4 85H314.5l-10.4-93.3c-.9-8.4 2.7-16.8 9.5-21.9l51.2-38.4c2-1.5 3.2-3.9 3.2-6.4V80H304v24c0 13.3-10.7 24-24 24s-24-10.7-24-24V80H192v24c0 13.3-10.7 24-24 24s-24-10.7-24-24V80H80zm4.7 384H363.3l-16.6-32H101.2L84.7 464zm271.9-80c12 0 22.9 6.7 28.4 17.3l26.5 51.2c3 5.8 4.6 12.2 4.6 18.7c0 22.5-18.2 40.8-40.8 40.8H72.8C50.2 512 32 493.8 32 471.2c0-6.5 1.6-12.9 4.6-18.7l26.5-51.2C68.5 390.7 79.5 384 91.5 384h265zM208 288c-8.8 0-16-7.2-16-16V224c0-17.7 14.3-32 32-32s32 14.3 32 32v48c0 8.8-7.2 16-16 16H208z\"]\n};\nvar faStarHalf = {\n  prefix: 'far',\n  iconName: 'star-half',\n  icon: [576, 512, [61731], \"f089\", \"M293.3 .6c10.9 2.5 18.6 12.2 18.6 23.4V408.7c0 8.9-4.9 17-12.7 21.2L151 509.1c-8.1 4.3-17.9 3.7-25.3-1.7s-11.2-14.5-9.7-23.5l26.2-155.6L31.1 218.3c-6.5-6.4-8.7-15.9-5.9-24.5s10.3-14.9 19.3-16.3l153.2-22.6L266.3 13.5c4.9-10.1 16.1-15.4 27-12.9zM263.9 128.4l-28.6 58.8c-3.5 7.1-10.2 12.1-18.1 13.3L99 217.9 184.9 303c5.5 5.5 8.1 13.3 6.8 21L171.4 443.7l92.5-49.4V128.4z\"]\n};\nvar faChessKing = {\n  prefix: 'far',\n  iconName: 'chess-king',\n  icon: [448, 512, [9818], \"f43f\", \"M248 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V56H168c-13.3 0-24 10.7-24 24s10.7 24 24 24h32v40H59.6C26.7 144 0 170.7 0 203.6c0 8.2 1.7 16.3 4.9 23.8L59.1 352h52.3L49 208.2c-.6-1.5-1-3-1-4.6c0-6.4 5.2-11.6 11.6-11.6H224 388.4c6.4 0 11.6 5.2 11.6 11.6c0 1.6-.3 3.2-1 4.6L336.5 352h52.3l54.2-124.6c3.3-7.5 4.9-15.6 4.9-23.8c0-32.9-26.7-59.6-59.6-59.6H248V104h32c13.3 0 24-10.7 24-24s-10.7-24-24-24H248V24zM101.2 432H346.8l16.6 32H84.7l16.6-32zm283.7-30.7c-5.5-10.6-16.5-17.3-28.4-17.3H91.5c-12 0-22.9 6.7-28.4 17.3L36.6 452.5c-3 5.8-4.6 12.2-4.6 18.7C32 493.8 50.2 512 72.8 512H375.2c22.5 0 40.8-18.2 40.8-40.8c0-6.5-1.6-12.9-4.6-18.7l-26.5-51.2z\"]\n};\nvar faCircleUser = {\n  prefix: 'far',\n  iconName: 'circle-user',\n  icon: [512, 512, [62142, \"user-circle\"], \"f2bd\", \"M406.5 399.6C387.4 352.9 341.5 320 288 320H224c-53.5 0-99.4 32.9-118.5 79.6C69.9 362.2 48 311.7 48 256C48 141.1 141.1 48 256 48s208 93.1 208 208c0 55.7-21.9 106.2-57.5 143.6zm-40.1 32.7C334.4 452.4 296.6 464 256 464s-78.4-11.6-110.5-31.7c7.3-36.7 39.7-64.3 78.5-64.3h64c38.8 0 71.2 27.6 78.5 64.3zM256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm0-272a40 40 0 1 1 0-80 40 40 0 1 1 0 80zm-88-40a88 88 0 1 0 176 0 88 88 0 1 0 -176 0z\"]\n};\nvar faUserCircle = faCircleUser;\nvar faCopy = {\n  prefix: 'far',\n  iconName: 'copy',\n  icon: [448, 512, [], \"f0c5\", \"M384 336H192c-8.8 0-16-7.2-16-16V64c0-8.8 7.2-16 16-16l140.1 0L400 115.9V320c0 8.8-7.2 16-16 16zM192 384H384c35.3 0 64-28.7 64-64V115.9c0-12.7-5.1-24.9-14.1-33.9L366.1 14.1c-9-9-21.2-14.1-33.9-14.1H192c-35.3 0-64 28.7-64 64V320c0 35.3 28.7 64 64 64zM64 128c-35.3 0-64 28.7-64 64V448c0 35.3 28.7 64 64 64H256c35.3 0 64-28.7 64-64V416H272v32c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192c0-8.8 7.2-16 16-16H96V128H64z\"]\n};\nvar faShareFromSquare = {\n  prefix: 'far',\n  iconName: 'share-from-square',\n  icon: [576, 512, [61509, \"share-square\"], \"f14d\", \"M400 255.4V240 208c0-8.8-7.2-16-16-16H352 336 289.5c-50.9 0-93.9 33.5-108.3 79.6c-3.3-9.4-5.2-19.8-5.2-31.6c0-61.9 50.1-112 112-112h48 16 32c8.8 0 16-7.2 16-16V80 64.6L506 160 400 255.4zM336 240h16v48c0 17.7 14.3 32 32 32h3.7c7.9 0 15.5-2.9 21.4-8.2l139-125.1c7.6-6.8 11.9-16.5 11.9-26.7s-4.3-19.9-11.9-26.7L409.9 8.9C403.5 3.2 395.3 0 386.7 0C367.5 0 352 15.5 352 34.7V80H336 304 288c-88.4 0-160 71.6-160 160c0 60.4 34.6 99.1 63.9 120.9c5.9 4.4 11.5 8.1 16.7 11.2c4.4 2.7 8.5 4.9 11.9 6.6c3.4 1.7 6.2 3 8.2 3.9c2.2 1 4.6 1.4 7.1 1.4h2.5c9.8 0 17.8-8 17.8-17.8c0-7.8-5.3-14.7-11.6-19.5l0 0c-.4-.3-.7-.5-1.1-.8c-1.7-1.1-3.4-2.5-5-4.1c-.8-.8-1.7-1.6-2.5-2.6s-1.6-1.9-2.4-2.9c-1.8-2.5-3.5-5.3-5-8.5c-2.6-6-4.3-13.3-4.3-22.4c0-36.1 29.3-65.5 65.5-65.5H304h32zM72 32C32.2 32 0 64.2 0 104V440c0 39.8 32.2 72 72 72H408c39.8 0 72-32.2 72-72V376c0-13.3-10.7-24-24-24s-24 10.7-24 24v64c0 13.3-10.7 24-24 24H72c-13.3 0-24-10.7-24-24V104c0-13.3 10.7-24 24-24h64c13.3 0 24-10.7 24-24s-10.7-24-24-24H72z\"]\n};\nvar faShareSquare = faShareFromSquare;\nvar faCopyright = {\n  prefix: 'far',\n  iconName: 'copyright',\n  icon: [512, 512, [169], \"f1f9\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM199.4 312.6c-31.2-31.2-31.2-81.9 0-113.1s81.9-31.2 113.1 0c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9c-50-50-131-50-181 0s-50 131 0 181s131 50 181 0c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0c-31.2 31.2-81.9 31.2-113.1 0z\"]\n};\nvar faMap = {\n  prefix: 'far',\n  iconName: 'map',\n  icon: [576, 512, [128506, 62072], \"f279\", \"M565.6 36.2C572.1 40.7 576 48.1 576 56V392c0 10-6.2 18.9-15.5 22.4l-168 64c-5.2 2-10.9 2.1-16.1 .3L192.5 417.5l-160 61c-7.4 2.8-15.7 1.8-22.2-2.7S0 463.9 0 456V120c0-10 6.1-18.9 15.5-22.4l168-64c5.2-2 10.9-2.1 16.1-.3L383.5 94.5l160-61c7.4-2.8 15.7-1.8 22.2 2.7zM48 136.5V421.2l120-45.7V90.8L48 136.5zM360 422.7V137.3l-144-48V374.7l144 48zm48-1.5l120-45.7V90.8L408 136.5V421.2z\"]\n};\nvar faBellSlash = {\n  prefix: 'far',\n  iconName: 'bell-slash',\n  icon: [640, 512, [128277, 61943], \"f1f6\", \"M38.8 5.1C28.4-3.1 13.3-1.2 5.1 9.2S-1.2 34.7 9.2 42.9l592 464c10.4 8.2 25.5 6.3 33.7-4.1s6.3-25.5-4.1-33.7L542.6 400c2.7-7.8 1.3-16.5-3.9-23l-14.9-18.6C495.5 322.9 480 278.8 480 233.4V208c0-77.4-55-142-128-156.8V32c0-17.7-14.3-32-32-32s-32 14.3-32 32V51.2c-42.6 8.6-79 34.2-102 69.3L38.8 5.1zM224 150.3C243.6 117.7 279.3 96 320 96c61.9 0 112 50.1 112 112v25.4c0 32.7 6.4 64.8 18.7 94.5L224 150.3zM406.2 416l-60.9-48H168.3c21.2-32.8 34.4-70.3 38.4-109.1L160 222.1v11.4c0 45.4-15.5 89.5-43.8 124.9L101.3 377c-5.8 7.2-6.9 17.1-2.9 25.4s12.4 13.6 21.6 13.6H406.2zM384 448H320 256c0 17 6.7 33.3 18.7 45.3s28.3 18.7 45.3 18.7s33.3-6.7 45.3-18.7s18.7-28.3 18.7-45.3z\"]\n};\nvar faHandLizard = {\n  prefix: 'far',\n  iconName: 'hand-lizard',\n  icon: [512, 512, [], \"f258\", \"M72 112c-13.3 0-24 10.7-24 24s10.7 24 24 24H240c35.3 0 64 28.7 64 64s-28.7 64-64 64H136c-13.3 0-24 10.7-24 24s10.7 24 24 24H288c4.5 0 8.9 1.3 12.7 3.6l64 40c7 4.4 11.3 12.1 11.3 20.4v24c0 13.3-10.7 24-24 24s-24-10.7-24-24V413.3L281.1 384H136c-39.8 0-72-32.2-72-72s32.2-72 72-72H240c8.8 0 16-7.2 16-16s-7.2-16-16-16H72c-39.8 0-72-32.2-72-72S32.2 64 72 64H281.6c46.7 0 90.9 21.5 119.7 58.3l78.4 100.1c20.9 26.7 32.3 59.7 32.3 93.7V424c0 13.3-10.7 24-24 24s-24-10.7-24-24V316.1c0-23.2-7.8-45.8-22.1-64.1L363.5 151.9c-19.7-25.2-49.9-39.9-81.9-39.9H72z\"]\n};\nvar faFaceSmile = {\n  prefix: 'far',\n  iconName: 'face-smile',\n  icon: [512, 512, [128578, \"smile\"], \"f118\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm177.6 62.1C192.8 334.5 218.8 352 256 352s63.2-17.5 78.4-33.9c9-9.7 24.2-10.4 33.9-1.4s10.4 24.2 1.4 33.9c-22 23.8-60 49.4-113.6 49.4s-91.7-25.5-113.6-49.4c-9-9.7-8.4-24.9 1.4-33.9s24.9-8.4 33.9 1.4zM144.4 208a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"]\n};\nvar faSmile = faFaceSmile;\nvar faHandPeace = {\n  prefix: 'far',\n  iconName: 'hand-peace',\n  icon: [512, 512, [9996], \"f25b\", \"M250.8 1.4c-35.2-3.7-66.6 21.8-70.3 57L174 119 156.7 69.6C145 36.3 108.4 18.8 75.1 30.5S24.2 78.8 35.9 112.1L88.7 262.2C73.5 276.7 64 297.3 64 320v0 24c0 92.8 75.2 168 168 168h48c92.8 0 168-75.2 168-168V272 256 224c0-35.3-28.7-64-64-64c-7.9 0-15.4 1.4-22.4 4c-10.4-21.3-32.3-36-57.6-36c-.7 0-1.5 0-2.2 0l5.9-56.3c3.7-35.2-21.8-66.6-57-70.3zm-.2 155.4C243.9 166.9 240 179 240 192v48c0 .7 0 1.4 0 2c-5.1-1.3-10.5-2-16-2h-7.4l-5.4-15.3 17-161.3c.9-8.8 8.8-15.2 17.6-14.2s15.2 8.8 14.2 17.6l-9.5 90.1zM111.4 85.6L165.7 240H144c-4 0-8 .3-11.9 .9L81.2 96.2c-2.9-8.3 1.5-17.5 9.8-20.4s17.5 1.5 20.4 9.8zM288 192c0-8.8 7.2-16 16-16s16 7.2 16 16v32 16c0 8.8-7.2 16-16 16s-16-7.2-16-16V192zm38.4 108c10.4 21.3 32.3 36 57.6 36c5.5 0 10.9-.7 16-2v10c0 66.3-53.7 120-120 120H232c-66.3 0-120-53.7-120-120l0-24 0 0c0-17.7 14.3-32 32-32h80c8.8 0 16 7.2 16 16s-7.2 16-16 16H184c-13.3 0-24 10.7-24 24s10.7 24 24 24h40c35.3 0 64-28.7 64-64c0-.7 0-1.4 0-2c5.1 1.3 10.5 2 16 2c7.9 0 15.4-1.4 22.4-4zM400 272c0 8.8-7.2 16-16 16s-16-7.2-16-16V240 224c0-8.8 7.2-16 16-16s16 7.2 16 16v32 16z\"]\n};\nvar faFaceGrinHearts = {\n  prefix: 'far',\n  iconName: 'face-grin-hearts',\n  icon: [512, 512, [128525, \"grin-hearts\"], \"f584\", \"M464 256A208 208 0 1 0 48 256a208 208 0 1 0 416 0zM0 256a256 256 0 1 1 512 0A256 256 0 1 1 0 256zm349.5 52.4c18.7-4.4 35.9 12 25.5 28.1C350.4 374.6 306.3 400 255.9 400s-94.5-25.4-119.1-63.5c-10.4-16.1 6.8-32.5 25.5-28.1c28.9 6.8 60.5 10.5 93.6 10.5s64.7-3.7 93.6-10.5zM215.3 137.1c17.8 4.8 28.4 23.1 23.6 40.8l-17.4 65c-2.3 8.5-11.1 13.6-19.6 11.3l-65.1-17.4c-17.8-4.8-28.4-23.1-23.6-40.8s23.1-28.4 40.8-23.6l16.1 4.3 4.3-16.1c4.8-17.8 23.1-28.4 40.8-23.6zm122.3 23.6l4.3 16.1 16.1-4.3c17.8-4.8 36.1 5.8 40.8 23.6s-5.8 36.1-23.6 40.8l-65.1 17.4c-8.5 2.3-17.3-2.8-19.6-11.3l-17.4-65c-4.8-17.8 5.8-36.1 23.6-40.8s36.1 5.8 40.9 23.6z\"]\n};\nvar faGrinHearts = faFaceGrinHearts;\nvar faBuilding = {\n  prefix: 'far',\n  iconName: 'building',\n  icon: [384, 512, [127970, 61687], \"f1ad\", \"M64 48c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16h80V400c0-26.5 21.5-48 48-48s48 21.5 48 48v64h80c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H64zM0 64C0 28.7 28.7 0 64 0H320c35.3 0 64 28.7 64 64V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V64zm88 40c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v48c0 8.8-7.2 16-16 16H104c-8.8 0-16-7.2-16-16V104zM232 88h48c8.8 0 16 7.2 16 16v48c0 8.8-7.2 16-16 16H232c-8.8 0-16-7.2-16-16V104c0-8.8 7.2-16 16-16zM88 232c0-8.8 7.2-16 16-16h48c8.8 0 16 7.2 16 16v48c0 8.8-7.2 16-16 16H104c-8.8 0-16-7.2-16-16V232zm144-16h48c8.8 0 16 7.2 16 16v48c0 8.8-7.2 16-16 16H232c-8.8 0-16-7.2-16-16V232c0-8.8 7.2-16 16-16z\"]\n};\nvar faFaceGrinBeamSweat = {\n  prefix: 'far',\n  iconName: 'face-grin-beam-sweat',\n  icon: [512, 512, [128517, \"grin-beam-sweat\"], \"f583\", \"M476.8 126.3C497.1 120.8 512 102.7 512 81c0-20-28.6-60.4-41.6-77.7c-3.2-4.4-9.6-4.4-12.8 0c-9.5 12.6-27.1 37.2-36 57.5c-.3 .7-.6 1.4-.9 2.1C417.8 69.7 416 76 416 81c0 26 21.5 47 48 47c4.4 0 8.7-.6 12.8-1.7zM395.4 41.2C355.3 15.2 307.4 0 256 0C114.6 0 0 114.6 0 256S114.6 512 256 512s256-114.6 256-256c0-35.8-7.3-69.9-20.6-100.8c-8.6 3.1-17.8 4.8-27.4 4.8c-8.9 0-17.6-1.5-25.7-4.2C454.7 185.5 464 219.7 464 256c0 114.9-93.1 208-208 208S48 370.9 48 256S141.1 48 256 48c48.7 0 93.4 16.7 128.9 44.7c-.6-3.8-.9-7.7-.9-11.7c0-11.4 3.8-22.4 7.1-30.5c1.3-3.1 2.7-6.2 4.3-9.3zM375 336.5c10.4-16.1-6.8-32.5-25.5-28.1c-28.9 6.8-60.5 10.5-93.6 10.5s-64.7-3.7-93.6-10.5c-18.7-4.4-35.9 12-25.5 28.1c24.6 38.1 68.7 63.5 119.1 63.5s94.5-25.4 119.1-63.5zM217.6 228.8l0 0 0 0 0 0c2.1 2.8 5.7 3.9 8.9 2.8s5.5-4.1 5.5-7.6c0-17.9-6.7-35.6-16.6-48.8c-9.8-13-23.9-23.2-39.4-23.2s-29.6 10.2-39.4 23.2C126.7 188.4 120 206.1 120 224c0 3.4 2.2 6.5 5.5 7.6s6.9 0 8.9-2.8l0 0 0 0 0 0 .2-.2c.2-.2 .4-.5 .7-.9c.6-.8 1.6-2 2.8-3.4c2.5-2.8 6-6.6 10.2-10.3c8.8-7.8 18.8-14 27.7-14s18.9 6.2 27.7 14c4.2 3.7 7.7 7.5 10.2 10.3c1.2 1.4 2.2 2.6 2.8 3.4c.3 .4 .6 .7 .7 .9l.2 .2 0 0zm160 0l0 0 0 0c2.1 2.8 5.7 3.9 8.9 2.8s5.5-4.1 5.5-7.6c0-17.9-6.7-35.6-16.6-48.8c-9.8-13-23.9-23.2-39.4-23.2s-29.6 10.2-39.4 23.2C286.7 188.4 280 206.1 280 224c0 3.4 2.2 6.5 5.5 7.6s6.9 0 8.9-2.8l0 0 0 0 0 0 .2-.2c.2-.2 .4-.5 .7-.9c.6-.8 1.6-2 2.8-3.4c2.5-2.8 6-6.6 10.2-10.3c8.8-7.8 18.8-14 27.7-14s18.9 6.2 27.7 14c4.2 3.7 7.7 7.5 10.2 10.3c1.2 1.4 2.2 2.6 2.8 3.4c.3 .4 .6 .7 .7 .9l.2 .2 0 0 0 0z\"]\n};\nvar faGrinBeamSweat = faFaceGrinBeamSweat;\nvar faMoon = {\n  prefix: 'far',\n  iconName: 'moon',\n  icon: [384, 512, [127769, 9214], \"f186\", \"M144.7 98.7c-21 34.1-33.1 74.3-33.1 117.3c0 98 62.8 181.4 150.4 211.7c-12.4 2.8-25.3 4.3-38.6 4.3C126.6 432 48 353.3 48 256c0-68.9 39.4-128.4 96.8-157.3zm62.1-66C91.1 41.2 0 137.9 0 256C0 379.7 100 480 223.5 480c47.8 0 92-15 128.4-40.6c1.9-1.3 3.7-2.7 5.5-4c4.8-3.6 9.4-7.4 13.9-11.4c2.7-2.4 5.3-4.8 7.9-7.3c5-4.9 6.3-12.5 3.1-18.7s-10.1-9.7-17-8.5c-3.7 .6-7.4 1.2-11.1 1.6c-5 .5-10.1 .9-15.3 1c-1.2 0-2.5 0-3.7 0c-.1 0-.2 0-.3 0c-96.8-.2-175.2-78.9-175.2-176c0-54.8 24.9-103.7 64.1-136c1-.9 2.1-1.7 3.2-2.6c4-3.2 8.2-6.2 12.5-9c3.1-2 6.3-4 9.6-5.8c6.1-3.5 9.2-10.5 7.7-17.3s-7.3-11.9-14.3-12.5c-3.6-.3-7.1-.5-10.7-.6c-2.7-.1-5.5-.1-8.2-.1c-3.3 0-6.5 .1-9.8 .2c-2.3 .1-4.6 .2-6.9 .4z\"]\n};\nvar faCalendar = {\n  prefix: 'far',\n  iconName: 'calendar',\n  icon: [448, 512, [128197, 128198], \"f133\", \"M152 24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H64C28.7 64 0 92.7 0 128v16 48V448c0 35.3 28.7 64 64 64H384c35.3 0 64-28.7 64-64V192 144 128c0-35.3-28.7-64-64-64H344V24c0-13.3-10.7-24-24-24s-24 10.7-24 24V64H152V24zM48 192H400V448c0 8.8-7.2 16-16 16H64c-8.8 0-16-7.2-16-16V192z\"]\n};\nvar faFaceGrinTongueWink = {\n  prefix: 'far',\n  iconName: 'face-grin-tongue-wink',\n  icon: [512, 512, [128540, \"grin-tongue-wink\"], \"f58b\", \"M348.3 442.4c2.4-8.4 3.7-17.3 3.7-26.4V363.5c8.8-8 16.6-17.1 23-27c10.4-16.1-6.8-32.5-25.5-28.1c-28.9 6.8-60.5 10.5-93.6 10.5s-64.7-3.7-93.6-10.5c-18.7-4.4-35.9 12-25.5 28.1c6.5 10 14.3 19.1 23.1 27.1V416c0 9.2 1.3 18 3.7 26.4C95.1 408.4 48 337.7 48 256C48 141.1 141.1 48 256 48s208 93.1 208 208c0 81.7-47.1 152.4-115.7 186.4zM256 512A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM159.6 220c10.6 0 19.9 3.8 25.4 9.7c7.6 8.1 20.2 8.5 28.3 .9s8.5-20.2 .9-28.3C199.7 186.8 179 180 159.6 180s-40.1 6.8-54.6 22.3c-7.6 8.1-7.1 20.7 .9 28.3s20.7 7.1 28.3-.9c5.5-5.8 14.8-9.7 25.4-9.7zm176.7 12a24 24 0 1 0 0-48 24 24 0 1 0 0 48zm-.4-72a48 48 0 1 1 0 96 48 48 0 1 1 0-96zm0 128a80 80 0 1 0 0-160 80 80 0 1 0 0 160zM320 416c0 35.3-28.7 64-64 64s-64-28.7-64-64V378.6c0-14.7 11.9-26.6 26.6-26.6h2c11.3 0 21.1 7.9 23.6 18.9c2.8 12.6 20.8 12.6 23.6 0c2.5-11.1 12.3-18.9 23.6-18.9h2c14.7 0 26.6 11.9 26.6 26.6V416z\"]\n};\nvar faGrinTongueWink = faFaceGrinTongueWink;\nvar faClone = {\n  prefix: 'far',\n  iconName: 'clone',\n  icon: [512, 512, [], \"f24d\", \"M64 464H288c8.8 0 16-7.2 16-16V384h48v64c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V224c0-35.3 28.7-64 64-64h64v48H64c-8.8 0-16 7.2-16 16V448c0 8.8 7.2 16 16 16zM224 304H448c8.8 0 16-7.2 16-16V64c0-8.8-7.2-16-16-16H224c-8.8 0-16 7.2-16 16V288c0 8.8 7.2 16 16 16zm-64-16V64c0-35.3 28.7-64 64-64H448c35.3 0 64 28.7 64 64V288c0 35.3-28.7 64-64 64H224c-35.3 0-64-28.7-64-64z\"]\n};\nvar faFaceAngry = {\n  prefix: 'far',\n  iconName: 'face-angry',\n  icon: [512, 512, [128544, \"angry\"], \"f556\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zm72.4-118.5c9.7-9 10.2-24.2 1.2-33.9C315.3 344.3 290.6 328 256 328s-59.3 16.3-73.5 31.6c-9 9.7-8.5 24.9 1.2 33.9s24.9 8.5 33.9-1.2c7.4-7.9 20-16.4 38.5-16.4s31.1 8.5 38.5 16.4c9 9.7 24.2 10.2 33.9 1.2zM176.4 272c17.7 0 32-14.3 32-32c0-1.5-.1-3-.3-4.4l10.9 3.6c8.4 2.8 17.4-1.7 20.2-10.1s-1.7-17.4-10.1-20.2l-96-32c-8.4-2.8-17.4 1.7-20.2 10.1s1.7 17.4 10.1 20.2l30.7 10.2c-5.8 5.8-9.3 13.8-9.3 22.6c0 17.7 14.3 32 32 32zm192-32c0-8.9-3.6-17-9.5-22.8l30.2-10.1c8.4-2.8 12.9-11.9 10.1-20.2s-11.9-12.9-20.2-10.1l-96 32c-8.4 2.8-12.9 11.9-10.1 20.2s11.9 12.9 20.2 10.1l11.7-3.9c-.2 1.5-.3 3.1-.3 4.7c0 17.7 14.3 32 32 32s32-14.3 32-32z\"]\n};\nvar faAngry = faFaceAngry;\nvar faRectangleXmark = {\n  prefix: 'far',\n  iconName: 'rectangle-xmark',\n  icon: [512, 512, [62164, \"rectangle-times\", \"times-rectangle\", \"window-close\"], \"f410\", \"M64 80c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H448c8.8 0 16-7.2 16-16V96c0-8.8-7.2-16-16-16H64zM0 96C0 60.7 28.7 32 64 32H448c35.3 0 64 28.7 64 64V416c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V96zm175 79c9.4-9.4 24.6-9.4 33.9 0l47 47 47-47c9.4-9.4 24.6-9.4 33.9 0s9.4 24.6 0 33.9l-47 47 47 47c9.4 9.4 9.4 24.6 0 33.9s-24.6 9.4-33.9 0l-47-47-47 47c-9.4 9.4-24.6 9.4-33.9 0s-9.4-24.6 0-33.9l47-47-47-47c-9.4-9.4-9.4-24.6 0-33.9z\"]\n};\nvar faRectangleTimes = faRectangleXmark;\nvar faTimesRectangle = faRectangleXmark;\nvar faWindowClose = faRectangleXmark;\nvar faPaperPlane = {\n  prefix: 'far',\n  iconName: 'paper-plane',\n  icon: [512, 512, [61913], \"f1d8\", \"M16.1 260.2c-22.6 12.9-20.5 47.3 3.6 57.3L160 376V479.3c0 18.1 14.6 32.7 32.7 32.7c9.7 0 18.9-4.3 25.1-11.8l62-74.3 123.9 51.6c18.9 7.9 40.8-4.5 43.9-24.7l64-416c1.9-12.1-3.4-24.3-13.5-31.2s-23.3-7.5-34-1.4l-448 256zm52.1 25.5L409.7 90.6 190.1 336l1.2 1L68.2 285.7zM403.3 425.4L236.7 355.9 450.8 116.6 403.3 425.4z\"]\n};\nvar faLifeRing = {\n  prefix: 'far',\n  iconName: 'life-ring',\n  icon: [512, 512, [], \"f1cd\", \"M385.1 419.1C349.7 447.2 304.8 464 256 464s-93.7-16.8-129.1-44.9l80.4-80.4c14.3 8.4 31 13.3 48.8 13.3s34.5-4.8 48.8-13.3l80.4 80.4zm68.1 .2C489.9 374.9 512 318.1 512 256s-22.1-118.9-58.8-163.3L465 81c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0L419.3 58.8C374.9 22.1 318.1 0 256 0S137.1 22.1 92.7 58.8L81 47c-9.4-9.4-24.6-9.4-33.9 0s-9.4 24.6 0 33.9L58.8 92.7C22.1 137.1 0 193.9 0 256s22.1 118.9 58.8 163.3L47 431c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l11.8-11.8C137.1 489.9 193.9 512 256 512s118.9-22.1 163.3-58.8L431 465c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-11.8-11.8zm-34.1-34.1l-80.4-80.4c8.4-14.3 13.3-31 13.3-48.8s-4.8-34.5-13.3-48.8l80.4-80.4C447.2 162.3 464 207.2 464 256s-16.8 93.7-44.9 129.1zM385.1 92.9l-80.4 80.4c-14.3-8.4-31-13.3-48.8-13.3s-34.5 4.8-48.8 13.3L126.9 92.9C162.3 64.8 207.2 48 256 48s93.7 16.8 129.1 44.9zM173.3 304.8L92.9 385.1C64.8 349.7 48 304.8 48 256s16.8-93.7 44.9-129.1l80.4 80.4c-8.4 14.3-13.3 31-13.3 48.8s4.8 34.5 13.3 48.8zM208 256a48 48 0 1 1 96 0 48 48 0 1 1 -96 0z\"]\n};\nvar faFaceGrimace = {\n  prefix: 'far',\n  iconName: 'face-grimace',\n  icon: [512, 512, [128556, \"grimace\"], \"f57f\", \"M256 48a208 208 0 1 0 0 416 208 208 0 1 0 0-416zM512 256A256 256 0 1 1 0 256a256 256 0 1 1 512 0zM168 320c-13.3 0-24 10.7-24 24s10.7 24 24 24h8V320h-8zm40 48h32V320H208v48zm96 0V320H272v48h32zm32 0h8c13.3 0 24-10.7 24-24s-10.7-24-24-24h-8v48zM168 288H344c30.9 0 56 25.1 56 56s-25.1 56-56 56H168c-30.9 0-56-25.1-56-56s25.1-56 56-56zm-23.6-80a32 32 0 1 1 64 0 32 32 0 1 1 -64 0zm192-32a32 32 0 1 1 0 64 32 32 0 1 1 0-64z\"]\n};\nvar faGrimace = faFaceGrimace;\nvar faCalendarMinus = {\n  prefix: 'far',\n  iconName: 'calendar-minus',\n  icon: [448, 512, [], \"f272\", \"M128 0c13.3 0 24 10.7 24 24V64H296V24c0-13.3 10.7-24 24-24s24 10.7 24 24V64h40c35.3 0 64 28.7 64 64v16 48V448c0 35.3-28.7 64-64 64H64c-35.3 0-64-28.7-64-64V192 144 128C0 92.7 28.7 64 64 64h40V24c0-13.3 10.7-24 24-24zM400 192H48V448c0 8.8 7.2 16 16 16H384c8.8 0 16-7.2 16-16V192zM296 352H152c-13.3 0-24-10.7-24-24s10.7-24 24-24H296c13.3 0 24 10.7 24 24s-10.7 24-24 24z\"]\n};\nvar faCircleXmark = {\n  prefix: 'far',\n  iconName: 'circle-xmark',\n  icon: [512, 512, [61532, \"times-circle\", \"xmark-circle\"], \"f057\", \"M256 48a208 208 0 1 1 0 416 208 208 0 1 1 0-416zm0 464A256 256 0 1 0 256 0a256 256 0 1 0 0 512zM175 175c-9.4 9.4-9.4 24.6 0 33.9l47 47-47 47c-9.4 9.4-9.4 24.6 0 33.9s24.6 9.4 33.9 0l47-47 47 47c9.4 9.4 24.6 9.4 33.9 0s9.4-24.6 0-33.9l-47-47 47-47c9.4-9.4 9.4-24.6 0-33.9s-24.6-9.4-33.9 0l-47 47-47-47c-9.4-9.4-24.6-9.4-33.9 0z\"]\n};\nvar faTimesCircle = faCircleXmark;\nvar faXmarkCircle = faCircleXmark;\nvar faThumbsUp = {\n  prefix: 'far',\n  iconName: 'thumbs-up',\n  icon: [512, 512, [128077, 61575], \"f164\", \"M323.8 34.8c-38.2-10.9-78.1 11.2-89 49.4l-5.7 20c-3.7 13-10.4 25-19.5 35l-51.3 56.4c-8.9 9.8-8.2 25 1.6 33.9s25 8.2 33.9-1.6l51.3-56.4c14.1-15.5 24.4-34 30.1-54.1l5.7-20c3.6-12.7 16.9-20.1 29.7-16.5s20.1 16.9 16.5 29.7l-5.7 20c-5.7 19.9-14.7 38.7-26.6 55.5c-5.2 7.3-5.8 16.9-1.7 24.9s12.3 13 21.3 13L448 224c8.8 0 16 7.2 16 16c0 6.8-4.3 12.7-10.4 15c-7.4 2.8-13 9-14.9 16.7s.1 15.8 5.3 21.7c2.5 2.8 4 6.5 4 10.6c0 7.8-5.6 14.3-13 15.7c-8.2 1.6-15.1 7.3-18 15.2s-1.6 16.7 3.6 23.3c2.1 2.7 3.4 6.1 3.4 9.9c0 6.7-4.2 12.6-10.2 14.9c-11.5 4.5-17.7 16.9-14.4 28.8c.4 1.3 .6 2.8 .6 4.3c0 8.8-7.2 16-16 16H286.5c-12.6 0-25-3.7-35.5-10.7l-61.7-41.1c-11-7.4-25.9-4.4-33.3 6.7s-4.4 25.9 6.7 33.3l61.7 41.1c18.4 12.3 40 18.8 62.1 18.8H384c34.7 0 62.9-27.6 64-62c14.6-11.7 24-29.7 24-50c0-4.5-.5-8.8-1.3-13c15.4-11.7 25.3-30.2 25.3-51c0-6.5-1-12.8-2.8-18.7C504.8 273.7 512 257.7 512 240c0-35.3-28.6-64-64-64l-92.3 0c4.7-10.4 8.7-21.2 11.8-32.2l5.7-20c10.9-38.2-11.2-78.1-49.4-89zM32 192c-17.7 0-32 14.3-32 32V448c0 17.7 14.3 32 32 32H96c17.7 0 32-14.3 32-32V224c0-17.7-14.3-32-32-32H32z\"]\n};\nvar faWindowMinimize = {\n  prefix: 'far',\n  iconName: 'window-minimize',\n  icon: [512, 512, [128469], \"f2d1\", \"M24 432c-13.3 0-24 10.7-24 24s10.7 24 24 24H488c13.3 0 24-10.7 24-24s-10.7-24-24-24H24z\"]\n};\nvar faSquareFull = {\n  prefix: 'far',\n  iconName: 'square-full',\n  icon: [512, 512, [128997, 128998, 128999, 129000, 129001, 129002, 129003, 11035, 11036], \"f45c\", \"M464 48V464H48V48H464zM48 0H0V48 464v48H48 464h48V464 48 0H464 48z\"]\n};\nvar faNoteSticky = {\n  prefix: 'far',\n  iconName: 'note-sticky',\n  icon: [448, 512, [62026, \"sticky-note\"], \"f249\", \"M64 80c-8.8 0-16 7.2-16 16V416c0 8.8 7.2 16 16 16H288V352c0-17.7 14.3-32 32-32h80V96c0-8.8-7.2-16-16-16H64zM288 480H64c-35.3 0-64-28.7-64-64V96C0 60.7 28.7 32 64 32H384c35.3 0 64 28.7 64 64V320v5.5c0 17-6.7 33.3-18.7 45.3l-90.5 90.5c-12 12-28.3 18.7-45.3 18.7H288z\"]\n};\nvar faStickyNote = faNoteSticky;\nvar faFaceSadTear = {\n  prefix: 'far',\n  iconName: 'face-sad-tear',\n  icon: [512, 512, [128546, \"sad-tear\"], \"f5b4\", \"M175.9 448c-35-.1-65.5-22.6-76-54.6C67.6 356.8 48 308.7 48 256C48 141.1 141.1 48 256 48s208 93.1 208 208s-93.1 208-208 208c-28.4 0-55.5-5.7-80.1-16zM0 256a256 256 0 1 0 512 0A256 256 0 1 0 0 256zM128 369c0 26 21.5 47 48 47s48-21 48-47c0-20-28.4-60.4-41.6-77.7c-3.2-4.4-9.6-4.4-12.8 0C156.6 308.6 128 349 128 369zm128-65c-13.3 0-24 10.7-24 24s10.7 24 24 24c30.7 0 58.7 11.5 80 30.6c9.9 8.8 25 8 33.9-1.9s8-25-1.9-33.9C338.3 320.2 299 304 256 304zm47.6-96a32 32 0 1 0 64 0 32 32 0 1 0 -64 0zm-128 32a32 32 0 1 0 0-64 32 32 0 1 0 0 64z\"]\n};\nvar faSadTear = faFaceSadTear;\nvar faHandPointLeft = {\n  prefix: 'far',\n  iconName: 'hand-point-left',\n  icon: [512, 512, [], \"f0a5\", \"M64 128l177.6 0c-1 5.2-1.6 10.5-1.6 16l0 16-32 0L64 160c-8.8 0-16-7.2-16-16s7.2-16 16-16zm224 16c0-17.7 14.3-32 32-32c0 0 0 0 0 0l24 0c66.3 0 120 53.7 120 120l0 48c0 52.5-33.7 97.1-80.7 113.4c.5-3.1 .7-6.2 .7-9.4c0-20-9.2-37.9-23.6-49.7c4.9-9 7.6-19.4 7.6-30.3c0-15.1-5.3-29-14-40c8.8-11 14-24.9 14-40l0-40c0-13.3-10.7-24-24-24s-24 10.7-24 24l0 40c0 8.8-7.2 16-16 16s-16-7.2-16-16l0-40 0-40zm32-80s0 0 0 0c-18 0-34.6 6-48 16L64 80C28.7 80 0 108.7 0 144s28.7 64 64 64l82 0c-1.3 5.1-2 10.5-2 16c0 25.3 14.7 47.2 36 57.6c-2.6 7-4 14.5-4 22.4c0 20 9.2 37.9 23.6 49.7c-4.9 9-7.6 19.4-7.6 30.3c0 35.3 28.7 64 64 64l64 0 24 0c92.8 0 168-75.2 168-168l0-48c0-92.8-75.2-168-168-168l-24 0zM256 400c-8.8 0-16-7.2-16-16s7.2-16 16-16l48 0 16 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-64 0zM240 224c0 5.5 .7 10.9 2 16l-2 0-32 0c-8.8 0-16-7.2-16-16s7.2-16 16-16l32 0 0 16zm24 64l40 0c8.8 0 16 7.2 16 16s-7.2 16-16 16l-48 0-16 0c-8.8 0-16-7.2-16-16s7.2-16 16-16l24 0z\"]\n};\nvar icons = {\n  faTrashCan: faTrashCan,\n  faTrashAlt: faTrashAlt,\n  faMessage: faMessage,\n  faCommentAlt: faCommentAlt,\n  faFileLines: faFileLines,\n  faFileAlt: faFileAlt,\n  faFileText: faFileText,\n  faCalendarDays: faCalendarDays,\n  faCalendarAlt: faCalendarAlt,\n  faHandPointRight: faHandPointRight,\n  faFaceSmileBeam: faFaceSmileBeam,\n  faSmileBeam: faSmileBeam,\n  faFaceGrinStars: faFaceGrinStars,\n  faGrinStars: faGrinStars,\n  faAddressBook: faAddressBook,\n  faContactBook: faContactBook,\n  faComments: faComments,\n  faPaste: faPaste,\n  faFileClipboard: faFileClipboard,\n  faFaceGrinTongueSquint: faFaceGrinTongueSquint,\n  faGrinTongueSquint: faGrinTongueSquint,\n  faFaceFlushed: faFaceFlushed,\n  faFlushed: faFlushed,\n  faSquareCaretRight: faSquareCaretRight,\n  faCaretSquareRight: faCaretSquareRight,\n  faSquareMinus: faSquareMinus,\n  faMinusSquare: faMinusSquare,\n  faCompass: faCompass,\n  faSquareCaretDown: faSquareCaretDown,\n  faCaretSquareDown: faCaretSquareDown,\n  faFaceKissBeam: faFaceKissBeam,\n  faKissBeam: faKissBeam,\n  faLightbulb: faLightbulb,\n  faFlag: faFlag,\n  faSquareCheck: faSquareCheck,\n  faCheckSquare: faCheckSquare,\n  faCircleDot: faCircleDot,\n  faDotCircle: faDotCircle,\n  faFaceDizzy: faFaceDizzy,\n  faDizzy: faDizzy,\n  faFutbol: faFutbol,\n  faFutbolBall: faFutbolBall,\n  faSoccerBall: faSoccerBall,\n  faPenToSquare: faPenToSquare,\n  faEdit: faEdit,\n  faHourglassHalf: faHourglassHalf,\n  faHourglass2: faHourglass2,\n  faEyeSlash: faEyeSlash,\n  faHand: faHand,\n  faHandPaper: faHandPaper,\n  faHandSpock: faHandSpock,\n  faFaceKiss: faFaceKiss,\n  faKiss: faKiss,\n  faFaceGrinTongue: faFaceGrinTongue,\n  faGrinTongue: faGrinTongue,\n  faChessBishop: faChessBishop,\n  faFaceGrinWink: faFaceGrinWink,\n  faGrinWink: faGrinWink,\n  faFaceGrinWide: faFaceGrinWide,\n  faGrinAlt: faGrinAlt,\n  faFaceFrownOpen: faFaceFrownOpen,\n  faFrownOpen: faFrownOpen,\n  faHandPointUp: faHandPointUp,\n  faBookmark: faBookmark,\n  faHandPointDown: faHandPointDown,\n  faFolder: faFolder,\n  faFolderBlank: faFolderBlank,\n  faUser: faUser,\n  faSquareCaretLeft: faSquareCaretLeft,\n  faCaretSquareLeft: faCaretSquareLeft,\n  faStar: faStar,\n  faChessKnight: faChessKnight,\n  faFaceLaughSquint: faFaceLaughSquint,\n  faLaughSquint: faLaughSquint,\n  faFaceLaugh: faFaceLaugh,\n  faLaugh: faLaugh,\n  faFolderOpen: faFolderOpen,\n  faClipboard: faClipboard,\n  faChessQueen: faChessQueen,\n  faHandBackFist: faHandBackFist,\n  faHandRock: faHandRock,\n  faSquareCaretUp: faSquareCaretUp,\n  faCaretSquareUp: faCaretSquareUp,\n  faChartBar: faChartBar,\n  faBarChart: faBarChart,\n  faWindowRestore: faWindowRestore,\n  faSquarePlus: faSquarePlus,\n  faPlusSquare: faPlusSquare,\n  faImage: faImage,\n  faFolderClosed: faFolderClosed,\n  faLemon: faLemon,\n  faHandshake: faHandshake,\n  faGem: faGem,\n  faCirclePlay: faCirclePlay,\n  faPlayCircle: faPlayCircle,\n  faCircleCheck: faCircleCheck,\n  faCheckCircle: faCheckCircle,\n  faCircleStop: faCircleStop,\n  faStopCircle: faStopCircle,\n  faIdBadge: faIdBadge,\n  faFaceLaughBeam: faFaceLaughBeam,\n  faLaughBeam: faLaughBeam,\n  faRegistered: faRegistered,\n  faAddressCard: faAddressCard,\n  faContactCard: faContactCard,\n  faVcard: faVcard,\n  faFaceTired: faFaceTired,\n  faTired: faTired,\n  faFontAwesome: faFontAwesome,\n  faFontAwesomeFlag: faFontAwesomeFlag,\n  faFontAwesomeLogoFull: faFontAwesomeLogoFull,\n  faFaceSmileWink: faFaceSmileWink,\n  faSmileWink: faSmileWink,\n  faFileWord: faFileWord,\n  faFilePowerpoint: faFilePowerpoint,\n  faEnvelopeOpen: faEnvelopeOpen,\n  faFileZipper: faFileZipper,\n  faFileArchive: faFileArchive,\n  faSquare: faSquare,\n  faSnowflake: faSnowflake,\n  faNewspaper: faNewspaper,\n  faFaceKissWinkHeart: faFaceKissWinkHeart,\n  faKissWinkHeart: faKissWinkHeart,\n  faStarHalfStroke: faStarHalfStroke,\n  faStarHalfAlt: faStarHalfAlt,\n  faFileExcel: faFileExcel,\n  faFaceGrinBeam: faFaceGrinBeam,\n  faGrinBeam: faGrinBeam,\n  faObjectUngroup: faObjectUngroup,\n  faCircleRight: faCircleRight,\n  faArrowAltCircleRight: faArrowAltCircleRight,\n  faFaceRollingEyes: faFaceRollingEyes,\n  faMehRollingEyes: faMehRollingEyes,\n  faObjectGroup: faObjectGroup,\n  faHeart: faHeart,\n  faFaceSurprise: faFaceSurprise,\n  faSurprise: faSurprise,\n  faCirclePause: faCirclePause,\n  faPauseCircle: faPauseCircle,\n  faCircle: faCircle,\n  faCircleUp: faCircleUp,\n  faArrowAltCircleUp: faArrowAltCircleUp,\n  faFileAudio: faFileAudio,\n  faFileImage: faFileImage,\n  faCircleQuestion: faCircleQuestion,\n  faQuestionCircle: faQuestionCircle,\n  faFaceMehBlank: faFaceMehBlank,\n  faMehBlank: faMehBlank,\n  faEye: faEye,\n  faFaceSadCry: faFaceSadCry,\n  faSadCry: faSadCry,\n  faFileCode: faFileCode,\n  faWindowMaximize: faWindowMaximize,\n  faFaceFrown: faFaceFrown,\n  faFrown: faFrown,\n  faFloppyDisk: faFloppyDisk,\n  faSave: faSave,\n  faCommentDots: faCommentDots,\n  faCommenting: faCommenting,\n  faFaceGrinSquint: faFaceGrinSquint,\n  faGrinSquint: faGrinSquint,\n  faHandPointer: faHandPointer,\n  faHandScissors: faHandScissors,\n  faFaceGrinTears: faFaceGrinTears,\n  faGrinTears: faGrinTears,\n  faCalendarXmark: faCalendarXmark,\n  faCalendarTimes: faCalendarTimes,\n  faFileVideo: faFileVideo,\n  faFilePdf: faFilePdf,\n  faComment: faComment,\n  faEnvelope: faEnvelope,\n  faHourglass: faHourglass,\n  faHourglassEmpty: faHourglassEmpty,\n  faCalendarCheck: faCalendarCheck,\n  faHardDrive: faHardDrive,\n  faHdd: faHdd,\n  faFaceGrinSquintTears: faFaceGrinSquintTears,\n  faGrinSquintTears: faGrinSquintTears,\n  faRectangleList: faRectangleList,\n  faListAlt: faListAlt,\n  faCalendarPlus: faCalendarPlus,\n  faCircleLeft: faCircleLeft,\n  faArrowAltCircleLeft: faArrowAltCircleLeft,\n  faMoneyBill1: faMoneyBill1,\n  faMoneyBillAlt: faMoneyBillAlt,\n  faClock: faClock,\n  faClockFour: faClockFour,\n  faKeyboard: faKeyboard,\n  faClosedCaptioning: faClosedCaptioning,\n  faImages: faImages,\n  faFaceGrin: faFaceGrin,\n  faGrin: faGrin,\n  faFaceMeh: faFaceMeh,\n  faMeh: faMeh,\n  faIdCard: faIdCard,\n  faDriversLicense: faDriversLicense,\n  faSun: faSun,\n  faFaceLaughWink: faFaceLaughWink,\n  faLaughWink: faLaughWink,\n  faCircleDown: faCircleDown,\n  faArrowAltCircleDown: faArrowAltCircleDown,\n  faThumbsDown: faThumbsDown,\n  faChessPawn: faChessPawn,\n  faCreditCard: faCreditCard,\n  faCreditCardAlt: faCreditCardAlt,\n  faBell: faBell,\n  faFile: faFile,\n  faHospital: faHospital,\n  faHospitalAlt: faHospitalAlt,\n  faHospitalWide: faHospitalWide,\n  faChessRook: faChessRook,\n  faStarHalf: faStarHalf,\n  faChessKing: faChessKing,\n  faCircleUser: faCircleUser,\n  faUserCircle: faUserCircle,\n  faCopy: faCopy,\n  faShareFromSquare: faShareFromSquare,\n  faShareSquare: faShareSquare,\n  faCopyright: faCopyright,\n  faMap: faMap,\n  faBellSlash: faBellSlash,\n  faHandLizard: faHandLizard,\n  faFaceSmile: faFaceSmile,\n  faSmile: faSmile,\n  faHandPeace: faHandPeace,\n  faFaceGrinHearts: faFaceGrinHearts,\n  faGrinHearts: faGrinHearts,\n  faBuilding: faBuilding,\n  faFaceGrinBeamSweat: faFaceGrinBeamSweat,\n  faGrinBeamSweat: faGrinBeamSweat,\n  faMoon: faMoon,\n  faCalendar: faCalendar,\n  faFaceGrinTongueWink: faFaceGrinTongueWink,\n  faGrinTongueWink: faGrinTongueWink,\n  faClone: faClone,\n  faFaceAngry: faFaceAngry,\n  faAngry: faAngry,\n  faRectangleXmark: faRectangleXmark,\n  faRectangleTimes: faRectangleTimes,\n  faTimesRectangle: faTimesRectangle,\n  faWindowClose: faWindowClose,\n  faPaperPlane: faPaperPlane,\n  faLifeRing: faLifeRing,\n  faFaceGrimace: faFaceGrimace,\n  faGrimace: faGrimace,\n  faCalendarMinus: faCalendarMinus,\n  faCircleXmark: faCircleXmark,\n  faTimesCircle: faTimesCircle,\n  faXmarkCircle: faXmarkCircle,\n  faThumbsUp: faThumbsUp,\n  faWindowMinimize: faWindowMinimize,\n  faSquareFull: faSquareFull,\n  faNoteSticky: faNoteSticky,\n  faStickyNote: faStickyNote,\n  faFaceSadTear: faFaceSadTear,\n  faSadTear: faSadTear,\n  faHandPointLeft: faHandPointLeft\n};\nexport { icons as far, prefix, faTrashCan, faTrashAlt, faMessage, faCommentAlt, faFileLines, faFileAlt, faFileText, faCalendarDays, faCalendarAlt, faHandPointRight, faFaceSmileBeam, faSmileBeam, faFaceGrinStars, faGrinStars, faAddressBook, faContactBook, faComments, faPaste, faFileClipboard, faFaceGrinTongueSquint, faGrinTongueSquint, faFaceFlushed, faFlushed, faSquareCaretRight, faCaretSquareRight, faSquareMinus, faMinusSquare, faCompass, faSquareCaretDown, faCaretSquareDown, faFaceKissBeam, faKissBeam, faLightbulb, faFlag, faSquareCheck, faCheckSquare, faCircleDot, faDotCircle, faFaceDizzy, faDizzy, faFutbol, faFutbolBall, faSoccerBall, faPenToSquare, faEdit, faHourglassHalf, faHourglass2, faEyeSlash, faHand, faHandPaper, faHandSpock, faFaceKiss, faKiss, faFaceGrinTongue, faGrinTongue, faChessBishop, faFaceGrinWink, faGrinWink, faFaceGrinWide, faGrinAlt, faFaceFrownOpen, faFrownOpen, faHandPointUp, faBookmark, faHandPointDown, faFolder, faFolderBlank, faUser, faSquareCaretLeft, faCaretSquareLeft, faStar, faChessKnight, faFaceLaughSquint, faLaughSquint, faFaceLaugh, faLaugh, faFolderOpen, faClipboard, faChessQueen, faHandBackFist, faHandRock, faSquareCaretUp, faCaretSquareUp, faChartBar, faBarChart, faWindowRestore, faSquarePlus, faPlusSquare, faImage, faFolderClosed, faLemon, faHandshake, faGem, faCirclePlay, faPlayCircle, faCircleCheck, faCheckCircle, faCircleStop, faStopCircle, faIdBadge, faFaceLaughBeam, faLaughBeam, faRegistered, faAddressCard, faContactCard, faVcard, faFaceTired, faTired, faFontAwesome, faFontAwesomeFlag, faFontAwesomeLogoFull, faFaceSmileWink, faSmileWink, faFileWord, faFilePowerpoint, faEnvelopeOpen, faFileZipper, faFileArchive, faSquare, faSnowflake, faNewspaper, faFaceKissWinkHeart, faKissWinkHeart, faStarHalfStroke, faStarHalfAlt, faFileExcel, faFaceGrinBeam, faGrinBeam, faObjectUngroup, faCircleRight, faArrowAltCircleRight, faFaceRollingEyes, faMehRollingEyes, faObjectGroup, faHeart, faFaceSurprise, faSurprise, faCirclePause, faPauseCircle, faCircle, faCircleUp, faArrowAltCircleUp, faFileAudio, faFileImage, faCircleQuestion, faQuestionCircle, faFaceMehBlank, faMehBlank, faEye, faFaceSadCry, faSadCry, faFileCode, faWindowMaximize, faFaceFrown, faFrown, faFloppyDisk, faSave, faCommentDots, faCommenting, faFaceGrinSquint, faGrinSquint, faHandPointer, faHandScissors, faFaceGrinTears, faGrinTears, faCalendarXmark, faCalendarTimes, faFileVideo, faFilePdf, faComment, faEnvelope, faHourglass, faHourglassEmpty, faCalendarCheck, faHardDrive, faHdd, faFaceGrinSquintTears, faGrinSquintTears, faRectangleList, faListAlt, faCalendarPlus, faCircleLeft, faArrowAltCircleLeft, faMoneyBill1, faMoneyBillAlt, faClock, faClockFour, faKeyboard, faClosedCaptioning, faImages, faFaceGrin, faGrin, faFaceMeh, faMeh, faIdCard, faDriversLicense, faSun, faFaceLaughWink, faLaughWink, faCircleDown, faArrowAltCircleDown, faThumbsDown, faChessPawn, faCreditCard, faCreditCardAlt, faBell, faFile, faHospital, faHospitalAlt, faHospitalWide, faChessRook, faStarHalf, faChessKing, faCircleUser, faUserCircle, faCopy, faShareFromSquare, faShareSquare, faCopyright, faMap, faBellSlash, faHandLizard, faFaceSmile, faSmile, faHandPeace, faFaceGrinHearts, faGrinHearts, faBuilding, faFaceGrinBeamSweat, faGrinBeamSweat, faMoon, faCalendar, faFaceGrinTongueWink, faGrinTongueWink, faClone, faFaceAngry, faAngry, faRectangleXmark, faRectangleTimes, faTimesRectangle, faWindowClose, faPaperPlane, faLifeRing, faFaceGrimace, faGrimace, faCalendarMinus, faCircleXmark, faTimesCircle, faXmarkCircle, faThumbsUp, faWindowMinimize, faSquareFull, faNoteSticky, faStickyNote, faFaceSadTear, faSadTear, faHandPointLeft };","/**\n * @license Angular v17.2.2\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport * as i0 from '@angular/core';\nimport { Directive, InjectionToken, forwardRef, Optional, Inject, ɵisPromise, ɵisSubscribable, ɵRuntimeError, Self, EventEmitter, Input, Host, SkipSelf, booleanAttribute, ChangeDetectorRef, Output, Injectable, inject, NgModule, Version } from '@angular/core';\nimport { ɵgetDOM } from '@angular/common';\nimport { from, forkJoin } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * Base class for all ControlValueAccessor classes defined in Forms package.\n * Contains common logic and utility functions.\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BaseControlValueAccessor = /*#__PURE__*/(() => {\n  class BaseControlValueAccessor {\n    constructor(_renderer, _elementRef) {\n      this._renderer = _renderer;\n      this._elementRef = _elementRef;\n      /**\n       * The registered callback function called when a change or input event occurs on the input\n       * element.\n       * @nodoc\n       */\n      this.onChange = _ => {};\n      /**\n       * The registered callback function called when a blur event occurs on the input element.\n       * @nodoc\n       */\n      this.onTouched = () => {};\n    }\n    /**\n     * Helper method that sets a property on a target element using the current Renderer\n     * implementation.\n     * @nodoc\n     */\n    setProperty(key, value) {\n      this._renderer.setProperty(this._elementRef.nativeElement, key, value);\n    }\n    /**\n     * Registers a function called when the control is touched.\n     * @nodoc\n     */\n    registerOnTouched(fn) {\n      this.onTouched = fn;\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = fn;\n    }\n    /**\n     * Sets the \"disabled\" property on the range input element.\n     * @nodoc\n     */\n    setDisabledState(isDisabled) {\n      this.setProperty('disabled', isDisabled);\n    }\n    static {\n      this.ɵfac = function BaseControlValueAccessor_Factory(t) {\n        return new (t || BaseControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: BaseControlValueAccessor\n      });\n    }\n  }\n  return BaseControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Base class for all built-in ControlValueAccessor classes (except DefaultValueAccessor, which is\n * used in case no other CVAs can be found). We use this class to distinguish between default CVA,\n * built-in CVAs and custom CVAs, so that Forms logic can recognize built-in CVAs and treat custom\n * ones with higher priority (when both built-in and custom CVAs are present).\n *\n * Note: this is an *internal-only* class and should not be extended or used directly in\n * applications code.\n */\nlet BuiltInControlValueAccessor = /*#__PURE__*/(() => {\n  class BuiltInControlValueAccessor extends BaseControlValueAccessor {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵBuiltInControlValueAccessor_BaseFactory;\n        return function BuiltInControlValueAccessor_Factory(t) {\n          return (ɵBuiltInControlValueAccessor_BaseFactory || (ɵBuiltInControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(BuiltInControlValueAccessor)))(t || BuiltInControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: BuiltInControlValueAccessor,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return BuiltInControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Used to provide a `ControlValueAccessor` for form controls.\n *\n * See `DefaultValueAccessor` for how to implement one.\n *\n * @publicApi\n */\nconst NG_VALUE_ACCESSOR = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgValueAccessor' : '');\nconst CHECKBOX_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxControlValueAccessor),\n  multi: true\n};\n/**\n * @description\n * A `ControlValueAccessor` for writing a value and listening to changes on a checkbox input\n * element.\n *\n * @usageNotes\n *\n * ### Using a checkbox with a reactive form.\n *\n * The following example shows how to use a checkbox with a reactive form.\n *\n * ```ts\n * const rememberLoginControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"checkbox\" [formControl]=\"rememberLoginControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet CheckboxControlValueAccessor = /*#__PURE__*/(() => {\n  class CheckboxControlValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"checked\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('checked', value);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵCheckboxControlValueAccessor_BaseFactory;\n        return function CheckboxControlValueAccessor_Factory(t) {\n          return (ɵCheckboxControlValueAccessor_BaseFactory || (ɵCheckboxControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxControlValueAccessor)))(t || CheckboxControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CheckboxControlValueAccessor,\n        selectors: [[\"input\", \"type\", \"checkbox\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"ngModel\", \"\"]],\n        hostBindings: function CheckboxControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function CheckboxControlValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target.checked);\n            })(\"blur\", function CheckboxControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([CHECKBOX_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CheckboxControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst DEFAULT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => DefaultValueAccessor),\n  multi: true\n};\n/**\n * We must check whether the agent is Android because composition events\n * behave differently between iOS and Android.\n */\nfunction _isAndroid() {\n  const userAgent = ɵgetDOM() ? ɵgetDOM().getUserAgent() : '';\n  return /android (\\d+)/.test(userAgent.toLowerCase());\n}\n/**\n * @description\n * Provide this token to control if form directives buffer IME input until\n * the \"compositionend\" event occurs.\n * @publicApi\n */\nconst COMPOSITION_BUFFER_MODE = /*#__PURE__*/new InjectionToken(ngDevMode ? 'CompositionEventMode' : '');\n/**\n * The default `ControlValueAccessor` for writing a value and listening to changes on input\n * elements. The accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * {@searchKeywords ngDefaultControl}\n *\n * @usageNotes\n *\n * ### Using the default value accessor\n *\n * The following example shows how to use an input element that activates the default value accessor\n * (in this case, a text field).\n *\n * ```ts\n * const firstNameControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"text\" [formControl]=\"firstNameControl\">\n * ```\n *\n * This value accessor is used by default for `<input type=\"text\">` and `<textarea>` elements, but\n * you could also use it for custom components that have similar behavior and do not require special\n * processing. In order to attach the default value accessor to a custom element, add the\n * `ngDefaultControl` attribute as shown below.\n *\n * ```\n * <custom-input-component ngDefaultControl [(ngModel)]=\"value\"></custom-input-component>\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet DefaultValueAccessor = /*#__PURE__*/(() => {\n  class DefaultValueAccessor extends BaseControlValueAccessor {\n    constructor(renderer, elementRef, _compositionMode) {\n      super(renderer, elementRef);\n      this._compositionMode = _compositionMode;\n      /** Whether the user is creating a composition string (IME events). */\n      this._composing = false;\n      if (this._compositionMode == null) {\n        this._compositionMode = !_isAndroid();\n      }\n    }\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /** @internal */\n    _handleInput(value) {\n      if (!this._compositionMode || this._compositionMode && !this._composing) {\n        this.onChange(value);\n      }\n    }\n    /** @internal */\n    _compositionStart() {\n      this._composing = true;\n    }\n    /** @internal */\n    _compositionEnd(value) {\n      this._composing = false;\n      this._compositionMode && this.onChange(value);\n    }\n    static {\n      this.ɵfac = function DefaultValueAccessor_Factory(t) {\n        return new (t || DefaultValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(COMPOSITION_BUFFER_MODE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: DefaultValueAccessor,\n        selectors: [[\"input\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControlName\", \"\"], [\"input\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"formControl\", \"\"], [\"input\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"], [\"textarea\", \"ngModel\", \"\"], [\"\", \"ngDefaultControl\", \"\"]],\n        hostBindings: function DefaultValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function DefaultValueAccessor_input_HostBindingHandler($event) {\n              return ctx._handleInput($event.target.value);\n            })(\"blur\", function DefaultValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            })(\"compositionstart\", function DefaultValueAccessor_compositionstart_HostBindingHandler() {\n              return ctx._compositionStart();\n            })(\"compositionend\", function DefaultValueAccessor_compositionend_HostBindingHandler($event) {\n              return ctx._compositionEnd($event.target.value);\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([DEFAULT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return DefaultValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction isEmptyInputValue(value) {\n  /**\n   * Check if the object is a string or array before evaluating the length attribute.\n   * This avoids falsely rejecting objects that contain a custom length attribute.\n   * For example, the object {id: 1, length: 0, width: 0} should not be returned as empty.\n   */\n  return value == null || (typeof value === 'string' || Array.isArray(value)) && value.length === 0;\n}\nfunction hasValidLength(value) {\n  // non-strict comparison is intentional, to check for both `null` and `undefined` values\n  return value != null && typeof value.length === 'number';\n}\n/**\n * @description\n * An `InjectionToken` for registering additional synchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_ASYNC_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Providing a custom validator\n *\n * The following example registers a custom validator directive. Adding the validator to the\n * existing collection of validators requires the `multi: true` option.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customValidator]',\n *   providers: [{provide: NG_VALIDATORS, useExisting: CustomValidatorDirective, multi: true}]\n * })\n * class CustomValidatorDirective implements Validator {\n *   validate(control: AbstractControl): ValidationErrors | null {\n *     return { 'custom': true };\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_VALIDATORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgValidators' : '');\n/**\n * @description\n * An `InjectionToken` for registering additional asynchronous validators used with\n * `AbstractControl`s.\n *\n * @see {@link NG_VALIDATORS}\n *\n * @usageNotes\n *\n * ### Provide a custom async validator directive\n *\n * The following example implements the `AsyncValidator` interface to create an\n * async validator directive with a custom error key.\n *\n * ```typescript\n * @Directive({\n *   selector: '[customAsyncValidator]',\n *   providers: [{provide: NG_ASYNC_VALIDATORS, useExisting: CustomAsyncValidatorDirective, multi:\n * true}]\n * })\n * class CustomAsyncValidatorDirective implements AsyncValidator {\n *   validate(control: AbstractControl): Promise<ValidationErrors|null> {\n *     return Promise.resolve({'custom': true});\n *   }\n * }\n * ```\n *\n * @publicApi\n */\nconst NG_ASYNC_VALIDATORS = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgAsyncValidators' : '');\n/**\n * A regular expression that matches valid e-mail addresses.\n *\n * At a high level, this regexp matches e-mail addresses of the format `local-part@tld`, where:\n * - `local-part` consists of one or more of the allowed characters (alphanumeric and some\n *   punctuation symbols).\n * - `local-part` cannot begin or end with a period (`.`).\n * - `local-part` cannot be longer than 64 characters.\n * - `tld` consists of one or more `labels` separated by periods (`.`). For example `localhost` or\n *   `foo.com`.\n * - A `label` consists of one or more of the allowed characters (alphanumeric, dashes (`-`) and\n *   periods (`.`)).\n * - A `label` cannot begin or end with a dash (`-`) or a period (`.`).\n * - A `label` cannot be longer than 63 characters.\n * - The whole address cannot be longer than 254 characters.\n *\n * ## Implementation background\n *\n * This regexp was ported over from AngularJS (see there for git history):\n * https://github.com/angular/angular.js/blob/c133ef836/src/ng/directive/input.js#L27\n * It is based on the\n * [WHATWG version](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n * lengths of different parts of the address). The main differences from the WHATWG version are:\n *   - Disallow `local-part` to begin or end with a period (`.`).\n *   - Disallow `local-part` length to exceed 64 characters.\n *   - Disallow total address length to exceed 254 characters.\n *\n * See [this commit](https://github.com/angular/angular.js/commit/f3f5cf72e) for more details.\n */\nconst EMAIL_REGEXP = /^(?=.{1,254}$)(?=.{1,64}@)[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-zA-Z0-9!#$%&'*+/=?^_`{|}~-]+)*@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*$/;\n/**\n * @description\n * Provides a set of built-in validators that can be used by form controls.\n *\n * A validator is a function that processes a `FormControl` or collection of\n * controls and returns an error map or null. A null map means that validation has passed.\n *\n * @see [Form Validation](/guide/form-validation)\n *\n * @publicApi\n */\nclass Validators {\n  /**\n   * @description\n   * Validator that requires the control's value to be greater than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a minimum of 3\n   *\n   * ```typescript\n   * const control = new FormControl(2, Validators.min(3));\n   *\n   * console.log(control.errors); // {min: {min: 3, actual: 2}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `min` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static min(min) {\n    return minValidator(min);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to be less than or equal to the provided number.\n   *\n   * @usageNotes\n   *\n   * ### Validate against a maximum of 15\n   *\n   * ```typescript\n   * const control = new FormControl(16, Validators.max(15));\n   *\n   * console.log(control.errors); // {max: {max: 15, actual: 16}}\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `max` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static max(max) {\n    return maxValidator(max);\n  }\n  /**\n   * @description\n   * Validator that requires the control have a non-empty value.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field is non-empty\n   *\n   * ```typescript\n   * const control = new FormControl('', Validators.required);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map with the `required` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static required(control) {\n    return requiredValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value be true. This validator is commonly\n   * used for required checkboxes.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field value is true\n   *\n   * ```typescript\n   * const control = new FormControl('some value', Validators.requiredTrue);\n   *\n   * console.log(control.errors); // {required: true}\n   * ```\n   *\n   * @returns An error map that contains the `required` property\n   * set to `true` if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static requiredTrue(control) {\n    return requiredTrueValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value pass an email validation test.\n   *\n   * Tests the value using a [regular\n   * expression](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions)\n   * pattern suitable for common use cases. The pattern is based on the definition of a valid email\n   * address in the [WHATWG HTML\n   * specification](https://html.spec.whatwg.org/multipage/input.html#valid-e-mail-address) with\n   * some enhancements to incorporate more RFC rules (such as rules related to domain names and the\n   * lengths of different parts of the address).\n   *\n   * The differences from the WHATWG version include:\n   * - Disallow `local-part` (the part before the `@` symbol) to begin or end with a period (`.`).\n   * - Disallow `local-part` to be longer than 64 characters.\n   * - Disallow the whole address to be longer than 254 characters.\n   *\n   * If this pattern does not satisfy your business needs, you can use `Validators.pattern()` to\n   * validate the value against a different pattern.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field matches a valid email pattern\n   *\n   * ```typescript\n   * const control = new FormControl('bad@', Validators.email);\n   *\n   * console.log(control.errors); // {email: true}\n   * ```\n   *\n   * @returns An error map with the `email` property\n   * if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static email(control) {\n    return emailValidator(control);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be greater than or equal\n   * to the provided minimum length. This validator is also provided by default if you use the\n   * the HTML5 `minlength` attribute. Note that the `minLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays. The\n   * `minLength` validator logic is also not invoked for values when their `length` property is 0\n   * (for example in case of an empty string or an empty array), to support optional controls. You\n   * can use the standard `required` validator if empty values should not be considered valid.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has a minimum of 3 characters\n   *\n   * ```typescript\n   * const control = new FormControl('ng', Validators.minLength(3));\n   *\n   * console.log(control.errors); // {minlength: {requiredLength: 3, actualLength: 2}}\n   * ```\n   *\n   * ```html\n   * <input minlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `minlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static minLength(minLength) {\n    return minLengthValidator(minLength);\n  }\n  /**\n   * @description\n   * Validator that requires the length of the control's value to be less than or equal\n   * to the provided maximum length. This validator is also provided by default if you use the\n   * the HTML5 `maxlength` attribute. Note that the `maxLength` validator is intended to be used\n   * only for types that have a numeric `length` property, such as strings or arrays.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field has maximum of 5 characters\n   *\n   * ```typescript\n   * const control = new FormControl('Angular', Validators.maxLength(5));\n   *\n   * console.log(control.errors); // {maxlength: {requiredLength: 5, actualLength: 7}}\n   * ```\n   *\n   * ```html\n   * <input maxlength=\"5\">\n   * ```\n   *\n   * @returns A validator function that returns an error map with the\n   * `maxlength` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static maxLength(maxLength) {\n    return maxLengthValidator(maxLength);\n  }\n  /**\n   * @description\n   * Validator that requires the control's value to match a regex pattern. This validator is also\n   * provided by default if you use the HTML5 `pattern` attribute.\n   *\n   * @usageNotes\n   *\n   * ### Validate that the field only contains letters or spaces\n   *\n   * ```typescript\n   * const control = new FormControl('1', Validators.pattern('[a-zA-Z ]*'));\n   *\n   * console.log(control.errors); // {pattern: {requiredPattern: '^[a-zA-Z ]*$', actualValue: '1'}}\n   * ```\n   *\n   * ```html\n   * <input pattern=\"[a-zA-Z ]*\">\n   * ```\n   *\n   * ### Pattern matching with the global or sticky flag\n   *\n   * `RegExp` objects created with the `g` or `y` flags that are passed into `Validators.pattern`\n   * can produce different results on the same input when validations are run consecutively. This is\n   * due to how the behavior of `RegExp.prototype.test` is\n   * specified in [ECMA-262](https://tc39.es/ecma262/#sec-regexpbuiltinexec)\n   * (`RegExp` preserves the index of the last match when the global or sticky flag is used).\n   * Due to this behavior, it is recommended that when using\n   * `Validators.pattern` you **do not** pass in a `RegExp` object with either the global or sticky\n   * flag enabled.\n   *\n   * ```typescript\n   * // Not recommended (since the `g` flag is used)\n   * const controlOne = new FormControl('1', Validators.pattern(/foo/g));\n   *\n   * // Good\n   * const controlTwo = new FormControl('1', Validators.pattern(/foo/));\n   * ```\n   *\n   * @param pattern A regular expression to be used as is to test the values, or a string.\n   * If a string is passed, the `^` character is prepended and the `$` character is\n   * appended to the provided string (if not already present), and the resulting regular\n   * expression is used to test the values.\n   *\n   * @returns A validator function that returns an error map with the\n   * `pattern` property if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static pattern(pattern) {\n    return patternValidator(pattern);\n  }\n  /**\n   * @description\n   * Validator that performs no operation.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static nullValidator(control) {\n    return nullValidator(control);\n  }\n  static compose(validators) {\n    return compose(validators);\n  }\n  /**\n   * @description\n   * Compose multiple async validators into a single function that returns the union\n   * of the individual error objects for the provided control.\n   *\n   * @returns A validator function that returns an error map with the\n   * merged error objects of the async validators if the validation check fails, otherwise `null`.\n   *\n   * @see {@link updateValueAndValidity()}\n   *\n   */\n  static composeAsync(validators) {\n    return composeAsync(validators);\n  }\n}\n/**\n * Validator that requires the control's value to be greater than or equal to the provided number.\n * See `Validators.min` for additional information.\n */\nfunction minValidator(min) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(min)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // minimum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-min\n    return !isNaN(value) && value < min ? {\n      'min': {\n        'min': min,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to be less than or equal to the provided number.\n * See `Validators.max` for additional information.\n */\nfunction maxValidator(max) {\n  return control => {\n    if (isEmptyInputValue(control.value) || isEmptyInputValue(max)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = parseFloat(control.value);\n    // Controls with NaN values after parsing should be treated as not having a\n    // maximum, per the HTML forms spec: https://www.w3.org/TR/html5/forms.html#attr-input-max\n    return !isNaN(value) && value > max ? {\n      'max': {\n        'max': max,\n        'actual': control.value\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control have a non-empty value.\n * See `Validators.required` for additional information.\n */\nfunction requiredValidator(control) {\n  return isEmptyInputValue(control.value) ? {\n    'required': true\n  } : null;\n}\n/**\n * Validator that requires the control's value be true. This validator is commonly\n * used for required checkboxes.\n * See `Validators.requiredTrue` for additional information.\n */\nfunction requiredTrueValidator(control) {\n  return control.value === true ? null : {\n    'required': true\n  };\n}\n/**\n * Validator that requires the control's value pass an email validation test.\n * See `Validators.email` for additional information.\n */\nfunction emailValidator(control) {\n  if (isEmptyInputValue(control.value)) {\n    return null; // don't validate empty values to allow optional controls\n  }\n  return EMAIL_REGEXP.test(control.value) ? null : {\n    'email': true\n  };\n}\n/**\n * Validator that requires the length of the control's value to be greater than or equal\n * to the provided minimum length. See `Validators.minLength` for additional information.\n */\nfunction minLengthValidator(minLength) {\n  return control => {\n    if (isEmptyInputValue(control.value) || !hasValidLength(control.value)) {\n      // don't validate empty values to allow optional controls\n      // don't validate values without `length` property\n      return null;\n    }\n    return control.value.length < minLength ? {\n      'minlength': {\n        'requiredLength': minLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the length of the control's value to be less than or equal\n * to the provided maximum length. See `Validators.maxLength` for additional information.\n */\nfunction maxLengthValidator(maxLength) {\n  return control => {\n    return hasValidLength(control.value) && control.value.length > maxLength ? {\n      'maxlength': {\n        'requiredLength': maxLength,\n        'actualLength': control.value.length\n      }\n    } : null;\n  };\n}\n/**\n * Validator that requires the control's value to match a regex pattern.\n * See `Validators.pattern` for additional information.\n */\nfunction patternValidator(pattern) {\n  if (!pattern) return nullValidator;\n  let regex;\n  let regexStr;\n  if (typeof pattern === 'string') {\n    regexStr = '';\n    if (pattern.charAt(0) !== '^') regexStr += '^';\n    regexStr += pattern;\n    if (pattern.charAt(pattern.length - 1) !== '$') regexStr += '$';\n    regex = new RegExp(regexStr);\n  } else {\n    regexStr = pattern.toString();\n    regex = pattern;\n  }\n  return control => {\n    if (isEmptyInputValue(control.value)) {\n      return null; // don't validate empty values to allow optional controls\n    }\n    const value = control.value;\n    return regex.test(value) ? null : {\n      'pattern': {\n        'requiredPattern': regexStr,\n        'actualValue': value\n      }\n    };\n  };\n}\n/**\n * Function that has `ValidatorFn` shape, but performs no operation.\n */\nfunction nullValidator(control) {\n  return null;\n}\nfunction isPresent(o) {\n  return o != null;\n}\nfunction toObservable(value) {\n  const obs = ɵisPromise(value) ? from(value) : value;\n  if ((typeof ngDevMode === 'undefined' || ngDevMode) && !ɵisSubscribable(obs)) {\n    let errorMessage = `Expected async validator to return Promise or Observable.`;\n    // A synchronous validator will return object or null.\n    if (typeof value === 'object') {\n      errorMessage += ' Are you using a synchronous validator where an async validator is expected?';\n    }\n    throw new ɵRuntimeError(-1101 /* RuntimeErrorCode.WRONG_VALIDATOR_RETURN_TYPE */, errorMessage);\n  }\n  return obs;\n}\nfunction mergeErrors(arrayOfErrors) {\n  let res = {};\n  arrayOfErrors.forEach(errors => {\n    res = errors != null ? {\n      ...res,\n      ...errors\n    } : res;\n  });\n  return Object.keys(res).length === 0 ? null : res;\n}\nfunction executeValidators(control, validators) {\n  return validators.map(validator => validator(control));\n}\nfunction isValidatorFn(validator) {\n  return !validator.validate;\n}\n/**\n * Given the list of validators that may contain both functions as well as classes, return the list\n * of validator functions (convert validator classes into validator functions). This is needed to\n * have consistent structure in validators list before composing them.\n *\n * @param validators The set of validators that may contain validators both in plain function form\n *     as well as represented as a validator class.\n */\nfunction normalizeValidators(validators) {\n  return validators.map(validator => {\n    return isValidatorFn(validator) ? validator : c => validator.validate(c);\n  });\n}\n/**\n * Merges synchronous validators into a single validator function.\n * See `Validators.compose` for additional information.\n */\nfunction compose(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    return mergeErrors(executeValidators(control, presentValidators));\n  };\n}\n/**\n * Accepts a list of validators of different possible shapes (`Validator` and `ValidatorFn`),\n * normalizes the list (converts everything to `ValidatorFn`) and merges them into a single\n * validator function.\n */\nfunction composeValidators(validators) {\n  return validators != null ? compose(normalizeValidators(validators)) : null;\n}\n/**\n * Merges asynchronous validators into a single validator function.\n * See `Validators.composeAsync` for additional information.\n */\nfunction composeAsync(validators) {\n  if (!validators) return null;\n  const presentValidators = validators.filter(isPresent);\n  if (presentValidators.length == 0) return null;\n  return function (control) {\n    const observables = executeValidators(control, presentValidators).map(toObservable);\n    return forkJoin(observables).pipe(map(mergeErrors));\n  };\n}\n/**\n * Accepts a list of async validators of different possible shapes (`AsyncValidator` and\n * `AsyncValidatorFn`), normalizes the list (converts everything to `AsyncValidatorFn`) and merges\n * them into a single validator function.\n */\nfunction composeAsyncValidators(validators) {\n  return validators != null ? composeAsync(normalizeValidators(validators)) : null;\n}\n/**\n * Merges raw control validators with a given directive validator and returns the combined list of\n * validators as an array.\n */\nfunction mergeValidators(controlValidators, dirValidator) {\n  if (controlValidators === null) return [dirValidator];\n  return Array.isArray(controlValidators) ? [...controlValidators, dirValidator] : [controlValidators, dirValidator];\n}\n/**\n * Retrieves the list of raw synchronous validators attached to a given control.\n */\nfunction getControlValidators(control) {\n  return control._rawValidators;\n}\n/**\n * Retrieves the list of raw asynchronous validators attached to a given control.\n */\nfunction getControlAsyncValidators(control) {\n  return control._rawAsyncValidators;\n}\n/**\n * Accepts a singleton validator, an array, or null, and returns an array type with the provided\n * validators.\n *\n * @param validators A validator, validators, or null.\n * @returns A validators array.\n */\nfunction makeValidatorsArray(validators) {\n  if (!validators) return [];\n  return Array.isArray(validators) ? validators : [validators];\n}\n/**\n * Determines whether a validator or validators array has a given validator.\n *\n * @param validators The validator or validators to compare against.\n * @param validator The validator to check.\n * @returns Whether the validator is present.\n */\nfunction hasValidator(validators, validator) {\n  return Array.isArray(validators) ? validators.includes(validator) : validators === validator;\n}\n/**\n * Combines two arrays of validators into one. If duplicates are provided, only one will be added.\n *\n * @param validators The new validators.\n * @param currentValidators The base array of current validators.\n * @returns An array of validators.\n */\nfunction addValidators(validators, currentValidators) {\n  const current = makeValidatorsArray(currentValidators);\n  const validatorsToAdd = makeValidatorsArray(validators);\n  validatorsToAdd.forEach(v => {\n    // Note: if there are duplicate entries in the new validators array,\n    // only the first one would be added to the current list of validators.\n    // Duplicate ones would be ignored since `hasValidator` would detect\n    // the presence of a validator function and we update the current list in place.\n    if (!hasValidator(current, v)) {\n      current.push(v);\n    }\n  });\n  return current;\n}\nfunction removeValidators(validators, currentValidators) {\n  return makeValidatorsArray(currentValidators).filter(v => !hasValidator(validators, v));\n}\n\n/**\n * @description\n * Base class for control directives.\n *\n * This class is only used internally in the `ReactiveFormsModule` and the `FormsModule`.\n *\n * @publicApi\n */\nclass AbstractControlDirective {\n  constructor() {\n    /**\n     * Set of synchronous validators as they were provided while calling `setValidators` function.\n     * @internal\n     */\n    this._rawValidators = [];\n    /**\n     * Set of asynchronous validators as they were provided while calling `setAsyncValidators`\n     * function.\n     * @internal\n     */\n    this._rawAsyncValidators = [];\n    /*\n     * The set of callbacks to be invoked when directive instance is being destroyed.\n     */\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Reports the value of the control if it is present, otherwise null.\n   */\n  get value() {\n    return this.control ? this.control.value : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is valid. A control is considered valid if no\n   * validation errors exist with the current value.\n   * If the control is not present, null is returned.\n   */\n  get valid() {\n    return this.control ? this.control.valid : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is invalid, meaning that an error exists in the input value.\n   * If the control is not present, null is returned.\n   */\n  get invalid() {\n    return this.control ? this.control.invalid : null;\n  }\n  /**\n   * @description\n   * Reports whether a control is pending, meaning that async validation is occurring and\n   * errors are not yet available for the input value. If the control is not present, null is\n   * returned.\n   */\n  get pending() {\n    return this.control ? this.control.pending : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is disabled, meaning that the control is disabled\n   * in the UI and is exempt from validation checks and excluded from aggregate\n   * values of ancestor controls. If the control is not present, null is returned.\n   */\n  get disabled() {\n    return this.control ? this.control.disabled : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is enabled, meaning that the control is included in ancestor\n   * calculations of validity or value. If the control is not present, null is returned.\n   */\n  get enabled() {\n    return this.control ? this.control.enabled : null;\n  }\n  /**\n   * @description\n   * Reports the control's validation errors. If the control is not present, null is returned.\n   */\n  get errors() {\n    return this.control ? this.control.errors : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is pristine, meaning that the user has not yet changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get pristine() {\n    return this.control ? this.control.pristine : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is dirty, meaning that the user has changed\n   * the value in the UI. If the control is not present, null is returned.\n   */\n  get dirty() {\n    return this.control ? this.control.dirty : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is touched, meaning that the user has triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get touched() {\n    return this.control ? this.control.touched : null;\n  }\n  /**\n   * @description\n   * Reports the validation status of the control. Possible values include:\n   * 'VALID', 'INVALID', 'DISABLED', and 'PENDING'.\n   * If the control is not present, null is returned.\n   */\n  get status() {\n    return this.control ? this.control.status : null;\n  }\n  /**\n   * @description\n   * Reports whether the control is untouched, meaning that the user has not yet triggered\n   * a `blur` event on it. If the control is not present, null is returned.\n   */\n  get untouched() {\n    return this.control ? this.control.untouched : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable that emits a validation status whenever it is\n   * calculated for the control. If the control is not present, null is returned.\n   */\n  get statusChanges() {\n    return this.control ? this.control.statusChanges : null;\n  }\n  /**\n   * @description\n   * Returns a multicasting observable of value changes for the control that emits every time the\n   * value of the control changes in the UI or programmatically.\n   * If the control is not present, null is returned.\n   */\n  get valueChanges() {\n    return this.control ? this.control.valueChanges : null;\n  }\n  /**\n   * @description\n   * Returns an array that represents the path from the top-level form to this control.\n   * Each index is the string name of the control on that level.\n   */\n  get path() {\n    return null;\n  }\n  /**\n   * Sets synchronous validators for this directive.\n   * @internal\n   */\n  _setValidators(validators) {\n    this._rawValidators = validators || [];\n    this._composedValidatorFn = composeValidators(this._rawValidators);\n  }\n  /**\n   * Sets asynchronous validators for this directive.\n   * @internal\n   */\n  _setAsyncValidators(validators) {\n    this._rawAsyncValidators = validators || [];\n    this._composedAsyncValidatorFn = composeAsyncValidators(this._rawAsyncValidators);\n  }\n  /**\n   * @description\n   * Synchronous validator function composed of all the synchronous validators registered with this\n   * directive.\n   */\n  get validator() {\n    return this._composedValidatorFn || null;\n  }\n  /**\n   * @description\n   * Asynchronous validator function composed of all the asynchronous validators registered with\n   * this directive.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn || null;\n  }\n  /**\n   * Internal function to register callbacks that should be invoked\n   * when directive instance is being destroyed.\n   * @internal\n   */\n  _registerOnDestroy(fn) {\n    this._onDestroyCallbacks.push(fn);\n  }\n  /**\n   * Internal function to invoke all registered \"on destroy\" callbacks.\n   * Note: calling this function also clears the list of callbacks.\n   * @internal\n   */\n  _invokeOnDestroyCallbacks() {\n    this._onDestroyCallbacks.forEach(fn => fn());\n    this._onDestroyCallbacks = [];\n  }\n  /**\n   * @description\n   * Resets the control with the provided value if the control is present.\n   */\n  reset(value = undefined) {\n    if (this.control) this.control.reset(value);\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return this.control ? this.control.hasError(errorCode, path) : false;\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    return this.control ? this.control.getError(errorCode, path) : null;\n  }\n}\n\n/**\n * @description\n * A base class for directives that contain multiple registered instances of `NgControl`.\n * Only used by the forms module.\n *\n * @publicApi\n */\nclass ControlContainer extends AbstractControlDirective {\n  /**\n   * @description\n   * The top-level form directive for the control.\n   */\n  get formDirective() {\n    return null;\n  }\n  /**\n   * @description\n   * The path to this group.\n   */\n  get path() {\n    return null;\n  }\n}\n\n/**\n * @description\n * A base class that all `FormControl`-based directives extend. It binds a `FormControl`\n * object to a DOM element.\n *\n * @publicApi\n */\nclass NgControl extends AbstractControlDirective {\n  constructor() {\n    super(...arguments);\n    /**\n     * @description\n     * The parent form for the control.\n     *\n     * @internal\n     */\n    this._parent = null;\n    /**\n     * @description\n     * The name for the control\n     */\n    this.name = null;\n    /**\n     * @description\n     * The value accessor for the control\n     */\n    this.valueAccessor = null;\n  }\n}\n\n// DO NOT REFACTOR!\n// Each status is represented by a separate function to make sure that\n// advanced Closure Compiler optimizations related to property renaming\n// can work correctly.\nclass AbstractControlStatus {\n  constructor(cd) {\n    this._cd = cd;\n  }\n  get isTouched() {\n    return !!this._cd?.control?.touched;\n  }\n  get isUntouched() {\n    return !!this._cd?.control?.untouched;\n  }\n  get isPristine() {\n    return !!this._cd?.control?.pristine;\n  }\n  get isDirty() {\n    return !!this._cd?.control?.dirty;\n  }\n  get isValid() {\n    return !!this._cd?.control?.valid;\n  }\n  get isInvalid() {\n    return !!this._cd?.control?.invalid;\n  }\n  get isPending() {\n    return !!this._cd?.control?.pending;\n  }\n  get isSubmitted() {\n    // We check for the `submitted` field from `NgForm` and `FormGroupDirective` classes, but\n    // we avoid instanceof checks to prevent non-tree-shakable references to those types.\n    return !!this._cd?.submitted;\n  }\n}\nconst ngControlStatusHost = {\n  '[class.ng-untouched]': 'isUntouched',\n  '[class.ng-touched]': 'isTouched',\n  '[class.ng-pristine]': 'isPristine',\n  '[class.ng-dirty]': 'isDirty',\n  '[class.ng-valid]': 'isValid',\n  '[class.ng-invalid]': 'isInvalid',\n  '[class.ng-pending]': 'isPending'\n};\nconst ngGroupStatusHost = {\n  ...ngControlStatusHost,\n  '[class.ng-submitted]': 'isSubmitted'\n};\n/**\n * @description\n * Directive automatically applied to Angular form controls that sets CSS classes\n * based on control status.\n *\n * @usageNotes\n *\n * ### CSS classes applied\n *\n * The following classes are applied as the properties become true:\n *\n * * ng-valid\n * * ng-invalid\n * * ng-pending\n * * ng-pristine\n * * ng-dirty\n * * ng-untouched\n * * ng-touched\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatus = /*#__PURE__*/(() => {\n  class NgControlStatus extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static {\n      this.ɵfac = function NgControlStatus_Factory(t) {\n        return new (t || NgControlStatus)(i0.ɵɵdirectiveInject(NgControl, 2));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgControlStatus,\n        selectors: [[\"\", \"formControlName\", \"\"], [\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"]],\n        hostVars: 14,\n        hostBindings: function NgControlStatus_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending);\n          }\n        },\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgControlStatus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Directive automatically applied to Angular form groups that sets CSS classes\n * based on control status (valid/invalid/dirty/etc). On groups, this includes the additional\n * class ng-submitted.\n *\n * @see {@link NgControlStatus}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgControlStatusGroup = /*#__PURE__*/(() => {\n  class NgControlStatusGroup extends AbstractControlStatus {\n    constructor(cd) {\n      super(cd);\n    }\n    static {\n      this.ɵfac = function NgControlStatusGroup_Factory(t) {\n        return new (t || NgControlStatusGroup)(i0.ɵɵdirectiveInject(ControlContainer, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgControlStatusGroup,\n        selectors: [[\"\", \"formGroupName\", \"\"], [\"\", \"formArrayName\", \"\"], [\"\", \"ngModelGroup\", \"\"], [\"\", \"formGroup\", \"\"], [\"form\", 3, \"ngNoForm\", \"\"], [\"\", \"ngForm\", \"\"]],\n        hostVars: 16,\n        hostBindings: function NgControlStatusGroup_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"ng-untouched\", ctx.isUntouched)(\"ng-touched\", ctx.isTouched)(\"ng-pristine\", ctx.isPristine)(\"ng-dirty\", ctx.isDirty)(\"ng-valid\", ctx.isValid)(\"ng-invalid\", ctx.isInvalid)(\"ng-pending\", ctx.isPending)(\"ng-submitted\", ctx.isSubmitted);\n          }\n        },\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgControlStatusGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <input formControlName=\"firstName\">\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      firstName: new FormControl()\n  });`;\nconst formGroupNameExample = `\n  <div [formGroup]=\"myGroup\">\n      <div formGroupName=\"person\">\n        <input formControlName=\"firstName\">\n      </div>\n  </div>\n\n  In your class:\n\n  this.myGroup = new FormGroup({\n      person: new FormGroup({ firstName: new FormControl() })\n  });`;\nconst formArrayNameExample = `\n  <div [formGroup]=\"myGroup\">\n    <div formArrayName=\"cities\">\n      <div *ngFor=\"let city of cityArray.controls; index as i\">\n        <input [formControlName]=\"i\">\n      </div>\n    </div>\n  </div>\n\n  In your class:\n\n  this.cityArray = new FormArray([new FormControl('SF')]);\n  this.myGroup = new FormGroup({\n    cities: this.cityArray\n  });`;\nconst ngModelGroupExample = `\n  <form>\n      <div ngModelGroup=\"person\">\n        <input [(ngModel)]=\"person.name\" name=\"firstName\">\n      </div>\n  </form>`;\nconst ngModelWithFormGroupExample = `\n  <div [formGroup]=\"myGroup\">\n      <input formControlName=\"firstName\">\n      <input [(ngModel)]=\"showMoreControls\" [ngModelOptions]=\"{standalone: true}\">\n  </div>\n`;\nfunction controlParentException() {\n  return new ɵRuntimeError(1050 /* RuntimeErrorCode.FORM_CONTROL_NAME_MISSING_PARENT */, `formControlName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formControlNameExample}`);\n}\nfunction ngModelGroupException() {\n  return new ɵRuntimeError(1051 /* RuntimeErrorCode.FORM_CONTROL_NAME_INSIDE_MODEL_GROUP */, `formControlName cannot be used with an ngModelGroup parent. It is only compatible with parents\n      that also have a \"form\" prefix: formGroupName, formArrayName, or formGroup.\n\n      Option 1:  Update the parent to be formGroupName (reactive form strategy)\n\n      ${formGroupNameExample}\n\n      Option 2: Use ngModel instead of formControlName (template-driven strategy)\n\n      ${ngModelGroupExample}`);\n}\nfunction missingFormException() {\n  return new ɵRuntimeError(1052 /* RuntimeErrorCode.FORM_GROUP_MISSING_INSTANCE */, `formGroup expects a FormGroup instance. Please pass one in.\n\n      Example:\n\n      ${formControlNameExample}`);\n}\nfunction groupParentException() {\n  return new ɵRuntimeError(1053 /* RuntimeErrorCode.FORM_GROUP_NAME_MISSING_PARENT */, `formGroupName must be used with a parent formGroup directive.  You'll want to add a formGroup\n    directive and pass it an existing FormGroup instance (you can create one in your class).\n\n    Example:\n\n    ${formGroupNameExample}`);\n}\nfunction arrayParentException() {\n  return new ɵRuntimeError(1054 /* RuntimeErrorCode.FORM_ARRAY_NAME_MISSING_PARENT */, `formArrayName must be used with a parent formGroup directive.  You'll want to add a formGroup\n      directive and pass it an existing FormGroup instance (you can create one in your class).\n\n      Example:\n\n      ${formArrayNameExample}`);\n}\nconst disabledAttrWarning = `\n  It looks like you're using the disabled attribute with a reactive form directive. If you set disabled to true\n  when you set up this control in your component class, the disabled attribute will actually be set in the DOM for\n  you. We recommend using this approach to avoid 'changed after checked' errors.\n\n  Example:\n  // Specify the \\`disabled\\` property at control creation time:\n  form = new FormGroup({\n    first: new FormControl({value: 'Nancy', disabled: true}, Validators.required),\n    last: new FormControl('Drew', Validators.required)\n  });\n\n  // Controls can also be enabled/disabled after creation:\n  form.get('first')?.enable();\n  form.get('last')?.disable();\n`;\nconst asyncValidatorsDroppedWithOptsWarning = `\n  It looks like you're constructing using a FormControl with both an options argument and an\n  async validators argument. Mixing these arguments will cause your async validators to be dropped.\n  You should either put all your validators in the options object, or in separate validators\n  arguments. For example:\n\n  // Using validators arguments\n  fc = new FormControl(42, Validators.required, myAsyncValidator);\n\n  // Using AbstractControlOptions\n  fc = new FormControl(42, {validators: Validators.required, asyncValidators: myAV});\n\n  // Do NOT mix them: async validators will be dropped!\n  fc = new FormControl(42, {validators: Validators.required}, /* Oops! */ myAsyncValidator);\n`;\nfunction ngModelWarning(directiveName) {\n  return `\n  It looks like you're using ngModel on the same form field as ${directiveName}.\n  Support for using the ngModel input property and ngModelChange event with\n  reactive form directives has been deprecated in Angular v6 and will be removed\n  in a future version of Angular.\n\n  For more information on this, see our API docs here:\n  https://angular.io/api/forms/${directiveName === 'formControl' ? 'FormControlDirective' : 'FormControlName'}#use-with-ngmodel\n  `;\n}\nfunction describeKey(isFormGroup, key) {\n  return isFormGroup ? `with name: '${key}'` : `at index: ${key}`;\n}\nfunction noControlsError(isFormGroup) {\n  return `\n    There are no form controls registered with this ${isFormGroup ? 'group' : 'array'} yet. If you're using ngModel,\n    you may want to check next tick (e.g. use setTimeout).\n  `;\n}\nfunction missingControlError(isFormGroup, key) {\n  return `Cannot find form control ${describeKey(isFormGroup, key)}`;\n}\nfunction missingControlValueError(isFormGroup, key) {\n  return `Must supply a value for form control ${describeKey(isFormGroup, key)}`;\n}\n\n/**\n * Reports that a control is valid, meaning that no errors exist in the input value.\n *\n * @see {@link status}\n */\nconst VALID = 'VALID';\n/**\n * Reports that a control is invalid, meaning that an error exists in the input value.\n *\n * @see {@link status}\n */\nconst INVALID = 'INVALID';\n/**\n * Reports that a control is pending, meaning that async validation is occurring and\n * errors are not yet available for the input value.\n *\n * @see {@link markAsPending}\n * @see {@link status}\n */\nconst PENDING = 'PENDING';\n/**\n * Reports that a control is disabled, meaning that the control is exempt from ancestor\n * calculations of validity or value.\n *\n * @see {@link markAsDisabled}\n * @see {@link status}\n */\nconst DISABLED = 'DISABLED';\n/**\n * Gets validators from either an options object or given validators.\n */\nfunction pickValidators(validatorOrOpts) {\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.validators : validatorOrOpts) || null;\n}\n/**\n * Creates validator function by combining provided validators.\n */\nfunction coerceToValidator(validator) {\n  return Array.isArray(validator) ? composeValidators(validator) : validator || null;\n}\n/**\n * Gets async validators from either an options object or given validators.\n */\nfunction pickAsyncValidators(asyncValidator, validatorOrOpts) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (isOptionsObj(validatorOrOpts) && asyncValidator) {\n      console.warn(asyncValidatorsDroppedWithOptsWarning);\n    }\n  }\n  return (isOptionsObj(validatorOrOpts) ? validatorOrOpts.asyncValidators : asyncValidator) || null;\n}\n/**\n * Creates async validator function by combining provided async validators.\n */\nfunction coerceToAsyncValidator(asyncValidator) {\n  return Array.isArray(asyncValidator) ? composeAsyncValidators(asyncValidator) : asyncValidator || null;\n}\nfunction isOptionsObj(validatorOrOpts) {\n  return validatorOrOpts != null && !Array.isArray(validatorOrOpts) && typeof validatorOrOpts === 'object';\n}\nfunction assertControlPresent(parent, isGroup, key) {\n  const controls = parent.controls;\n  const collection = isGroup ? Object.keys(controls) : controls;\n  if (!collection.length) {\n    throw new ɵRuntimeError(1000 /* RuntimeErrorCode.NO_CONTROLS */, typeof ngDevMode === 'undefined' || ngDevMode ? noControlsError(isGroup) : '');\n  }\n  if (!controls[key]) {\n    throw new ɵRuntimeError(1001 /* RuntimeErrorCode.MISSING_CONTROL */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlError(isGroup, key) : '');\n  }\n}\nfunction assertAllValuesPresent(control, isGroup, value) {\n  control._forEachChild((_, key) => {\n    if (value[key] === undefined) {\n      throw new ɵRuntimeError(1002 /* RuntimeErrorCode.MISSING_CONTROL_VALUE */, typeof ngDevMode === 'undefined' || ngDevMode ? missingControlValueError(isGroup, key) : '');\n    }\n  });\n}\n// clang-format on\n/**\n * This is the base class for `FormControl`, `FormGroup`, and `FormArray`.\n *\n * It provides some of the shared behavior that all controls and groups of controls have, like\n * running validators, calculating status, and resetting state. It also defines the properties\n * that are shared between all sub-classes, like `value`, `valid`, and `dirty`. It shouldn't be\n * instantiated directly.\n *\n * The first type parameter TValue represents the value type of the control (`control.value`).\n * The optional type parameter TRawValue  represents the raw value type (`control.getRawValue()`).\n *\n * @see [Forms Guide](/guide/forms)\n * @see [Reactive Forms Guide](/guide/reactive-forms)\n * @see [Dynamic Forms Guide](/guide/dynamic-form)\n *\n * @publicApi\n */\nclass AbstractControl {\n  /**\n   * Initialize the AbstractControl instance.\n   *\n   * @param validators The function or array of functions that is used to determine the validity of\n   *     this control synchronously.\n   * @param asyncValidators The function or array of functions that is used to determine validity of\n   *     this control asynchronously.\n   */\n  constructor(validators, asyncValidators) {\n    /** @internal */\n    this._pendingDirty = false;\n    /**\n     * Indicates that a control has its own pending asynchronous validation in progress.\n     *\n     * @internal\n     */\n    this._hasOwnPendingAsyncValidator = false;\n    /** @internal */\n    this._pendingTouched = false;\n    /** @internal */\n    this._onCollectionChange = () => {};\n    this._parent = null;\n    /**\n     * A control is `pristine` if the user has not yet changed\n     * the value in the UI.\n     *\n     * @returns True if the user has not yet changed the value in the UI; compare `dirty`.\n     * Programmatic changes to a control's value do not mark it dirty.\n     */\n    this.pristine = true;\n    /**\n     * True if the control is marked as `touched`.\n     *\n     * A control is marked `touched` once the user has triggered\n     * a `blur` event on it.\n     */\n    this.touched = false;\n    /** @internal */\n    this._onDisabledChange = [];\n    this._assignValidators(validators);\n    this._assignAsyncValidators(asyncValidators);\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control synchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get validator() {\n    return this._composedValidatorFn;\n  }\n  set validator(validatorFn) {\n    this._rawValidators = this._composedValidatorFn = validatorFn;\n  }\n  /**\n   * Returns the function that is used to determine the validity of this control asynchronously.\n   * If multiple validators have been added, this will be a single composed function.\n   * See `Validators.compose()` for additional information.\n   */\n  get asyncValidator() {\n    return this._composedAsyncValidatorFn;\n  }\n  set asyncValidator(asyncValidatorFn) {\n    this._rawAsyncValidators = this._composedAsyncValidatorFn = asyncValidatorFn;\n  }\n  /**\n   * The parent control.\n   */\n  get parent() {\n    return this._parent;\n  }\n  /**\n   * A control is `valid` when its `status` is `VALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control has passed all of its validation tests,\n   * false otherwise.\n   */\n  get valid() {\n    return this.status === VALID;\n  }\n  /**\n   * A control is `invalid` when its `status` is `INVALID`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control has failed one or more of its validation checks,\n   * false otherwise.\n   */\n  get invalid() {\n    return this.status === INVALID;\n  }\n  /**\n   * A control is `pending` when its `status` is `PENDING`.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if this control is in the process of conducting a validation check,\n   * false otherwise.\n   */\n  get pending() {\n    return this.status == PENDING;\n  }\n  /**\n   * A control is `disabled` when its `status` is `DISABLED`.\n   *\n   * Disabled controls are exempt from validation checks and\n   * are not included in the aggregate value of their ancestor\n   * controls.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @returns True if the control is disabled, false otherwise.\n   */\n  get disabled() {\n    return this.status === DISABLED;\n  }\n  /**\n   * A control is `enabled` as long as its `status` is not `DISABLED`.\n   *\n   * @returns True if the control has any status other than 'DISABLED',\n   * false if the status is 'DISABLED'.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   */\n  get enabled() {\n    return this.status !== DISABLED;\n  }\n  /**\n   * A control is `dirty` if the user has changed the value\n   * in the UI.\n   *\n   * @returns True if the user has changed the value of this control in the UI; compare `pristine`.\n   * Programmatic changes to a control's value do not mark it dirty.\n   */\n  get dirty() {\n    return !this.pristine;\n  }\n  /**\n   * True if the control has not been marked as touched\n   *\n   * A control is `untouched` if the user has not yet triggered\n   * a `blur` event on it.\n   */\n  get untouched() {\n    return !this.touched;\n  }\n  /**\n   * Reports the update strategy of the `AbstractControl` (meaning\n   * the event on which the control updates itself).\n   * Possible values: `'change'` | `'blur'` | `'submit'`\n   * Default value: `'change'`\n   */\n  get updateOn() {\n    return this._updateOn ? this._updateOn : this.parent ? this.parent.updateOn : 'change';\n  }\n  /**\n   * Sets the synchronous validators that are active on this control.  Calling\n   * this overwrites any existing synchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addValidators()` method instead.\n   */\n  setValidators(validators) {\n    this._assignValidators(validators);\n  }\n  /**\n   * Sets the asynchronous validators that are active on this control. Calling this\n   * overwrites any existing asynchronous validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * If you want to add a new validator without affecting existing ones, consider\n   * using `addAsyncValidators()` method instead.\n   */\n  setAsyncValidators(validators) {\n    this._assignAsyncValidators(validators);\n  }\n  /**\n   * Add a synchronous validator or validators to this control, without affecting other validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect. If duplicate validator functions\n   * are present in the `validators` array, only the first instance would be added to a form\n   * control.\n   *\n   * @param validators The new validator function or functions to add to this control.\n   */\n  addValidators(validators) {\n    this.setValidators(addValidators(validators, this._rawValidators));\n  }\n  /**\n   * Add an asynchronous validator or validators to this control, without affecting other\n   * validators.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * Adding a validator that already exists will have no effect.\n   *\n   * @param validators The new asynchronous validator function or functions to add to this control.\n   */\n  addAsyncValidators(validators) {\n    this.setAsyncValidators(addValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Remove a synchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found,\n   * it is ignored.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<string | null>('', Validators.required);\n   * ctrl.removeValidators(Validators.required);\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<string | null>('', minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   *\n   * ctrl.removeValidators(minValidator);\n   * ```\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The validator or validators to remove.\n   */\n  removeValidators(validators) {\n    this.setValidators(removeValidators(validators, this._rawValidators));\n  }\n  /**\n   * Remove an asynchronous validator from this control, without affecting other validators.\n   * Validators are compared by function reference; you must pass a reference to the exact same\n   * validator function as the one that was originally set. If a provided validator is not found, it\n   * is ignored.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   * @param validators The asynchronous validator or validators to remove.\n   */\n  removeAsyncValidators(validators) {\n    this.setAsyncValidators(removeValidators(validators, this._rawAsyncValidators));\n  }\n  /**\n   * Check whether a synchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @usageNotes\n   *\n   * ### Reference to a ValidatorFn\n   *\n   * ```\n   * // Reference to the RequiredValidator\n   * const ctrl = new FormControl<number | null>(0, Validators.required);\n   * expect(ctrl.hasValidator(Validators.required)).toEqual(true)\n   *\n   * // Reference to anonymous function inside MinValidator\n   * const minValidator = Validators.min(3);\n   * const ctrl = new FormControl<number | null>(0, minValidator);\n   * expect(ctrl.hasValidator(minValidator)).toEqual(true)\n   * expect(ctrl.hasValidator(Validators.min(3))).toEqual(false)\n   * ```\n   *\n   * @param validator The validator to check for presence. Compared by function reference.\n   * @returns Whether the provided validator was found on this control.\n   */\n  hasValidator(validator) {\n    return hasValidator(this._rawValidators, validator);\n  }\n  /**\n   * Check whether an asynchronous validator function is present on this control. The provided\n   * validator must be a reference to the exact same function that was provided.\n   *\n   * @param validator The asynchronous validator to check for presence. Compared by function\n   *     reference.\n   * @returns Whether the provided asynchronous validator was found on this control.\n   */\n  hasAsyncValidator(validator) {\n    return hasValidator(this._rawAsyncValidators, validator);\n  }\n  /**\n   * Empties out the synchronous validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearValidators() {\n    this.validator = null;\n  }\n  /**\n   * Empties out the async validator list.\n   *\n   * When you add or remove a validator at run time, you must call\n   * `updateValueAndValidity()` for the new validation to take effect.\n   *\n   */\n  clearAsyncValidators() {\n    this.asyncValidator = null;\n  }\n  /**\n   * Marks the control as `touched`. A control is touched by focus and\n   * blur events that do not change the value.\n   *\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsDirty()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsTouched(opts = {}) {\n    this.touched = true;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsTouched(opts);\n    }\n  }\n  /**\n   * Marks the control and all its descendant controls as `touched`.\n   * @see {@link markAsTouched()}\n   */\n  markAllAsTouched() {\n    this.markAsTouched({\n      onlySelf: true\n    });\n    this._forEachChild(control => control.markAllAsTouched());\n  }\n  /**\n   * Marks the control as `untouched`.\n   *\n   * If the control has any children, also marks all children as `untouched`\n   * and recalculates the `touched` status of all parent controls.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsDirty()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after the marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsUntouched(opts = {}) {\n    this.touched = false;\n    this._pendingTouched = false;\n    this._forEachChild(control => {\n      control.markAsUntouched({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /**\n   * Marks the control as `dirty`. A control becomes dirty when\n   * the control's value is changed through the UI; compare `markAsTouched`.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsPristine()}\n   *\n   * @param opts Configuration options that determine how the control propagates changes\n   * and emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsDirty(opts = {}) {\n    this.pristine = false;\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsDirty(opts);\n    }\n  }\n  /**\n   * Marks the control as `pristine`.\n   *\n   * If the control has any children, marks all children as `pristine`,\n   * and recalculates the `pristine` status of all parent\n   * controls.\n   *\n   * @see {@link markAsTouched()}\n   * @see {@link markAsUntouched()}\n   * @see {@link markAsDirty()}\n   *\n   * @param opts Configuration options that determine how the control emits events after\n   * marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   */\n  markAsPristine(opts = {}) {\n    this.pristine = true;\n    this._pendingDirty = false;\n    this._forEachChild(control => {\n      control.markAsPristine({\n        onlySelf: true\n      });\n    });\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /**\n   * Marks the control as `pending`.\n   *\n   * A control is pending while the control performs async validation.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates changes and\n   * emits events after marking is applied.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event with the latest status the control is marked pending.\n   * When false, no events are emitted.\n   *\n   */\n  markAsPending(opts = {}) {\n    this.status = PENDING;\n    if (opts.emitEvent !== false) {\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.markAsPending(opts);\n    }\n  }\n  /**\n   * Disables the control. This means the control is exempt from validation checks and\n   * excluded from the aggregate value of any parent. Its status is `DISABLED`.\n   *\n   * If the control has children, all children are also disabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control is disabled.\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is disabled.\n   * When false, no events are emitted.\n   */\n  disable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = DISABLED;\n    this.errors = null;\n    this._forEachChild(control => {\n      control.disable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this._updateValue();\n    if (opts.emitEvent !== false) {\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    });\n    this._onDisabledChange.forEach(changeFn => changeFn(true));\n  }\n  /**\n   * Enables the control. This means the control is included in validation checks and\n   * the aggregate value of its parent. Its status recalculates based on its value and\n   * its validators.\n   *\n   * By default, if the control has children, all children are enabled.\n   *\n   * @see {@link AbstractControl.status}\n   *\n   * @param opts Configure options that control how the control propagates changes and\n   * emits events when marked as untouched\n   * * `onlySelf`: When true, mark only this control. When false or not supplied,\n   * marks all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is enabled.\n   * When false, no events are emitted.\n   */\n  enable(opts = {}) {\n    // If parent has been marked artificially dirty we don't want to re-calculate the\n    // parent's dirtiness based on the children.\n    const skipPristineCheck = this._parentMarkedDirty(opts.onlySelf);\n    this.status = VALID;\n    this._forEachChild(control => {\n      control.enable({\n        ...opts,\n        onlySelf: true\n      });\n    });\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n    this._updateAncestors({\n      ...opts,\n      skipPristineCheck\n    });\n    this._onDisabledChange.forEach(changeFn => changeFn(false));\n  }\n  _updateAncestors(opts) {\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n      if (!opts.skipPristineCheck) {\n        this._parent._updatePristine();\n      }\n      this._parent._updateTouched();\n    }\n  }\n  /**\n   * Sets the parent of the control\n   *\n   * @param parent The new parent.\n   */\n  setParent(parent) {\n    this._parent = parent;\n  }\n  /**\n   * The raw value of this control. For most control implementations, the raw value will include\n   * disabled children.\n   */\n  getRawValue() {\n    return this.value;\n  }\n  /**\n   * Recalculates the value and validation status of the control.\n   *\n   * By default, it also updates the value and validity of its ancestors.\n   *\n   * @param opts Configuration options determine how the control propagates changes and emits events\n   * after updates and validity checks are applied.\n   * * `onlySelf`: When true, only update this control. When false or not supplied,\n   * update all direct ancestors. Default is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is updated.\n   * When false, no events are emitted.\n   */\n  updateValueAndValidity(opts = {}) {\n    this._setInitialStatus();\n    this._updateValue();\n    if (this.enabled) {\n      this._cancelExistingSubscription();\n      this.errors = this._runValidator();\n      this.status = this._calculateStatus();\n      if (this.status === VALID || this.status === PENDING) {\n        this._runAsyncValidator(opts.emitEvent);\n      }\n    }\n    if (opts.emitEvent !== false) {\n      this.valueChanges.emit(this.value);\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent && !opts.onlySelf) {\n      this._parent.updateValueAndValidity(opts);\n    }\n  }\n  /** @internal */\n  _updateTreeValidity(opts = {\n    emitEvent: true\n  }) {\n    this._forEachChild(ctrl => ctrl._updateTreeValidity(opts));\n    this.updateValueAndValidity({\n      onlySelf: true,\n      emitEvent: opts.emitEvent\n    });\n  }\n  _setInitialStatus() {\n    this.status = this._allControlsDisabled() ? DISABLED : VALID;\n  }\n  _runValidator() {\n    return this.validator ? this.validator(this) : null;\n  }\n  _runAsyncValidator(emitEvent) {\n    if (this.asyncValidator) {\n      this.status = PENDING;\n      this._hasOwnPendingAsyncValidator = true;\n      const obs = toObservable(this.asyncValidator(this));\n      this._asyncValidationSubscription = obs.subscribe(errors => {\n        this._hasOwnPendingAsyncValidator = false;\n        // This will trigger the recalculation of the validation status, which depends on\n        // the state of the asynchronous validation (whether it is in progress or not). So, it is\n        // necessary that we have updated the `_hasOwnPendingAsyncValidator` boolean flag first.\n        this.setErrors(errors, {\n          emitEvent\n        });\n      });\n    }\n  }\n  _cancelExistingSubscription() {\n    if (this._asyncValidationSubscription) {\n      this._asyncValidationSubscription.unsubscribe();\n      this._hasOwnPendingAsyncValidator = false;\n    }\n  }\n  /**\n   * Sets errors on a form control when running validations manually, rather than automatically.\n   *\n   * Calling `setErrors` also updates the validity of the parent control.\n   *\n   * @param opts Configuration options that determine how the control propagates\n   * changes and emits events after the control errors are set.\n   * * `emitEvent`: When true or not supplied (the default), the `statusChanges`\n   * observable emits an event after the errors are set.\n   *\n   * @usageNotes\n   *\n   * ### Manually set the errors for a control\n   *\n   * ```\n   * const login = new FormControl('someLogin');\n   * login.setErrors({\n   *   notUnique: true\n   * });\n   *\n   * expect(login.valid).toEqual(false);\n   * expect(login.errors).toEqual({ notUnique: true });\n   *\n   * login.setValue('someOtherLogin');\n   *\n   * expect(login.valid).toEqual(true);\n   * ```\n   */\n  setErrors(errors, opts = {}) {\n    this.errors = errors;\n    this._updateControlsErrors(opts.emitEvent !== false);\n  }\n  /**\n   * Retrieves a child control given the control's name or path.\n   *\n   * @param path A dot-delimited string or array of string/number values that define the path to the\n   * control. If a string is provided, passing it as a string literal will result in improved type\n   * information. Likewise, if an array is provided, passing it `as const` will cause improved type\n   * information to be available.\n   *\n   * @usageNotes\n   * ### Retrieve a nested control\n   *\n   * For example, to get a `name` control nested within a `person` sub-group:\n   *\n   * * `this.form.get('person.name');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['person', 'name'] as const);` // `as const` gives improved typings\n   *\n   * ### Retrieve a control in a FormArray\n   *\n   * When accessing an element inside a FormArray, you can use an element index.\n   * For example, to get a `price` control from the first element in an `items` array you can use:\n   *\n   * * `this.form.get('items.0.price');`\n   *\n   * -OR-\n   *\n   * * `this.form.get(['items', 0, 'price']);`\n   */\n  get(path) {\n    let currPath = path;\n    if (currPath == null) return null;\n    if (!Array.isArray(currPath)) currPath = currPath.split('.');\n    if (currPath.length === 0) return null;\n    return currPath.reduce((control, name) => control && control._find(name), this);\n  }\n  /**\n   * @description\n   * Reports error data for the control with the given path.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * @returns error data for that particular error. If the control or error is not present,\n   * null is returned.\n   */\n  getError(errorCode, path) {\n    const control = path ? this.get(path) : this;\n    return control && control.errors ? control.errors[errorCode] : null;\n  }\n  /**\n   * @description\n   * Reports whether the control with the given path has the error specified.\n   *\n   * @param errorCode The code of the error to check\n   * @param path A list of control names that designates how to move from the current control\n   * to the control that should be queried for errors.\n   *\n   * @usageNotes\n   * For example, for the following `FormGroup`:\n   *\n   * ```\n   * form = new FormGroup({\n   *   address: new FormGroup({ street: new FormControl() })\n   * });\n   * ```\n   *\n   * The path to the 'street' control from the root form would be 'address' -> 'street'.\n   *\n   * It can be provided to this method in one of two formats:\n   *\n   * 1. An array of string control names, e.g. `['address', 'street']`\n   * 1. A period-delimited list of control names in one string, e.g. `'address.street'`\n   *\n   * If no path is given, this method checks for the error on the current control.\n   *\n   * @returns whether the given error is present in the control at the given path.\n   *\n   * If the control is not present, false is returned.\n   */\n  hasError(errorCode, path) {\n    return !!this.getError(errorCode, path);\n  }\n  /**\n   * Retrieves the top-level ancestor of this control.\n   */\n  get root() {\n    let x = this;\n    while (x._parent) {\n      x = x._parent;\n    }\n    return x;\n  }\n  /** @internal */\n  _updateControlsErrors(emitEvent) {\n    this.status = this._calculateStatus();\n    if (emitEvent) {\n      this.statusChanges.emit(this.status);\n    }\n    if (this._parent) {\n      this._parent._updateControlsErrors(emitEvent);\n    }\n  }\n  /** @internal */\n  _initObservables() {\n    this.valueChanges = new EventEmitter();\n    this.statusChanges = new EventEmitter();\n  }\n  _calculateStatus() {\n    if (this._allControlsDisabled()) return DISABLED;\n    if (this.errors) return INVALID;\n    if (this._hasOwnPendingAsyncValidator || this._anyControlsHaveStatus(PENDING)) return PENDING;\n    if (this._anyControlsHaveStatus(INVALID)) return INVALID;\n    return VALID;\n  }\n  /** @internal */\n  _anyControlsHaveStatus(status) {\n    return this._anyControls(control => control.status === status);\n  }\n  /** @internal */\n  _anyControlsDirty() {\n    return this._anyControls(control => control.dirty);\n  }\n  /** @internal */\n  _anyControlsTouched() {\n    return this._anyControls(control => control.touched);\n  }\n  /** @internal */\n  _updatePristine(opts = {}) {\n    this.pristine = !this._anyControlsDirty();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updatePristine(opts);\n    }\n  }\n  /** @internal */\n  _updateTouched(opts = {}) {\n    this.touched = this._anyControlsTouched();\n    if (this._parent && !opts.onlySelf) {\n      this._parent._updateTouched(opts);\n    }\n  }\n  /** @internal */\n  _registerOnCollectionChange(fn) {\n    this._onCollectionChange = fn;\n  }\n  /** @internal */\n  _setUpdateStrategy(opts) {\n    if (isOptionsObj(opts) && opts.updateOn != null) {\n      this._updateOn = opts.updateOn;\n    }\n  }\n  /**\n   * Check to see if parent has been marked artificially dirty.\n   *\n   * @internal\n   */\n  _parentMarkedDirty(onlySelf) {\n    const parentDirty = this._parent && this._parent.dirty;\n    return !onlySelf && !!parentDirty && !this._parent._anyControlsDirty();\n  }\n  /** @internal */\n  _find(name) {\n    return null;\n  }\n  /**\n   * Internal implementation of the `setValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignValidators(validators) {\n    this._rawValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedValidatorFn = coerceToValidator(this._rawValidators);\n  }\n  /**\n   * Internal implementation of the `setAsyncValidators` method. Needs to be separated out into a\n   * different method, because it is called in the constructor and it can break cases where\n   * a control is extended.\n   */\n  _assignAsyncValidators(validators) {\n    this._rawAsyncValidators = Array.isArray(validators) ? validators.slice() : validators;\n    this._composedAsyncValidatorFn = coerceToAsyncValidator(this._rawAsyncValidators);\n  }\n}\n\n/**\n * Tracks the value and validity state of a group of `FormControl` instances.\n *\n * A `FormGroup` aggregates the values of each child `FormControl` into one object,\n * with each control name as the key.  It calculates its status by reducing the status values\n * of its children. For example, if one of the controls in a group is invalid, the entire\n * group becomes invalid.\n *\n * `FormGroup` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormArray`, and `FormRecord`.\n *\n * When instantiating a `FormGroup`, pass in a collection of child controls as the first\n * argument. The key for each child registers the name for the control.\n *\n * `FormGroup` is intended for use cases where the keys are known ahead of time.\n * If you need to dynamically add and remove controls, use {@link FormRecord} instead.\n *\n * `FormGroup` accepts an optional type parameter `TControl`, which is an object type with inner\n * control types as values.\n *\n * @usageNotes\n *\n * ### Create a form group with 2 controls\n *\n * ```\n * const form = new FormGroup({\n *   first: new FormControl('Nancy', Validators.minLength(2)),\n *   last: new FormControl('Drew'),\n * });\n *\n * console.log(form.value);   // {first: 'Nancy', last; 'Drew'}\n * console.log(form.status);  // 'VALID'\n * ```\n *\n * ### The type argument, and optional controls\n *\n * `FormGroup` accepts one generic argument, which is an object containing its inner controls.\n * This type will usually be inferred automatically, but you can always specify it explicitly if you\n * wish.\n *\n * If you have controls that are optional (i.e. they can be removed, you can use the `?` in the\n * type):\n *\n * ```\n * const form = new FormGroup<{\n *   first: FormControl<string|null>,\n *   middle?: FormControl<string|null>, // Middle name is optional.\n *   last: FormControl<string|null>,\n * }>({\n *   first: new FormControl('Nancy'),\n *   last: new FormControl('Drew'),\n * });\n * ```\n *\n * ### Create a form group with a group-level validator\n *\n * You include group-level validators as the second arg, or group-level async\n * validators as the third arg. These come in handy when you want to perform validation\n * that considers the value of more than one child control.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('', Validators.minLength(2)),\n *   passwordConfirm: new FormControl('', Validators.minLength(2)),\n * }, passwordMatchValidator);\n *\n *\n * function passwordMatchValidator(g: FormGroup) {\n *    return g.get('password').value === g.get('passwordConfirm').value\n *       ? null : {'mismatch': true};\n * }\n * ```\n *\n * Like `FormControl` instances, you choose to pass in\n * validators and async validators as part of an options object.\n *\n * ```\n * const form = new FormGroup({\n *   password: new FormControl('')\n *   passwordConfirm: new FormControl('')\n * }, { validators: passwordMatchValidator, asyncValidators: otherValidator });\n * ```\n *\n * ### Set the updateOn property for all controls in a form group\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * group level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const c = new FormGroup({\n *   one: new FormControl()\n * }, { updateOn: 'blur' });\n * ```\n *\n * ### Using a FormGroup with optional controls\n *\n * It is possible to have optional controls in a FormGroup. An optional control can be removed later\n * using `removeControl`, and can be omitted when calling `reset`. Optional controls must be\n * declared optional in the group's type.\n *\n * ```ts\n * const c = new FormGroup<{one?: FormControl<string>}>({\n *   one: new FormControl('')\n * });\n * ```\n *\n * Notice that `c.value.one` has type `string|null|undefined`. This is because calling `c.reset({})`\n * without providing the optional key `one` will cause it to become `null`.\n *\n * @publicApi\n */\nclass FormGroup extends AbstractControl {\n  /**\n   * Creates a new `FormGroup` instance.\n   *\n   * @param controls A collection of child controls. The key for each child is the name\n   * under which it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    (typeof ngDevMode === 'undefined' || ngDevMode) && validateFormGroupControls(controls);\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`. The status should be broadcasted via the `statusChanges` observable,\n      // so we set `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  registerControl(name, control) {\n    if (this.controls[name]) return this.controls[name];\n    this.controls[name] = control;\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n    return control;\n  }\n  addControl(name, control, options = {}) {\n    this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Remove a control from this group. In a strongly-typed group, required controls cannot be\n   * removed.\n   *\n   * This method also updates the value and validity of the control.\n   *\n   * @param name The control name to remove from the collection\n   * @param options Specifies whether this FormGroup instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeControl(name, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  setControl(name, control, options = {}) {\n    if (this.controls[name]) this.controls[name]._registerOnCollectionChange(() => {});\n    delete this.controls[name];\n    if (control) this.registerControl(name, control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  contains(controlName) {\n    return this.controls.hasOwnProperty(controlName) && this.controls[controlName].enabled;\n  }\n  /**\n   * Sets the value of the `FormGroup`. It accepts an object that matches\n   * the structure of the group, with control names as keys.\n   *\n   * @usageNotes\n   * ### Set the complete value for the form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl(),\n   *   last: new FormControl()\n   * });\n   *\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.setValue({first: 'Nancy', last: 'Drew'});\n   * console.log(form.value);   // {first: 'Nancy', last: 'Drew'}\n   * ```\n   *\n   * @throws When strict checks fail, such as setting the value of a control\n   * that doesn't exist or if you exclude a value of a control that does exist.\n   *\n   * @param value The new value for the control that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events after the value changes.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, true, value);\n    Object.keys(value).forEach(name => {\n      assertControlPresent(this, true, name);\n      this.controls[name].setValue(value[name], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormGroup`. It accepts an object with control\n   * names as keys, and does its best to match the values to the correct controls\n   * in the group.\n   *\n   * It accepts both super-sets and sub-sets of the group without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the value for a form group\n   *\n   * ```\n   * const form = new FormGroup({\n   *    first: new FormControl(),\n   *    last: new FormControl()\n   * });\n   * console.log(form.value);   // {first: null, last: null}\n   *\n   * form.patchValue({first: 'Nancy'});\n   * console.log(form.value);   // {first: 'Nancy', last: null}\n   * ```\n   *\n   * @param value The object that matches the structure of the group.\n   * @param options Configuration options that determine how the control propagates changes and\n   * emits events after the value is patched.\n   * * `onlySelf`: When true, each change only affects this control and not its parent. Default is\n   * true.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control value\n   * is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values, so\n    // we just ignore such cases when a field containing FormGroup instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    Object.keys(value).forEach(name => {\n      // The compiler cannot see through the uninstantiated conditional type of `this.controls`, so\n      // `as any` is required.\n      const control = this.controls[name];\n      if (control) {\n        control.patchValue( /* Guaranteed to be present, due to the outer forEach. */value[name], {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormGroup`, marks all descendants `pristine` and `untouched` and sets\n   * the value of all descendants to their default values, or null if no defaults were provided.\n   *\n   * You reset to a specific form state by passing in a map of states\n   * that matches the structure of your form, with control names as keys. The state\n   * is a standalone value or a form state object with both a value and a disabled\n   * status.\n   *\n   * @param value Resets the control with an initial value,\n   * or an object that defines the initial value and disabled state.\n   *\n   * @param options Configuration options that determine how the control propagates changes\n   * and emits events when the group is reset.\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default is\n   * false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   *\n   * @usageNotes\n   *\n   * ### Reset the form group values\n   *\n   * ```ts\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * console.log(form.value);  // {first: 'first name', last: 'last name'}\n   *\n   * form.reset({ first: 'name', last: 'last name' });\n   *\n   * console.log(form.value);  // {first: 'name', last: 'last name'}\n   * ```\n   *\n   * ### Reset the form group values and disabled status\n   *\n   * ```\n   * const form = new FormGroup({\n   *   first: new FormControl('first name'),\n   *   last: new FormControl('last name')\n   * });\n   *\n   * form.reset({\n   *   first: {value: 'name', disabled: true},\n   *   last: 'last'\n   * });\n   *\n   * console.log(form.value);  // {last: 'last'}\n   * console.log(form.get('first').status);  // 'DISABLED'\n   * ```\n   */\n  reset(value = {}, options = {}) {\n    this._forEachChild((control, name) => {\n      control.reset(value ? value[name] : null, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the `FormGroup`, including any disabled controls.\n   *\n   * Retrieves all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this._reduceChildren({}, (acc, control, name) => {\n      acc[name] = control.getRawValue();\n      return acc;\n    });\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this._reduceChildren(false, (updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    });\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    Object.keys(this.controls).forEach(key => {\n      // The list of controls can change (for ex. controls might be removed) while the loop\n      // is running (as a result of invoking Forms API in `valueChanges` subscription), so we\n      // have to null check before invoking the callback.\n      const control = this.controls[key];\n      control && cb(control, key);\n    });\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => {\n      control.setParent(this);\n      control._registerOnCollectionChange(this._onCollectionChange);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this._reduceValue();\n  }\n  /** @internal */\n  _anyControls(condition) {\n    for (const [controlName, control] of Object.entries(this.controls)) {\n      if (this.contains(controlName) && condition(control)) {\n        return true;\n      }\n    }\n    return false;\n  }\n  /** @internal */\n  _reduceValue() {\n    let acc = {};\n    return this._reduceChildren(acc, (acc, control, name) => {\n      if (control.enabled || this.disabled) {\n        acc[name] = control.value;\n      }\n      return acc;\n    });\n  }\n  /** @internal */\n  _reduceChildren(initValue, fn) {\n    let res = initValue;\n    this._forEachChild((control, name) => {\n      res = fn(res, control, name);\n    });\n    return res;\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const controlName of Object.keys(this.controls)) {\n      if (this.controls[controlName].enabled) {\n        return false;\n      }\n    }\n    return Object.keys(this.controls).length > 0 || this.disabled;\n  }\n  /** @internal */\n  _find(name) {\n    return this.controls.hasOwnProperty(name) ? this.controls[name] : null;\n  }\n}\n/**\n * Will validate that none of the controls has a key with a dot\n * Throws other wise\n */\nfunction validateFormGroupControls(controls) {\n  const invalidKeys = Object.keys(controls).filter(key => key.includes('.'));\n  if (invalidKeys.length > 0) {\n    // TODO: make this an error once there are no more uses in G3\n    console.warn(`FormGroup keys cannot include \\`.\\`, please replace the keys for: ${invalidKeys.join(',')}.`);\n  }\n}\nconst UntypedFormGroup = FormGroup;\n/**\n * @description\n * Asserts that the given control is an instance of `FormGroup`\n *\n * @publicApi\n */\nconst isFormGroup = control => control instanceof FormGroup;\n/**\n * Tracks the value and validity state of a collection of `FormControl` instances, each of which has\n * the same value type.\n *\n * `FormRecord` is very similar to {@link FormGroup}, except it can be used with a dynamic keys,\n * with controls added and removed as needed.\n *\n * `FormRecord` accepts one generic argument, which describes the type of the controls it contains.\n *\n * @usageNotes\n *\n * ```\n * let numbers = new FormRecord({bill: new FormControl('415-123-456')});\n * numbers.addControl('bob', new FormControl('415-234-567'));\n * numbers.removeControl('bill');\n * ```\n *\n * @publicApi\n */\nclass FormRecord extends FormGroup {}\n/**\n * @description\n * Asserts that the given control is an instance of `FormRecord`\n *\n * @publicApi\n */\nconst isFormRecord = control => control instanceof FormRecord;\n\n/**\n * Token to provide to allow SetDisabledState to always be called when a CVA is added, regardless of\n * whether the control is disabled or enabled.\n *\n * @see {@link FormsModule#withconfig}\n */\nconst CALL_SET_DISABLED_STATE = /*#__PURE__*/new InjectionToken('CallSetDisabledState', {\n  providedIn: 'root',\n  factory: () => setDisabledStateDefault\n});\n/**\n * Whether to use the fixed setDisabledState behavior by default.\n */\nconst setDisabledStateDefault = 'always';\nfunction controlPath(name, parent) {\n  return [...parent.path, name];\n}\n/**\n * Links a Form control and a Form directive by setting up callbacks (such as `onChange`) on both\n * instances. This function is typically invoked when form directive is being initialized.\n *\n * @param control Form control instance that should be linked.\n * @param dir Directive that should be linked with a given control.\n */\nfunction setUpControl(control, dir, callSetDisabledState = setDisabledStateDefault) {\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    if (!control) _throwError(dir, 'Cannot find control with');\n    if (!dir.valueAccessor) _throwMissingValueAccessorError(dir);\n  }\n  setUpValidators(control, dir);\n  dir.valueAccessor.writeValue(control.value);\n  // The legacy behavior only calls the CVA's `setDisabledState` if the control is disabled.\n  // If the `callSetDisabledState` option is set to `always`, then this bug is fixed and\n  // the method is always called.\n  if (control.disabled || callSetDisabledState === 'always') {\n    dir.valueAccessor.setDisabledState?.(control.disabled);\n  }\n  setUpViewChangePipeline(control, dir);\n  setUpModelChangePipeline(control, dir);\n  setUpBlurPipeline(control, dir);\n  setUpDisabledChangeHandler(control, dir);\n}\n/**\n * Reverts configuration performed by the `setUpControl` control function.\n * Effectively disconnects form control with a given form directive.\n * This function is typically invoked when corresponding form directive is being destroyed.\n *\n * @param control Form control which should be cleaned up.\n * @param dir Directive that should be disconnected from a given control.\n * @param validateControlPresenceOnChange Flag that indicates whether onChange handler should\n *     contain asserts to verify that it's not called once directive is destroyed. We need this flag\n *     to avoid potentially breaking changes caused by better control cleanup introduced in #39235.\n */\nfunction cleanUpControl(control, dir, validateControlPresenceOnChange = true) {\n  const noop = () => {\n    if (validateControlPresenceOnChange && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      _noControlError(dir);\n    }\n  };\n  // The `valueAccessor` field is typically defined on FromControl and FormControlName directive\n  // instances and there is a logic in `selectValueAccessor` function that throws if it's not the\n  // case. We still check the presence of `valueAccessor` before invoking its methods to make sure\n  // that cleanup works correctly if app code or tests are setup to ignore the error thrown from\n  // `selectValueAccessor`. See https://github.com/angular/angular/issues/40521.\n  if (dir.valueAccessor) {\n    dir.valueAccessor.registerOnChange(noop);\n    dir.valueAccessor.registerOnTouched(noop);\n  }\n  cleanUpValidators(control, dir);\n  if (control) {\n    dir._invokeOnDestroyCallbacks();\n    control._registerOnCollectionChange(() => {});\n  }\n}\nfunction registerOnValidatorChange(validators, onChange) {\n  validators.forEach(validator => {\n    if (validator.registerOnValidatorChange) validator.registerOnValidatorChange(onChange);\n  });\n}\n/**\n * Sets up disabled change handler function on a given form control if ControlValueAccessor\n * associated with a given directive instance supports the `setDisabledState` call.\n *\n * @param control Form control where disabled change handler should be setup.\n * @param dir Corresponding directive instance associated with this control.\n */\nfunction setUpDisabledChangeHandler(control, dir) {\n  if (dir.valueAccessor.setDisabledState) {\n    const onDisabledChange = isDisabled => {\n      dir.valueAccessor.setDisabledState(isDisabled);\n    };\n    control.registerOnDisabledChange(onDisabledChange);\n    // Register a callback function to cleanup disabled change handler\n    // from a control instance when a directive is destroyed.\n    dir._registerOnDestroy(() => {\n      control._unregisterOnDisabledChange(onDisabledChange);\n    });\n  }\n}\n/**\n * Sets up sync and async directive validators on provided form control.\n * This function merges validators from the directive into the validators of the control.\n *\n * @param control Form control where directive validators should be setup.\n * @param dir Directive instance that contains validators to be setup.\n */\nfunction setUpValidators(control, dir) {\n  const validators = getControlValidators(control);\n  if (dir.validator !== null) {\n    control.setValidators(mergeValidators(validators, dir.validator));\n  } else if (typeof validators === 'function') {\n    // If sync validators are represented by a single validator function, we force the\n    // `Validators.compose` call to happen by executing the `setValidators` function with\n    // an array that contains that function. We need this to avoid possible discrepancies in\n    // validators behavior, so sync validators are always processed by the `Validators.compose`.\n    // Note: we should consider moving this logic inside the `setValidators` function itself, so we\n    // have consistent behavior on AbstractControl API level. The same applies to the async\n    // validators logic below.\n    control.setValidators([validators]);\n  }\n  const asyncValidators = getControlAsyncValidators(control);\n  if (dir.asyncValidator !== null) {\n    control.setAsyncValidators(mergeValidators(asyncValidators, dir.asyncValidator));\n  } else if (typeof asyncValidators === 'function') {\n    control.setAsyncValidators([asyncValidators]);\n  }\n  // Re-run validation when validator binding changes, e.g. minlength=3 -> minlength=4\n  const onValidatorChange = () => control.updateValueAndValidity();\n  registerOnValidatorChange(dir._rawValidators, onValidatorChange);\n  registerOnValidatorChange(dir._rawAsyncValidators, onValidatorChange);\n}\n/**\n * Cleans up sync and async directive validators on provided form control.\n * This function reverts the setup performed by the `setUpValidators` function, i.e.\n * removes directive-specific validators from a given control instance.\n *\n * @param control Form control from where directive validators should be removed.\n * @param dir Directive instance that contains validators to be removed.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpValidators(control, dir) {\n  let isControlUpdated = false;\n  if (control !== null) {\n    if (dir.validator !== null) {\n      const validators = getControlValidators(control);\n      if (Array.isArray(validators) && validators.length > 0) {\n        // Filter out directive validator function.\n        const updatedValidators = validators.filter(validator => validator !== dir.validator);\n        if (updatedValidators.length !== validators.length) {\n          isControlUpdated = true;\n          control.setValidators(updatedValidators);\n        }\n      }\n    }\n    if (dir.asyncValidator !== null) {\n      const asyncValidators = getControlAsyncValidators(control);\n      if (Array.isArray(asyncValidators) && asyncValidators.length > 0) {\n        // Filter out directive async validator function.\n        const updatedAsyncValidators = asyncValidators.filter(asyncValidator => asyncValidator !== dir.asyncValidator);\n        if (updatedAsyncValidators.length !== asyncValidators.length) {\n          isControlUpdated = true;\n          control.setAsyncValidators(updatedAsyncValidators);\n        }\n      }\n    }\n  }\n  // Clear onValidatorChange callbacks by providing a noop function.\n  const noop = () => {};\n  registerOnValidatorChange(dir._rawValidators, noop);\n  registerOnValidatorChange(dir._rawAsyncValidators, noop);\n  return isControlUpdated;\n}\nfunction setUpViewChangePipeline(control, dir) {\n  dir.valueAccessor.registerOnChange(newValue => {\n    control._pendingValue = newValue;\n    control._pendingChange = true;\n    control._pendingDirty = true;\n    if (control.updateOn === 'change') updateControl(control, dir);\n  });\n}\nfunction setUpBlurPipeline(control, dir) {\n  dir.valueAccessor.registerOnTouched(() => {\n    control._pendingTouched = true;\n    if (control.updateOn === 'blur' && control._pendingChange) updateControl(control, dir);\n    if (control.updateOn !== 'submit') control.markAsTouched();\n  });\n}\nfunction updateControl(control, dir) {\n  if (control._pendingDirty) control.markAsDirty();\n  control.setValue(control._pendingValue, {\n    emitModelToViewChange: false\n  });\n  dir.viewToModelUpdate(control._pendingValue);\n  control._pendingChange = false;\n}\nfunction setUpModelChangePipeline(control, dir) {\n  const onChange = (newValue, emitModelEvent) => {\n    // control -> view\n    dir.valueAccessor.writeValue(newValue);\n    // control -> ngModel\n    if (emitModelEvent) dir.viewToModelUpdate(newValue);\n  };\n  control.registerOnChange(onChange);\n  // Register a callback function to cleanup onChange handler\n  // from a control instance when a directive is destroyed.\n  dir._registerOnDestroy(() => {\n    control._unregisterOnChange(onChange);\n  });\n}\n/**\n * Links a FormGroup or FormArray instance and corresponding Form directive by setting up validators\n * present in the view.\n *\n * @param control FormGroup or FormArray instance that should be linked.\n * @param dir Directive that provides view validators.\n */\nfunction setUpFormContainer(control, dir) {\n  if (control == null && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'Cannot find control with');\n  setUpValidators(control, dir);\n}\n/**\n * Reverts the setup performed by the `setUpFormContainer` function.\n *\n * @param control FormGroup or FormArray instance that should be cleaned up.\n * @param dir Directive that provided view validators.\n * @returns true if a control was updated as a result of this action.\n */\nfunction cleanUpFormContainer(control, dir) {\n  return cleanUpValidators(control, dir);\n}\nfunction _noControlError(dir) {\n  return _throwError(dir, 'There is no FormControl instance attached to form control element with');\n}\nfunction _throwError(dir, message) {\n  const messageEnd = _describeControlLocation(dir);\n  throw new Error(`${message} ${messageEnd}`);\n}\nfunction _describeControlLocation(dir) {\n  const path = dir.path;\n  if (path && path.length > 1) return `path: '${path.join(' -> ')}'`;\n  if (path?.[0]) return `name: '${path}'`;\n  return 'unspecified name attribute';\n}\nfunction _throwMissingValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ɵRuntimeError(-1203 /* RuntimeErrorCode.NG_MISSING_VALUE_ACCESSOR */, `No value accessor for form control ${loc}.`);\n}\nfunction _throwInvalidValueAccessorError(dir) {\n  const loc = _describeControlLocation(dir);\n  throw new ɵRuntimeError(1200 /* RuntimeErrorCode.NG_VALUE_ACCESSOR_NOT_PROVIDED */, `Value accessor was not provided as an array for form control with ${loc}. ` + `Check that the \\`NG_VALUE_ACCESSOR\\` token is configured as a \\`multi: true\\` provider.`);\n}\nfunction isPropertyUpdated(changes, viewModel) {\n  if (!changes.hasOwnProperty('model')) return false;\n  const change = changes['model'];\n  if (change.isFirstChange()) return true;\n  return !Object.is(viewModel, change.currentValue);\n}\nfunction isBuiltInAccessor(valueAccessor) {\n  // Check if a given value accessor is an instance of a class that directly extends\n  // `BuiltInControlValueAccessor` one.\n  return Object.getPrototypeOf(valueAccessor.constructor) === BuiltInControlValueAccessor;\n}\nfunction syncPendingControls(form, directives) {\n  form._syncPendingControls();\n  directives.forEach(dir => {\n    const control = dir.control;\n    if (control.updateOn === 'submit' && control._pendingChange) {\n      dir.viewToModelUpdate(control._pendingValue);\n      control._pendingChange = false;\n    }\n  });\n}\n// TODO: vsavkin remove it once https://github.com/angular/angular/issues/3011 is implemented\nfunction selectValueAccessor(dir, valueAccessors) {\n  if (!valueAccessors) return null;\n  if (!Array.isArray(valueAccessors) && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwInvalidValueAccessorError(dir);\n  let defaultAccessor = undefined;\n  let builtinAccessor = undefined;\n  let customAccessor = undefined;\n  valueAccessors.forEach(v => {\n    if (v.constructor === DefaultValueAccessor) {\n      defaultAccessor = v;\n    } else if (isBuiltInAccessor(v)) {\n      if (builtinAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one built-in value accessor matches form control with');\n      builtinAccessor = v;\n    } else {\n      if (customAccessor && (typeof ngDevMode === 'undefined' || ngDevMode)) _throwError(dir, 'More than one custom value accessor matches form control with');\n      customAccessor = v;\n    }\n  });\n  if (customAccessor) return customAccessor;\n  if (builtinAccessor) return builtinAccessor;\n  if (defaultAccessor) return defaultAccessor;\n  if (typeof ngDevMode === 'undefined' || ngDevMode) {\n    _throwError(dir, 'No valid value accessor for form control with');\n  }\n  return null;\n}\nfunction removeListItem$1(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\n// TODO(kara): remove after deprecation period\nfunction _ngModelWarning(name, type, instance, warningConfig) {\n  if (warningConfig === 'never') return;\n  if ((warningConfig === null || warningConfig === 'once') && !type._ngModelWarningSentOnce || warningConfig === 'always' && !instance._ngModelWarningSent) {\n    console.warn(ngModelWarning(name));\n    type._ngModelWarningSentOnce = true;\n    instance._ngModelWarningSent = true;\n  }\n}\nconst formDirectiveProvider$1 = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgForm)\n};\nconst resolvedPromise$1 = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a top-level `FormGroup` instance and binds it to a form\n * to track aggregate form value and validation status.\n *\n * As soon as you import the `FormsModule`, this directive becomes active by default on\n * all `<form>` tags.  You don't need to add a special selector.\n *\n * You optionally export the directive into a local template variable using `ngForm` as the key\n * (ex: `#myForm=\"ngForm\"`). This is optional, but useful.  Many properties from the underlying\n * `FormGroup` instance are duplicated on the directive itself, so a reference to it\n * gives you access to the aggregate value and validity status of the form, as well as\n * user interaction properties like `dirty` and `touched`.\n *\n * To register child controls with the form, use `NgModel` with a `name`\n * attribute. You may use `NgModelGroup` to create sub-groups within the form.\n *\n * If necessary, listen to the directive's `ngSubmit` event to be notified when the user has\n * triggered a form submission. The `ngSubmit` event emits the original form\n * submission event.\n *\n * In template driven forms, all `<form>` tags are automatically tagged as `NgForm`.\n * To import the `FormsModule` but skip its usage in some forms,\n * for example, to use native HTML5 validation, add the `ngNoForm` and the `<form>`\n * tags won't create an `NgForm` directive. In reactive forms, using `ngNoForm` is\n * unnecessary because the `<form>` tags are inert. In that case, you would\n * refrain from using the `formGroup` directive.\n *\n * @usageNotes\n *\n * ### Listening for form submission\n *\n * The following example shows how to capture the form values from the \"ngSubmit\" event.\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Setting the update options\n *\n * The following example shows you how to change the \"updateOn\" option from its default using\n * ngFormOptions.\n *\n * ```html\n * <form [ngFormOptions]=\"{updateOn: 'blur'}\">\n *    <input name=\"one\" ngModel>  <!-- this ngModel will update on blur -->\n * </form>\n * ```\n *\n * ### Native DOM validation UI\n *\n * In order to prevent the native DOM form validation UI from interfering with Angular's form\n * validation, Angular automatically adds the `novalidate` attribute on any `<form>` whenever\n * `FormModule` or `ReactiveFormModule` are imported into the application.\n * If you want to explicitly enable native DOM validation UI with Angular forms, you can add the\n * `ngNativeValidate` attribute to the `<form>` element:\n *\n * ```html\n * <form ngNativeValidate>\n *   ...\n * </form>\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgForm = /*#__PURE__*/(() => {\n  class NgForm extends ControlContainer {\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      /**\n       * @description\n       * Returns whether the form submission has been triggered.\n       */\n      this.submitted = false;\n      this._directives = new Set();\n      /**\n       * @description\n       * Event emitter for the \"ngSubmit\" event\n       */\n      this.ngSubmit = new EventEmitter();\n      this.form = new FormGroup({}, composeValidators(validators), composeAsyncValidators(asyncValidators));\n    }\n    /** @nodoc */\n    ngAfterViewInit() {\n      this._setUpdateStrategy();\n    }\n    /**\n     * @description\n     * The directive instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * The internal `FormGroup` instance.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it is always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Returns a map of the controls in this group.\n     */\n    get controls() {\n      return this.form.controls;\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    addControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        dir.control = container.registerControl(dir.name, dir.control);\n        setUpControl(dir.control, dir, this.callSetDisabledState);\n        dir.control.updateValueAndValidity({\n          emitEvent: false\n        });\n        this._directives.add(dir);\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `NgModel` directive.\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `NgModel` instance from the internal list of directives\n     *\n     * @param dir The `NgModel` directive instance.\n     */\n    removeControl(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n        this._directives.delete(dir);\n      });\n    }\n    /**\n     * @description\n     * Adds a new `NgModelGroup` directive instance to the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    addFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        const group = new FormGroup({});\n        setUpFormContainer(group, dir);\n        container.registerControl(dir.name, group);\n        group.updateValueAndValidity({\n          emitEvent: false\n        });\n      });\n    }\n    /**\n     * @description\n     * Removes the `NgModelGroup` directive instance from the form.\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    removeFormGroup(dir) {\n      resolvedPromise$1.then(() => {\n        const container = this._findContainer(dir.path);\n        if (container) {\n          container.removeControl(dir.name);\n        }\n      });\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `NgModelGroup` directive instance\n     *\n     * @param dir The `NgModelGroup` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `NgControl` directive.\n     *\n     * @param dir The `NgControl` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      resolvedPromise$1.then(() => {\n        const ctrl = this.form.get(dir.path);\n        ctrl.setValue(value);\n      });\n    }\n    /**\n     * @description\n     * Sets the value for this `FormGroup`.\n     *\n     * @param value The new value\n     */\n    setValue(value) {\n      this.control.setValue(value);\n    }\n    /**\n     * @description\n     * Method called when the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this.submitted = true;\n      syncPendingControls(this.form, this._directives);\n      this.ngSubmit.emit($event);\n      // Forms with `method=\"dialog\"` have some special behavior\n      // that won't reload the page and that shouldn't be prevented.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this.submitted = false;\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.form._updateOn = this.options.updateOn;\n      }\n    }\n    _findContainer(path) {\n      path.pop();\n      return path.length ? this.form.get(path) : this.form;\n    }\n    static {\n      this.ɵfac = function NgForm_Factory(t) {\n        return new (t || NgForm)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgForm,\n        selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"formGroup\", \"\"], [\"ng-form\"], [\"\", \"ngForm\", \"\"]],\n        hostBindings: function NgForm_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"submit\", function NgForm_submit_HostBindingHandler($event) {\n              return ctx.onSubmit($event);\n            })(\"reset\", function NgForm_reset_HostBindingHandler() {\n              return ctx.onReset();\n            });\n          }\n        },\n        inputs: {\n          options: [i0.ɵɵInputFlags.None, \"ngFormOptions\", \"options\"]\n        },\n        outputs: {\n          ngSubmit: \"ngSubmit\"\n        },\n        exportAs: [\"ngForm\"],\n        features: [i0.ɵɵProvidersFeature([formDirectiveProvider$1]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgForm;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction removeListItem(list, el) {\n  const index = list.indexOf(el);\n  if (index > -1) list.splice(index, 1);\n}\nfunction isFormControlState(formState) {\n  return typeof formState === 'object' && formState !== null && Object.keys(formState).length === 2 && 'value' in formState && 'disabled' in formState;\n}\nconst FormControl = class FormControl extends AbstractControl {\n  constructor(\n  // formState and defaultValue will only be null if T is nullable\n  formState = null, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    /** @publicApi */\n    this.defaultValue = null;\n    /** @internal */\n    this._onChange = [];\n    /** @internal */\n    this._pendingChange = false;\n    this._applyFormState(formState);\n    this._setUpdateStrategy(validatorOrOpts);\n    this._initObservables();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set\n      // `emitEvent` to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n    if (isOptionsObj(validatorOrOpts) && (validatorOrOpts.nonNullable || validatorOrOpts.initialValueIsDefault)) {\n      if (isFormControlState(formState)) {\n        this.defaultValue = formState.value;\n      } else {\n        this.defaultValue = formState;\n      }\n    }\n  }\n  setValue(value, options = {}) {\n    this.value = this._pendingValue = value;\n    if (this._onChange.length && options.emitModelToViewChange !== false) {\n      this._onChange.forEach(changeFn => changeFn(this.value, options.emitViewToModelChange !== false));\n    }\n    this.updateValueAndValidity(options);\n  }\n  patchValue(value, options = {}) {\n    this.setValue(value, options);\n  }\n  reset(formState = this.defaultValue, options = {}) {\n    this._applyFormState(formState);\n    this.markAsPristine(options);\n    this.markAsUntouched(options);\n    this.setValue(this.value, options);\n    this._pendingChange = false;\n  }\n  /**  @internal */\n  _updateValue() {}\n  /**  @internal */\n  _anyControls(condition) {\n    return false;\n  }\n  /**  @internal */\n  _allControlsDisabled() {\n    return this.disabled;\n  }\n  registerOnChange(fn) {\n    this._onChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnChange(fn) {\n    removeListItem(this._onChange, fn);\n  }\n  registerOnDisabledChange(fn) {\n    this._onDisabledChange.push(fn);\n  }\n  /** @internal */\n  _unregisterOnDisabledChange(fn) {\n    removeListItem(this._onDisabledChange, fn);\n  }\n  /** @internal */\n  _forEachChild(cb) {}\n  /** @internal */\n  _syncPendingControls() {\n    if (this.updateOn === 'submit') {\n      if (this._pendingDirty) this.markAsDirty();\n      if (this._pendingTouched) this.markAsTouched();\n      if (this._pendingChange) {\n        this.setValue(this._pendingValue, {\n          onlySelf: true,\n          emitModelToViewChange: false\n        });\n        return true;\n      }\n    }\n    return false;\n  }\n  _applyFormState(formState) {\n    if (isFormControlState(formState)) {\n      this.value = this._pendingValue = formState.value;\n      formState.disabled ? this.disable({\n        onlySelf: true,\n        emitEvent: false\n      }) : this.enable({\n        onlySelf: true,\n        emitEvent: false\n      });\n    } else {\n      this.value = this._pendingValue = formState;\n    }\n  }\n};\nconst UntypedFormControl = FormControl;\n/**\n * @description\n * Asserts that the given control is an instance of `FormControl`\n *\n * @publicApi\n */\nconst isFormControl = control => control instanceof FormControl;\n\n/**\n * @description\n * A base class for code shared between the `NgModelGroup` and `FormGroupName` directives.\n *\n * @publicApi\n */\nlet AbstractFormGroupDirective = /*#__PURE__*/(() => {\n  class AbstractFormGroupDirective extends ControlContainer {\n    /** @nodoc */\n    ngOnInit() {\n      this._checkParentType();\n      // Register the group with its parent group.\n      this.formDirective.addFormGroup(this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        // Remove the group from its parent group.\n        this.formDirective.removeFormGroup(this);\n      }\n    }\n    /**\n     * @description\n     * The `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormGroup(this);\n    }\n    /**\n     * @description\n     * The path to this group from the top-level directive.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /** @internal */\n    _checkParentType() {}\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵAbstractFormGroupDirective_BaseFactory;\n        return function AbstractFormGroupDirective_Factory(t) {\n          return (ɵAbstractFormGroupDirective_BaseFactory || (ɵAbstractFormGroupDirective_BaseFactory = i0.ɵɵgetInheritedFactory(AbstractFormGroupDirective)))(t || AbstractFormGroupDirective);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: AbstractFormGroupDirective,\n        features: [i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return AbstractFormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction modelParentException() {\n  return new ɵRuntimeError(1350 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP */, `\n    ngModel cannot be used to register form controls with a parent formGroup directive.  Try using\n    formGroup's partner directive \"formControlName\" instead.  Example:\n\n    ${formControlNameExample}\n\n    Or, if you'd like to avoid registering this form control, indicate that it's standalone in ngModelOptions:\n\n    Example:\n\n    ${ngModelWithFormGroupExample}`);\n}\nfunction formGroupNameException() {\n  return new ɵRuntimeError(1351 /* RuntimeErrorCode.NGMODEL_IN_FORM_GROUP_NAME */, `\n    ngModel cannot be used to register form controls with a parent formGroupName or formArrayName directive.\n\n    Option 1: Use formControlName instead of ngModel (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Update ngModel's parent be ngModelGroup (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nfunction missingNameException() {\n  return new ɵRuntimeError(1352 /* RuntimeErrorCode.NGMODEL_WITHOUT_NAME */, `If ngModel is used within a form tag, either the name attribute must be set or the form\n    control must be defined as 'standalone' in ngModelOptions.\n\n    Example 1: <input [(ngModel)]=\"person.firstName\" name=\"first\">\n    Example 2: <input [(ngModel)]=\"person.firstName\" [ngModelOptions]=\"{standalone: true}\">`);\n}\nfunction modelGroupParentException() {\n  return new ɵRuntimeError(1353 /* RuntimeErrorCode.NGMODELGROUP_IN_FORM_GROUP */, `\n    ngModelGroup cannot be used with a parent formGroup directive.\n\n    Option 1: Use formGroupName instead of ngModelGroup (reactive strategy):\n\n    ${formGroupNameExample}\n\n    Option 2:  Use a regular form tag instead of the formGroup directive (template-driven strategy):\n\n    ${ngModelGroupExample}`);\n}\nconst modelGroupProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModelGroup)\n};\n/**\n * @description\n * Creates and binds a `FormGroup` instance to a DOM element.\n *\n * This directive can only be used as a child of `NgForm` (within `<form>` tags).\n *\n * Use this directive to validate a sub-group of your form separately from the\n * rest of your form, or if some values in your domain model make more sense\n * to consume together in a nested object.\n *\n * Provide a name for the sub-group and it will become the key\n * for the sub-group in the form's full value. If you need direct access, export the directive into\n * a local template variable using `ngModelGroup` (ex: `#myGroup=\"ngModelGroup\"`).\n *\n * @usageNotes\n *\n * ### Consuming controls in a grouping\n *\n * The following example shows you how to combine controls together in a sub-group\n * of the form.\n *\n * {@example forms/ts/ngModelGroup/ng_model_group_example.ts region='Component'}\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModelGroup = /*#__PURE__*/(() => {\n  class NgModelGroup extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n      super();\n      /**\n       * @description\n       * Tracks the name of the `NgModelGroup` bound to the directive. The name corresponds\n       * to a key in the parent `NgForm`.\n       */\n      this.name = '';\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw modelGroupParentException();\n      }\n    }\n    static {\n      this.ɵfac = function NgModelGroup_Factory(t) {\n        return new (t || NgModelGroup)(i0.ɵɵdirectiveInject(ControlContainer, 5), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgModelGroup,\n        selectors: [[\"\", \"ngModelGroup\", \"\"]],\n        inputs: {\n          name: [i0.ɵɵInputFlags.None, \"ngModelGroup\", \"name\"]\n        },\n        exportAs: [\"ngModelGroup\"],\n        features: [i0.ɵɵProvidersFeature([modelGroupProvider]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NgModelGroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formControlBinding$1 = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => NgModel)\n};\n/**\n * `ngModel` forces an additional change detection run when its inputs change:\n * E.g.:\n * ```\n * <div>{{myModel.valid}}</div>\n * <input [(ngModel)]=\"myValue\" #myModel=\"ngModel\">\n * ```\n * I.e. `ngModel` can export itself on the element and then be used in the template.\n * Normally, this would result in expressions before the `input` that use the exported directive\n * to have an old value as they have been\n * dirty checked before. As this is a very common case for `ngModel`, we added this second change\n * detection run.\n *\n * Notes:\n * - this is just one extra run no matter how many `ngModel`s have been changed.\n * - this is a general problem when using `exportAs` for directives!\n */\nconst resolvedPromise = /*#__PURE__*/(() => Promise.resolve())();\n/**\n * @description\n * Creates a `FormControl` instance from a [domain\n * model](https://en.wikipedia.org/wiki/Domain_model) and binds it to a form control element.\n *\n * The `FormControl` instance tracks the value, user interaction, and\n * validation status of the control and keeps the view synced with the model. If used\n * within a parent form, the directive also registers itself with the form as a child\n * control.\n *\n * This directive is used by itself or as part of a larger form. Use the\n * `ngModel` selector to activate it.\n *\n * It accepts a domain model as an optional `Input`. If you have a one-way binding\n * to `ngModel` with `[]` syntax, changing the domain model's value in the component\n * class sets the value in the view. If you have a two-way binding with `[()]` syntax\n * (also known as 'banana-in-a-box syntax'), the value in the UI always syncs back to\n * the domain model in your class.\n *\n * To inspect the properties of the associated `FormControl` (like the validity state),\n * export the directive into a local template variable using `ngModel` as the key (ex:\n * `#myVar=\"ngModel\"`). You can then access the control using the directive's `control` property.\n * However, the most commonly used properties (like `valid` and `dirty`) also exist on the control\n * for direct access. See a full list of properties directly available in\n * `AbstractControlDirective`.\n *\n * @see {@link RadioControlValueAccessor}\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using ngModel on a standalone control\n *\n * The following examples show a simple standalone control using `ngModel`:\n *\n * {@example forms/ts/simpleNgModel/simple_ng_model_example.ts region='Component'}\n *\n * When using the `ngModel` within `<form>` tags, you'll also need to supply a `name` attribute\n * so that the control can be registered with the parent form under that name.\n *\n * In the context of a parent form, it's often unnecessary to include one-way or two-way binding,\n * as the parent form syncs the value for you. You access its properties by exporting it into a\n * local template variable using `ngForm` such as (`#f=\"ngForm\"`). Use the variable where\n * needed on form submission.\n *\n * If you do need to populate initial values into your form, using a one-way binding for\n * `ngModel` tends to be sufficient as long as you use the exported form's value rather\n * than the domain model's value on submit.\n *\n * ### Using ngModel within a form\n *\n * The following example shows controls using `ngModel` within a form:\n *\n * {@example forms/ts/simpleForm/simple_form_example.ts region='Component'}\n *\n * ### Using a standalone ngModel within a group\n *\n * The following example shows you how to use a standalone ngModel control\n * within a form. This controls the display of the form, but doesn't contain form data.\n *\n * ```html\n * <form>\n *   <input name=\"login\" ngModel placeholder=\"Login\">\n *   <input type=\"checkbox\" ngModel [ngModelOptions]=\"{standalone: true}\"> Show more options?\n * </form>\n * <!-- form value: {login: ''} -->\n * ```\n *\n * ### Setting the ngModel `name` attribute through options\n *\n * The following example shows you an alternate way to set the name attribute. Here,\n * an attribute identified as name is used within a custom form control component. To still be able\n * to specify the NgModel's name, you must specify it using the `ngModelOptions` input instead.\n *\n * ```html\n * <form>\n *   <my-custom-form-control name=\"Nancy\" ngModel [ngModelOptions]=\"{name: 'user'}\">\n *   </my-custom-form-control>\n * </form>\n * <!-- form value: {user: ''} -->\n * ```\n *\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgModel = /*#__PURE__*/(() => {\n  class NgModel extends NgControl {\n    constructor(parent, validators, asyncValidators, valueAccessors, _changeDetectorRef, callSetDisabledState) {\n      super();\n      this._changeDetectorRef = _changeDetectorRef;\n      this.callSetDisabledState = callSetDisabledState;\n      this.control = new FormControl();\n      /** @internal */\n      this._registered = false;\n      /**\n       * @description\n       * Tracks the name bound to the directive. If a parent form exists, it\n       * uses this name as a key to retrieve this control's value.\n       */\n      this.name = '';\n      /**\n       * @description\n       * Event emitter for producing the `ngModelChange` event after\n       * the view model updates.\n       */\n      this.update = new EventEmitter();\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this._checkForErrors();\n      if (!this._registered || 'name' in changes) {\n        if (this._registered) {\n          this._checkName();\n          if (this.formDirective) {\n            // We can't call `formDirective.removeControl(this)`, because the `name` has already been\n            // changed. We also can't reset the name temporarily since the logic in `removeControl`\n            // is inside a promise and it won't run immediately. We work around it by giving it an\n            // object with the same shape instead.\n            const oldName = changes['name'].previousValue;\n            this.formDirective.removeControl({\n              name: oldName,\n              path: this._getPath(oldName)\n            });\n          }\n        }\n        this._setUpControl();\n      }\n      if ('isDisabled' in changes) {\n        this._updateDisabled(changes);\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        this._updateValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this.formDirective && this.formDirective.removeControl(this);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return this._getPath(this.name);\n    }\n    /**\n     * @description\n     * The top-level directive for this control if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value emitted by `ngModelChange`.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _setUpControl() {\n      this._setUpdateStrategy();\n      this._isStandalone() ? this._setUpStandalone() : this.formDirective.addControl(this);\n      this._registered = true;\n    }\n    _setUpdateStrategy() {\n      if (this.options && this.options.updateOn != null) {\n        this.control._updateOn = this.options.updateOn;\n      }\n    }\n    _isStandalone() {\n      return !this._parent || !!(this.options && this.options.standalone);\n    }\n    _setUpStandalone() {\n      setUpControl(this.control, this, this.callSetDisabledState);\n      this.control.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _checkForErrors() {\n      if (!this._isStandalone()) {\n        this._checkParentType();\n      }\n      this._checkName();\n    }\n    _checkParentType() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!(this._parent instanceof NgModelGroup) && this._parent instanceof AbstractFormGroupDirective) {\n          throw formGroupNameException();\n        } else if (!(this._parent instanceof NgModelGroup) && !(this._parent instanceof NgForm)) {\n          throw modelParentException();\n        }\n      }\n    }\n    _checkName() {\n      if (this.options && this.options.name) this.name = this.options.name;\n      if (!this._isStandalone() && !this.name && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw missingNameException();\n      }\n    }\n    _updateValue(value) {\n      resolvedPromise.then(() => {\n        this.control.setValue(value, {\n          emitViewToModelChange: false\n        });\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _updateDisabled(changes) {\n      const disabledValue = changes['isDisabled'].currentValue;\n      // checking for 0 to avoid breaking change\n      const isDisabled = disabledValue !== 0 && booleanAttribute(disabledValue);\n      resolvedPromise.then(() => {\n        if (isDisabled && !this.control.disabled) {\n          this.control.disable();\n        } else if (!isDisabled && this.control.disabled) {\n          this.control.enable();\n        }\n        this._changeDetectorRef?.markForCheck();\n      });\n    }\n    _getPath(controlName) {\n      return this._parent ? controlPath(controlName, this._parent) : [controlName];\n    }\n    static {\n      this.ɵfac = function NgModel_Factory(t) {\n        return new (t || NgModel)(i0.ɵɵdirectiveInject(ControlContainer, 9), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(ChangeDetectorRef, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgModel,\n        selectors: [[\"\", \"ngModel\", \"\", 3, \"formControlName\", \"\", 3, \"formControl\", \"\"]],\n        inputs: {\n          name: \"name\",\n          isDisabled: [i0.ɵɵInputFlags.None, \"disabled\", \"isDisabled\"],\n          model: [i0.ɵɵInputFlags.None, \"ngModel\", \"model\"],\n          options: [i0.ɵɵInputFlags.None, \"ngModelOptions\", \"options\"]\n        },\n        outputs: {\n          update: \"ngModelChange\"\n        },\n        exportAs: [\"ngModel\"],\n        features: [i0.ɵɵProvidersFeature([formControlBinding$1]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return NgModel;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @description\n *\n * Adds `novalidate` attribute to all forms by default.\n *\n * `novalidate` is used to disable browser's native form validation.\n *\n * If you want to use native validation with Angular forms, just add `ngNativeValidate` attribute:\n *\n * ```\n * <form ngNativeValidate></form>\n * ```\n *\n * @publicApi\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n */\nlet ɵNgNoValidate = /*#__PURE__*/(() => {\n  class ɵNgNoValidate {\n    static {\n      this.ɵfac = function ɵNgNoValidate_Factory(t) {\n        return new (t || ɵNgNoValidate)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ɵNgNoValidate,\n        selectors: [[\"form\", 3, \"ngNoForm\", \"\", 3, \"ngNativeValidate\", \"\"]],\n        hostAttrs: [\"novalidate\", \"\"]\n      });\n    }\n  }\n  return ɵNgNoValidate;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst NUMBER_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => NumberValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a number value and listening to number input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a number input with a reactive form.\n *\n * The following example shows how to use a number input with a reactive form.\n *\n * ```ts\n * const totalCountControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"number\" [formControl]=\"totalCountControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NumberValueAccessor = /*#__PURE__*/(() => {\n  class NumberValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      // The value needs to be normalized for IE9, otherwise it is set to 'null' when null\n      const normalizedValue = value == null ? '' : value;\n      this.setProperty('value', normalizedValue);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵNumberValueAccessor_BaseFactory;\n        return function NumberValueAccessor_Factory(t) {\n          return (ɵNumberValueAccessor_BaseFactory || (ɵNumberValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(NumberValueAccessor)))(t || NumberValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NumberValueAccessor,\n        selectors: [[\"input\", \"type\", \"number\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"ngModel\", \"\"]],\n        hostBindings: function NumberValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"input\", function NumberValueAccessor_input_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"blur\", function NumberValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([NUMBER_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return NumberValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RADIO_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RadioControlValueAccessor),\n  multi: true\n};\nfunction throwNameError() {\n  throw new ɵRuntimeError(1202 /* RuntimeErrorCode.NAME_AND_FORM_CONTROL_NAME_MUST_MATCH */, `\n      If you define both a name and a formControlName attribute on your radio button, their values\n      must match. Ex: <input type=\"radio\" formControlName=\"food\" name=\"food\">\n    `);\n}\n/**\n * @description\n * Class used by Angular to track radio buttons. For internal use only.\n */\nlet RadioControlRegistry = /*#__PURE__*/(() => {\n  class RadioControlRegistry {\n    constructor() {\n      this._accessors = [];\n    }\n    /**\n     * @description\n     * Adds a control to the internal registry. For internal use only.\n     */\n    add(control, accessor) {\n      this._accessors.push([control, accessor]);\n    }\n    /**\n     * @description\n     * Removes a control from the internal registry. For internal use only.\n     */\n    remove(accessor) {\n      for (let i = this._accessors.length - 1; i >= 0; --i) {\n        if (this._accessors[i][1] === accessor) {\n          this._accessors.splice(i, 1);\n          return;\n        }\n      }\n    }\n    /**\n     * @description\n     * Selects a radio button. For internal use only.\n     */\n    select(accessor) {\n      this._accessors.forEach(c => {\n        if (this._isSameGroup(c, accessor) && c[1] !== accessor) {\n          c[1].fireUncheck(accessor.value);\n        }\n      });\n    }\n    _isSameGroup(controlPair, accessor) {\n      if (!controlPair[0].control) return false;\n      return controlPair[0]._parent === accessor._control._parent && controlPair[1].name === accessor.name;\n    }\n    static {\n      this.ɵfac = function RadioControlRegistry_Factory(t) {\n        return new (t || RadioControlRegistry)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: RadioControlRegistry,\n        factory: RadioControlRegistry.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return RadioControlRegistry;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * The `ControlValueAccessor` for writing radio control values and listening to radio control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using radio buttons with reactive form directives\n *\n * The follow example shows how to use radio buttons in a reactive form. When using radio buttons in\n * a reactive form, radio buttons in the same group should have the same `formControlName`.\n * Providing a `name` attribute is optional.\n *\n * {@example forms/ts/reactiveRadioButtons/reactive_radio_button_example.ts region='Reactive'}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RadioControlValueAccessor = /*#__PURE__*/(() => {\n  class RadioControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor(renderer, elementRef, _registry, _injector) {\n      super(renderer, elementRef);\n      this._registry = _registry;\n      this._injector = _injector;\n      this.setDisabledStateFired = false;\n      /**\n       * The registered callback function called when a change event occurs on the input element.\n       * Note: we declare `onChange` here (also used as host listener) as a function with no arguments\n       * to override the `onChange` function (which expects 1 argument) in the parent\n       * `BaseControlValueAccessor` class.\n       * @nodoc\n       */\n      this.onChange = () => {};\n      this.callSetDisabledState = inject(CALL_SET_DISABLED_STATE, {\n        optional: true\n      }) ?? setDisabledStateDefault;\n    }\n    /** @nodoc */\n    ngOnInit() {\n      this._control = this._injector.get(NgControl);\n      this._checkName();\n      this._registry.add(this._control, this);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      this._registry.remove(this);\n    }\n    /**\n     * Sets the \"checked\" property value on the radio input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this._state = value === this.value;\n      this.setProperty('checked', this._state);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this._fn = fn;\n      this.onChange = () => {\n        fn(this.value);\n        this._registry.select(this);\n      };\n    }\n    /** @nodoc */\n    setDisabledState(isDisabled) {\n      /**\n       * `setDisabledState` is supposed to be called whenever the disabled state of a control changes,\n       * including upon control creation. However, a longstanding bug caused the method to not fire\n       * when an *enabled* control was attached. This bug was fixed in v15 in #47576.\n       *\n       * This had a side effect: previously, it was possible to instantiate a reactive form control\n       * with `[attr.disabled]=true`, even though the corresponding control was enabled in the\n       * model. This resulted in a mismatch between the model and the DOM. Now, because\n       * `setDisabledState` is always called, the value in the DOM will be immediately overwritten\n       * with the \"correct\" enabled value.\n       *\n       * However, the fix also created an exceptional case: radio buttons. Because Reactive Forms\n       * models the entire group of radio buttons as a single `FormControl`, there is no way to\n       * control the disabled state for individual radios, so they can no longer be configured as\n       * disabled. Thus, we keep the old behavior for radio buttons, so that `[attr.disabled]`\n       * continues to work. Specifically, we drop the first call to `setDisabledState` if `disabled`\n       * is `false`, and we are not in legacy mode.\n       */\n      if (this.setDisabledStateFired || isDisabled || this.callSetDisabledState === 'whenDisabledForLegacyCode') {\n        this.setProperty('disabled', isDisabled);\n      }\n      this.setDisabledStateFired = true;\n    }\n    /**\n     * Sets the \"value\" on the radio input element and unchecks it.\n     *\n     * @param value\n     */\n    fireUncheck(value) {\n      this.writeValue(value);\n    }\n    _checkName() {\n      if (this.name && this.formControlName && this.name !== this.formControlName && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throwNameError();\n      }\n      if (!this.name && this.formControlName) this.name = this.formControlName;\n    }\n    static {\n      this.ɵfac = function RadioControlValueAccessor_Factory(t) {\n        return new (t || RadioControlValueAccessor)(i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(RadioControlRegistry), i0.ɵɵdirectiveInject(i0.Injector));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RadioControlValueAccessor,\n        selectors: [[\"input\", \"type\", \"radio\", \"formControlName\", \"\"], [\"input\", \"type\", \"radio\", \"formControl\", \"\"], [\"input\", \"type\", \"radio\", \"ngModel\", \"\"]],\n        hostBindings: function RadioControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function RadioControlValueAccessor_change_HostBindingHandler() {\n              return ctx.onChange();\n            })(\"blur\", function RadioControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        inputs: {\n          name: \"name\",\n          formControlName: \"formControlName\",\n          value: \"value\"\n        },\n        features: [i0.ɵɵProvidersFeature([RADIO_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return RadioControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst RANGE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => RangeValueAccessor),\n  multi: true\n};\n/**\n * @description\n * The `ControlValueAccessor` for writing a range value and listening to range input changes.\n * The value accessor is used by the `FormControlDirective`, `FormControlName`, and  `NgModel`\n * directives.\n *\n * @usageNotes\n *\n * ### Using a range input with a reactive form\n *\n * The following example shows how to use a range input with a reactive form.\n *\n * ```ts\n * const ageControl = new FormControl();\n * ```\n *\n * ```\n * <input type=\"range\" [formControl]=\"ageControl\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet RangeValueAccessor = /*#__PURE__*/(() => {\n  class RangeValueAccessor extends BuiltInControlValueAccessor {\n    /**\n     * Sets the \"value\" property on the input element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.setProperty('value', parseFloat(value));\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = value => {\n        fn(value == '' ? null : parseFloat(value));\n      };\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵRangeValueAccessor_BaseFactory;\n        return function RangeValueAccessor_Factory(t) {\n          return (ɵRangeValueAccessor_BaseFactory || (ɵRangeValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(RangeValueAccessor)))(t || RangeValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RangeValueAccessor,\n        selectors: [[\"input\", \"type\", \"range\", \"formControlName\", \"\"], [\"input\", \"type\", \"range\", \"formControl\", \"\"], [\"input\", \"type\", \"range\", \"ngModel\", \"\"]],\n        hostBindings: function RangeValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function RangeValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"input\", function RangeValueAccessor_input_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"blur\", function RangeValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([RANGE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return RangeValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Token to provide to turn off the ngModel warning on formControl and formControlName.\n */\nconst NG_MODEL_WITH_FORM_CONTROL_WARNING = /*#__PURE__*/new InjectionToken(ngDevMode ? 'NgModelWithFormControlWarning' : '');\nconst formControlBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlDirective)\n};\n/**\n * @description\n * Synchronizes a standalone `FormControl` instance to a form control element.\n *\n * Note that support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives was deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * The following example shows how to register a standalone control and set its value.\n *\n * {@example forms/ts/simpleFormControl/simple_form_control_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlDirective = /*#__PURE__*/(() => {\n  class FormControlDirective extends NgControl {\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlDirective. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static {\n      this._ngModelWarningSentOnce = false;\n    }\n    constructor(validators, asyncValidators, valueAccessors, _ngModelWarningConfig, callSetDisabledState) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this.callSetDisabledState = callSetDisabledState;\n      /** @deprecated as of v6 */\n      this.update = new EventEmitter();\n      /**\n       * @description\n       * Instance property used to track whether an ngModel warning has been sent out for this\n       * particular `FormControlDirective` instance. Used to support warning config of \"always\".\n       *\n       * @internal\n       */\n      this._ngModelWarningSent = false;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this._isControlChanged(changes)) {\n        const previousForm = changes['form'].previousValue;\n        if (previousForm) {\n          cleanUpControl(previousForm, this, /* validateControlPresenceOnChange */false);\n        }\n        setUpControl(this.form, this, this.callSetDisabledState);\n        this.form.updateValueAndValidity({\n          emitEvent: false\n        });\n      }\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControl', FormControlDirective, this, this._ngModelWarningConfig);\n        }\n        this.form.setValue(this.model);\n        this.viewModel = this.model;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpControl(this.form, this, /* validateControlPresenceOnChange */false);\n      }\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * The `FormControl` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    _isControlChanged(changes) {\n      return changes.hasOwnProperty('form');\n    }\n    static {\n      this.ɵfac = function FormControlDirective_Factory(t) {\n        return new (t || FormControlDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormControlDirective,\n        selectors: [[\"\", \"formControl\", \"\"]],\n        inputs: {\n          form: [i0.ɵɵInputFlags.None, \"formControl\", \"form\"],\n          isDisabled: [i0.ɵɵInputFlags.None, \"disabled\", \"isDisabled\"],\n          model: [i0.ɵɵInputFlags.None, \"ngModel\", \"model\"]\n        },\n        outputs: {\n          update: \"ngModelChange\"\n        },\n        exportAs: [\"ngForm\"],\n        features: [i0.ɵɵProvidersFeature([formControlBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FormControlDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formDirectiveProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupDirective)\n};\n/**\n * @description\n *\n * Binds an existing `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive accepts an existing `FormGroup` instance. It will then use this\n * `FormGroup` instance to match any child `FormControl`, `FormGroup`/`FormRecord`,\n * and `FormArray` instances to child `FormControlName`, `FormGroupName`,\n * and `FormArrayName` directives.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n * ### Register Form Group\n *\n * The following example registers a `FormGroup` with first name and last name controls,\n * and listens for the *ngSubmit* event when the button is clicked.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupDirective = /*#__PURE__*/(() => {\n  class FormGroupDirective extends ControlContainer {\n    constructor(validators, asyncValidators, callSetDisabledState) {\n      super();\n      this.callSetDisabledState = callSetDisabledState;\n      /**\n       * @description\n       * Reports whether the form submission has been triggered.\n       */\n      this.submitted = false;\n      /**\n       * Callback that should be invoked when controls in FormGroup or FormArray collection change\n       * (added or removed). This callback triggers corresponding DOM updates.\n       */\n      this._onCollectionChange = () => this._updateDomValue();\n      /**\n       * @description\n       * Tracks the list of added `FormControlName` instances\n       */\n      this.directives = [];\n      /**\n       * @description\n       * Tracks the `FormGroup` bound to this directive.\n       */\n      this.form = null;\n      /**\n       * @description\n       * Emits an event when the form submission has been triggered.\n       */\n      this.ngSubmit = new EventEmitter();\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      this._checkFormPresent();\n      if (changes.hasOwnProperty('form')) {\n        this._updateValidators();\n        this._updateDomValue();\n        this._updateRegistrations();\n        this._oldForm = this.form;\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.form) {\n        cleanUpValidators(this.form, this);\n        // Currently the `onCollectionChange` callback is rewritten each time the\n        // `_registerOnCollectionChange` function is invoked. The implication is that cleanup should\n        // happen *only* when the `onCollectionChange` callback was set by this directive instance.\n        // Otherwise it might cause overriding a callback of some other directive instances. We should\n        // consider updating this logic later to make it similar to how `onChange` callbacks are\n        // handled, see https://github.com/angular/angular/issues/39732 for additional info.\n        if (this.form._onCollectionChange === this._onCollectionChange) {\n          this.form._registerOnCollectionChange(() => {});\n        }\n      }\n    }\n    /**\n     * @description\n     * Returns this directive's instance.\n     */\n    get formDirective() {\n      return this;\n    }\n    /**\n     * @description\n     * Returns the `FormGroup` bound to this directive.\n     */\n    get control() {\n      return this.form;\n    }\n    /**\n     * @description\n     * Returns an array representing the path to this group. Because this directive\n     * always lives at the top level of a form, it always an empty array.\n     */\n    get path() {\n      return [];\n    }\n    /**\n     * @description\n     * Method that sets up the control directive in this group, re-calculates its value\n     * and validity, and adds the instance to the internal list of directives.\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    addControl(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpControl(ctrl, dir, this.callSetDisabledState);\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n      this.directives.push(dir);\n      return ctrl;\n    }\n    /**\n     * @description\n     * Retrieves the `FormControl` instance from the provided `FormControlName` directive\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    getControl(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * @description\n     * Removes the `FormControlName` instance from the internal list of directives\n     *\n     * @param dir The `FormControlName` directive instance.\n     */\n    removeControl(dir) {\n      cleanUpControl(dir.control || null, dir, /* validateControlPresenceOnChange */false);\n      removeListItem$1(this.directives, dir);\n    }\n    /**\n     * Adds a new `FormGroupName` directive instance to the form.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    addFormGroup(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormGroupName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    removeFormGroup(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormGroup` for a provided `FormGroupName` directive instance\n     *\n     * @param dir The `FormGroupName` directive instance.\n     */\n    getFormGroup(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Performs the necessary setup when a `FormArrayName` directive instance is added to the view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    addFormArray(dir) {\n      this._setUpFormContainer(dir);\n    }\n    /**\n     * Performs the necessary cleanup when a `FormArrayName` directive instance is removed from the\n     * view.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    removeFormArray(dir) {\n      this._cleanUpFormContainer(dir);\n    }\n    /**\n     * @description\n     * Retrieves the `FormArray` for a provided `FormArrayName` directive instance.\n     *\n     * @param dir The `FormArrayName` directive instance.\n     */\n    getFormArray(dir) {\n      return this.form.get(dir.path);\n    }\n    /**\n     * Sets the new value for the provided `FormControlName` directive.\n     *\n     * @param dir The `FormControlName` directive instance.\n     * @param value The new value for the directive's control.\n     */\n    updateModel(dir, value) {\n      const ctrl = this.form.get(dir.path);\n      ctrl.setValue(value);\n    }\n    /**\n     * @description\n     * Method called with the \"submit\" event is triggered on the form.\n     * Triggers the `ngSubmit` emitter to emit the \"submit\" event as its payload.\n     *\n     * @param $event The \"submit\" event object\n     */\n    onSubmit($event) {\n      this.submitted = true;\n      syncPendingControls(this.form, this.directives);\n      this.ngSubmit.emit($event);\n      // Forms with `method=\"dialog\"` have some special behavior that won't reload the page and that\n      // shouldn't be prevented. Note that we need to null check the `event` and the `target`, because\n      // some internal apps call this method directly with the wrong arguments.\n      return $event?.target?.method === 'dialog';\n    }\n    /**\n     * @description\n     * Method called when the \"reset\" event is triggered on the form.\n     */\n    onReset() {\n      this.resetForm();\n    }\n    /**\n     * @description\n     * Resets the form to an initial value and resets its submitted status.\n     *\n     * @param value The new value for the form.\n     */\n    resetForm(value = undefined) {\n      this.form.reset(value);\n      this.submitted = false;\n    }\n    /** @internal */\n    _updateDomValue() {\n      this.directives.forEach(dir => {\n        const oldCtrl = dir.control;\n        const newCtrl = this.form.get(dir.path);\n        if (oldCtrl !== newCtrl) {\n          // Note: the value of the `dir.control` may not be defined, for example when it's a first\n          // `FormControl` that is added to a `FormGroup` instance (via `addControl` call).\n          cleanUpControl(oldCtrl || null, dir);\n          // Check whether new control at the same location inside the corresponding `FormGroup` is an\n          // instance of `FormControl` and perform control setup only if that's the case.\n          // Note: we don't need to clear the list of directives (`this.directives`) here, it would be\n          // taken care of in the `removeControl` method invoked when corresponding `formControlName`\n          // directive instance is being removed (invoked from `FormControlName.ngOnDestroy`).\n          if (isFormControl(newCtrl)) {\n            setUpControl(newCtrl, dir, this.callSetDisabledState);\n            dir.control = newCtrl;\n          }\n        }\n      });\n      this.form._updateTreeValidity({\n        emitEvent: false\n      });\n    }\n    _setUpFormContainer(dir) {\n      const ctrl = this.form.get(dir.path);\n      setUpFormContainer(ctrl, dir);\n      // NOTE: this operation looks unnecessary in case no new validators were added in\n      // `setUpFormContainer` call. Consider updating this code to match the logic in\n      // `_cleanUpFormContainer` function.\n      ctrl.updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    _cleanUpFormContainer(dir) {\n      if (this.form) {\n        const ctrl = this.form.get(dir.path);\n        if (ctrl) {\n          const isControlUpdated = cleanUpFormContainer(ctrl, dir);\n          if (isControlUpdated) {\n            // Run validity check only in case a control was updated (i.e. view validators were\n            // removed) as removing view validators might cause validity to change.\n            ctrl.updateValueAndValidity({\n              emitEvent: false\n            });\n          }\n        }\n      }\n    }\n    _updateRegistrations() {\n      this.form._registerOnCollectionChange(this._onCollectionChange);\n      if (this._oldForm) {\n        this._oldForm._registerOnCollectionChange(() => {});\n      }\n    }\n    _updateValidators() {\n      setUpValidators(this.form, this);\n      if (this._oldForm) {\n        cleanUpValidators(this._oldForm, this);\n      }\n    }\n    _checkFormPresent() {\n      if (!this.form && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw missingFormException();\n      }\n    }\n    static {\n      this.ɵfac = function FormGroupDirective_Factory(t) {\n        return new (t || FormGroupDirective)(i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(CALL_SET_DISABLED_STATE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormGroupDirective,\n        selectors: [[\"\", \"formGroup\", \"\"]],\n        hostBindings: function FormGroupDirective_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"submit\", function FormGroupDirective_submit_HostBindingHandler($event) {\n              return ctx.onSubmit($event);\n            })(\"reset\", function FormGroupDirective_reset_HostBindingHandler() {\n              return ctx.onReset();\n            });\n          }\n        },\n        inputs: {\n          form: [i0.ɵɵInputFlags.None, \"formGroup\", \"form\"]\n        },\n        outputs: {\n          ngSubmit: \"ngSubmit\"\n        },\n        exportAs: [\"ngForm\"],\n        features: [i0.ɵɵProvidersFeature([formDirectiveProvider]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FormGroupDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formGroupNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormGroupName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormGroup` or `FormRecord` to a DOM element.\n *\n * This directive can only be used with a parent `FormGroupDirective`.\n *\n * It accepts the string name of the nested `FormGroup` or `FormRecord` to link, and\n * looks for a `FormGroup` or `FormRecord` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * Use nested form groups to validate a sub-group of a\n * form separately from the rest or to group the values of certain\n * controls into their own nested object.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @usageNotes\n *\n * ### Access the group by name\n *\n * The following example uses the `AbstractControl.get` method to access the\n * associated `FormGroup`\n *\n * ```ts\n *   this.form.get('name');\n * ```\n *\n * ### Access individual controls in the group\n *\n * The following example uses the `AbstractControl.get` method to access\n * individual controls within the group using dot syntax.\n *\n * ```ts\n *   this.form.get('name.first');\n * ```\n *\n * ### Register a nested `FormGroup`.\n *\n * The following example registers a nested *name* `FormGroup` within an existing `FormGroup`,\n * and provides methods to retrieve the nested `FormGroup` and individual controls.\n *\n * {@example forms/ts/nestedFormGroup/nested_form_group_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormGroupName = /*#__PURE__*/(() => {\n  class FormGroupName extends AbstractFormGroupDirective {\n    constructor(parent, validators, asyncValidators) {\n      super();\n      /**\n       * @description\n       * Tracks the name of the `FormGroup` bound to the directive. The name corresponds\n       * to a key in the parent `FormGroup` or `FormArray`.\n       * Accepts a name as a string or a number.\n       * The name in the form of a string is useful for individual forms,\n       * while the numerical form allows for form groups to be bound\n       * to indices when iterating over groups in a `FormArray`.\n       */\n      this.name = null;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /** @internal */\n    _checkParentType() {\n      if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw groupParentException();\n      }\n    }\n    static {\n      this.ɵfac = function FormGroupName_Factory(t) {\n        return new (t || FormGroupName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormGroupName,\n        selectors: [[\"\", \"formGroupName\", \"\"]],\n        inputs: {\n          name: [i0.ɵɵInputFlags.None, \"formGroupName\", \"name\"]\n        },\n        features: [i0.ɵɵProvidersFeature([formGroupNameProvider]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return FormGroupName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst formArrayNameProvider = {\n  provide: ControlContainer,\n  useExisting: /*#__PURE__*/forwardRef(() => FormArrayName)\n};\n/**\n * @description\n *\n * Syncs a nested `FormArray` to a DOM element.\n *\n * This directive is designed to be used with a parent `FormGroupDirective` (selector:\n * `[formGroup]`).\n *\n * It accepts the string name of the nested `FormArray` you want to link, and\n * will look for a `FormArray` registered with that name in the parent\n * `FormGroup` instance you passed into `FormGroupDirective`.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Example\n *\n * {@example forms/ts/nestedFormArray/nested_form_array_example.ts region='Component'}\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormArrayName = /*#__PURE__*/(() => {\n  class FormArrayName extends ControlContainer {\n    constructor(parent, validators, asyncValidators) {\n      super();\n      /**\n       * @description\n       * Tracks the name of the `FormArray` bound to the directive. The name corresponds\n       * to a key in the parent `FormGroup` or `FormArray`.\n       * Accepts a name as a string or a number.\n       * The name in the form of a string is useful for individual forms,\n       * while the numerical form allows for form arrays to be bound\n       * to indices when iterating over arrays in a `FormArray`.\n       */\n      this.name = null;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n    }\n    /**\n     * A lifecycle method called when the directive's inputs are initialized. For internal use only.\n     * @throws If the directive does not have a valid parent.\n     * @nodoc\n     */\n    ngOnInit() {\n      this._checkParentType();\n      this.formDirective.addFormArray(this);\n    }\n    /**\n     * A lifecycle method called before the directive's instance is destroyed. For internal use only.\n     * @nodoc\n     */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        this.formDirective.removeFormArray(this);\n      }\n    }\n    /**\n     * @description\n     * The `FormArray` bound to this directive.\n     */\n    get control() {\n      return this.formDirective.getFormArray(this);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    _checkParentType() {\n      if (_hasInvalidParent(this._parent) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw arrayParentException();\n      }\n    }\n    static {\n      this.ɵfac = function FormArrayName_Factory(t) {\n        return new (t || FormArrayName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormArrayName,\n        selectors: [[\"\", \"formArrayName\", \"\"]],\n        inputs: {\n          name: [i0.ɵɵInputFlags.None, \"formArrayName\", \"name\"]\n        },\n        features: [i0.ɵɵProvidersFeature([formArrayNameProvider]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return FormArrayName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction _hasInvalidParent(parent) {\n  return !(parent instanceof FormGroupName) && !(parent instanceof FormGroupDirective) && !(parent instanceof FormArrayName);\n}\nconst controlNameBinding = {\n  provide: NgControl,\n  useExisting: /*#__PURE__*/forwardRef(() => FormControlName)\n};\n/**\n * @description\n * Syncs a `FormControl` in an existing `FormGroup` to a form control\n * element by name.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n * @see {@link FormControl}\n * @see {@link AbstractControl}\n *\n * @usageNotes\n *\n * ### Register `FormControl` within a group\n *\n * The following example shows how to register multiple form controls within a form group\n * and set their value.\n *\n * {@example forms/ts/simpleFormGroup/simple_form_group_example.ts region='Component'}\n *\n * To see `formControlName` examples with different form control types, see:\n *\n * * Radio buttons: `RadioControlValueAccessor`\n * * Selects: `SelectControlValueAccessor`\n *\n * ### Use with ngModel is deprecated\n *\n * Support for using the `ngModel` input property and `ngModelChange` event with reactive\n * form directives has been deprecated in Angular v6 and is scheduled for removal in\n * a future version of Angular.\n *\n * For details, see [Deprecated features](guide/deprecations#ngmodel-with-reactive-forms).\n *\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet FormControlName = /*#__PURE__*/(() => {\n  class FormControlName extends NgControl {\n    /**\n     * @description\n     * Triggers a warning in dev mode that this input should not be used with reactive forms.\n     */\n    set isDisabled(isDisabled) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        console.warn(disabledAttrWarning);\n      }\n    }\n    /**\n     * @description\n     * Static property used to track whether any ngModel warnings have been sent across\n     * all instances of FormControlName. Used to support warning config of \"once\".\n     *\n     * @internal\n     */\n    static {\n      this._ngModelWarningSentOnce = false;\n    }\n    constructor(parent, validators, asyncValidators, valueAccessors, _ngModelWarningConfig) {\n      super();\n      this._ngModelWarningConfig = _ngModelWarningConfig;\n      this._added = false;\n      /**\n       * @description\n       * Tracks the name of the `FormControl` bound to the directive. The name corresponds\n       * to a key in the parent `FormGroup` or `FormArray`.\n       * Accepts a name as a string or a number.\n       * The name in the form of a string is useful for individual forms,\n       * while the numerical form allows for form controls to be bound\n       * to indices when iterating over controls in a `FormArray`.\n       */\n      this.name = null;\n      /** @deprecated as of v6 */\n      this.update = new EventEmitter();\n      /**\n       * @description\n       * Instance property used to track whether an ngModel warning has been sent out for this\n       * particular FormControlName instance. Used to support warning config of \"always\".\n       *\n       * @internal\n       */\n      this._ngModelWarningSent = false;\n      this._parent = parent;\n      this._setValidators(validators);\n      this._setAsyncValidators(asyncValidators);\n      this.valueAccessor = selectValueAccessor(this, valueAccessors);\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (!this._added) this._setUpControl();\n      if (isPropertyUpdated(changes, this.viewModel)) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          _ngModelWarning('formControlName', FormControlName, this, this._ngModelWarningConfig);\n        }\n        this.viewModel = this.model;\n        this.formDirective.updateModel(this, this.model);\n      }\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this.formDirective) {\n        this.formDirective.removeControl(this);\n      }\n    }\n    /**\n     * @description\n     * Sets the new value for the view model and emits an `ngModelChange` event.\n     *\n     * @param newValue The new value for the view model.\n     */\n    viewToModelUpdate(newValue) {\n      this.viewModel = newValue;\n      this.update.emit(newValue);\n    }\n    /**\n     * @description\n     * Returns an array that represents the path from the top-level form to this control.\n     * Each index is the string name of the control on that level.\n     */\n    get path() {\n      return controlPath(this.name == null ? this.name : this.name.toString(), this._parent);\n    }\n    /**\n     * @description\n     * The top-level directive for this group if present, otherwise null.\n     */\n    get formDirective() {\n      return this._parent ? this._parent.formDirective : null;\n    }\n    _checkParentType() {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        if (!(this._parent instanceof FormGroupName) && this._parent instanceof AbstractFormGroupDirective) {\n          throw ngModelGroupException();\n        } else if (!(this._parent instanceof FormGroupName) && !(this._parent instanceof FormGroupDirective) && !(this._parent instanceof FormArrayName)) {\n          throw controlParentException();\n        }\n      }\n    }\n    _setUpControl() {\n      this._checkParentType();\n      this.control = this.formDirective.addControl(this);\n      this._added = true;\n    }\n    static {\n      this.ɵfac = function FormControlName_Factory(t) {\n        return new (t || FormControlName)(i0.ɵɵdirectiveInject(ControlContainer, 13), i0.ɵɵdirectiveInject(NG_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_ASYNC_VALIDATORS, 10), i0.ɵɵdirectiveInject(NG_VALUE_ACCESSOR, 10), i0.ɵɵdirectiveInject(NG_MODEL_WITH_FORM_CONTROL_WARNING, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: FormControlName,\n        selectors: [[\"\", \"formControlName\", \"\"]],\n        inputs: {\n          name: [i0.ɵɵInputFlags.None, \"formControlName\", \"name\"],\n          isDisabled: [i0.ɵɵInputFlags.None, \"disabled\", \"isDisabled\"],\n          model: [i0.ɵɵInputFlags.None, \"ngModel\", \"model\"]\n        },\n        outputs: {\n          update: \"ngModelChange\"\n        },\n        features: [i0.ɵɵProvidersFeature([controlNameBinding]), i0.ɵɵInheritDefinitionFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return FormControlName;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SELECT_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString$1(id, value) {\n  if (id == null) return `${value}`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId$1(valueString) {\n  return valueString.split(':')[0];\n}\n/**\n * @description\n * The `ControlValueAccessor` for writing select control values and listening to select control\n * changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @usageNotes\n *\n * ### Using select controls in a reactive form\n *\n * The following examples show how to use a select control in a reactive form.\n *\n * {@example forms/ts/reactiveSelectControl/reactive_select_control_example.ts region='Component'}\n *\n * ### Using select controls in a template-driven form\n *\n * To use a select in a template-driven form, simply add an `ngModel` and a `name`\n * attribute to the main `<select>` tag.\n *\n * {@example forms/ts/selectControl/select_control_example.ts region='Component'}\n *\n * ### Customizing option selection\n *\n * Angular uses object identity to select option. It's possible for the identities of items\n * to change while the data does not. This can happen, for example, if the items are produced\n * from an RPC to the server, and that RPC is re-run. Even if the data hasn't changed, the\n * second response will produce objects with different identities.\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * `compareWith` takes a **function** which has two arguments: `option1` and `option2`.\n * If `compareWith` is given, Angular selects option by the return value of the function.\n *\n * ```ts\n * const selectedCountriesControl = new FormControl();\n * ```\n *\n * ```\n * <select [compareWith]=\"compareFn\"  [formControl]=\"selectedCountriesControl\">\n *     <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *         {{country.name}}\n *     </option>\n * </select>\n *\n * compareFn(c1: Country, c2: Country): boolean {\n *     return c1 && c2 ? c1.id === c2.id : c1 === c2;\n * }\n * ```\n *\n * **Note:** We listen to the 'change' event because 'input' events aren't fired\n * for selects in IE, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/input_event#browser_compatibility\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this._optionMap = new Map();\n      /** @internal */\n      this._idCounter = 0;\n      this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on the select element.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      const id = this._getOptionId(value);\n      const valueString = _buildValueString$1(id, value);\n      this.setProperty('value', valueString);\n    }\n    /**\n     * Registers a function called when the control value changes.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = valueString => {\n        this.value = this._getOptionValue(valueString);\n        fn(this.value);\n      };\n    }\n    /** @internal */\n    _registerOption() {\n      return (this._idCounter++).toString();\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id), value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId$1(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id) : valueString;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵSelectControlValueAccessor_BaseFactory;\n        return function SelectControlValueAccessor_Factory(t) {\n          return (ɵSelectControlValueAccessor_BaseFactory || (ɵSelectControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectControlValueAccessor)))(t || SelectControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: SelectControlValueAccessor,\n        selectors: [[\"select\", \"formControlName\", \"\", 3, \"multiple\", \"\"], [\"select\", \"formControl\", \"\", 3, \"multiple\", \"\"], [\"select\", \"ngModel\", \"\", 3, \"multiple\", \"\"]],\n        hostBindings: function SelectControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function SelectControlValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target.value);\n            })(\"blur\", function SelectControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        inputs: {\n          compareWith: \"compareWith\"\n        },\n        features: [i0.ɵɵProvidersFeature([SELECT_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return SelectControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet NgSelectOption = /*#__PURE__*/(() => {\n  class NgSelectOption {\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) this.id = this._select._registerOption();\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._select._optionMap.set(this.id, value);\n      this._setElementValue(_buildValueString$1(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      this._setElementValue(value);\n      if (this._select) this._select.writeValue(this._select.value);\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static {\n      this.ɵfac = function NgSelectOption_Factory(t) {\n        return new (t || NgSelectOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectControlValueAccessor, 9));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: NgSelectOption,\n        selectors: [[\"option\"]],\n        inputs: {\n          ngValue: \"ngValue\",\n          value: \"value\"\n        }\n      });\n    }\n  }\n  return NgSelectOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SELECT_MULTIPLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => SelectMultipleControlValueAccessor),\n  multi: true\n};\nfunction _buildValueString(id, value) {\n  if (id == null) return `${value}`;\n  if (typeof value === 'string') value = `'${value}'`;\n  if (value && typeof value === 'object') value = 'Object';\n  return `${id}: ${value}`.slice(0, 50);\n}\nfunction _extractId(valueString) {\n  return valueString.split(':')[0];\n}\n/** Mock interface for HTMLCollection */\nclass HTMLCollection {}\n/**\n * @description\n * The `ControlValueAccessor` for writing multi-select control values and listening to multi-select\n * control changes. The value accessor is used by the `FormControlDirective`, `FormControlName`, and\n * `NgModel` directives.\n *\n * @see {@link SelectControlValueAccessor}\n *\n * @usageNotes\n *\n * ### Using a multi-select control\n *\n * The follow example shows you how to use a multi-select control with a reactive form.\n *\n * ```ts\n * const countryControl = new FormControl();\n * ```\n *\n * ```\n * <select multiple name=\"countries\" [formControl]=\"countryControl\">\n *   <option *ngFor=\"let country of countries\" [ngValue]=\"country\">\n *     {{ country.name }}\n *   </option>\n * </select>\n * ```\n *\n * ### Customizing option selection\n *\n * To customize the default option comparison algorithm, `<select>` supports `compareWith` input.\n * See the `SelectControlValueAccessor` for usage.\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet SelectMultipleControlValueAccessor = /*#__PURE__*/(() => {\n  class SelectMultipleControlValueAccessor extends BuiltInControlValueAccessor {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this._optionMap = new Map();\n      /** @internal */\n      this._idCounter = 0;\n      this._compareWith = Object.is;\n    }\n    /**\n     * @description\n     * Tracks the option comparison algorithm for tracking identities when\n     * checking for changes.\n     */\n    set compareWith(fn) {\n      if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw new ɵRuntimeError(1201 /* RuntimeErrorCode.COMPAREWITH_NOT_A_FN */, `compareWith must be a function, but received ${JSON.stringify(fn)}`);\n      }\n      this._compareWith = fn;\n    }\n    /**\n     * Sets the \"value\" property on one or of more of the select's options.\n     * @nodoc\n     */\n    writeValue(value) {\n      this.value = value;\n      let optionSelectedStateSetter;\n      if (Array.isArray(value)) {\n        // convert values to ids\n        const ids = value.map(v => this._getOptionId(v));\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(ids.indexOf(o.toString()) > -1);\n        };\n      } else {\n        optionSelectedStateSetter = (opt, o) => {\n          opt._setSelected(false);\n        };\n      }\n      this._optionMap.forEach(optionSelectedStateSetter);\n    }\n    /**\n     * Registers a function called when the control value changes\n     * and writes an array of the selected options.\n     * @nodoc\n     */\n    registerOnChange(fn) {\n      this.onChange = element => {\n        const selected = [];\n        const selectedOptions = element.selectedOptions;\n        if (selectedOptions !== undefined) {\n          const options = selectedOptions;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            const val = this._getOptionValue(opt.value);\n            selected.push(val);\n          }\n        }\n        // Degrade to use `options` when `selectedOptions` property is not available.\n        // Note: the `selectedOptions` is available in all supported browsers, but the Domino lib\n        // doesn't have it currently, see https://github.com/fgnass/domino/issues/177.\n        else {\n          const options = element.options;\n          for (let i = 0; i < options.length; i++) {\n            const opt = options[i];\n            if (opt.selected) {\n              const val = this._getOptionValue(opt.value);\n              selected.push(val);\n            }\n          }\n        }\n        this.value = selected;\n        fn(selected);\n      };\n    }\n    /** @internal */\n    _registerOption(value) {\n      const id = (this._idCounter++).toString();\n      this._optionMap.set(id, value);\n      return id;\n    }\n    /** @internal */\n    _getOptionId(value) {\n      for (const id of this._optionMap.keys()) {\n        if (this._compareWith(this._optionMap.get(id)._value, value)) return id;\n      }\n      return null;\n    }\n    /** @internal */\n    _getOptionValue(valueString) {\n      const id = _extractId(valueString);\n      return this._optionMap.has(id) ? this._optionMap.get(id)._value : valueString;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵSelectMultipleControlValueAccessor_BaseFactory;\n        return function SelectMultipleControlValueAccessor_Factory(t) {\n          return (ɵSelectMultipleControlValueAccessor_BaseFactory || (ɵSelectMultipleControlValueAccessor_BaseFactory = i0.ɵɵgetInheritedFactory(SelectMultipleControlValueAccessor)))(t || SelectMultipleControlValueAccessor);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: SelectMultipleControlValueAccessor,\n        selectors: [[\"select\", \"multiple\", \"\", \"formControlName\", \"\"], [\"select\", \"multiple\", \"\", \"formControl\", \"\"], [\"select\", \"multiple\", \"\", \"ngModel\", \"\"]],\n        hostBindings: function SelectMultipleControlValueAccessor_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"change\", function SelectMultipleControlValueAccessor_change_HostBindingHandler($event) {\n              return ctx.onChange($event.target);\n            })(\"blur\", function SelectMultipleControlValueAccessor_blur_HostBindingHandler() {\n              return ctx.onTouched();\n            });\n          }\n        },\n        inputs: {\n          compareWith: \"compareWith\"\n        },\n        features: [i0.ɵɵProvidersFeature([SELECT_MULTIPLE_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return SelectMultipleControlValueAccessor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Marks `<option>` as dynamic, so Angular can be notified when options change.\n *\n * @see {@link SelectMultipleControlValueAccessor}\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet ɵNgSelectMultipleOption = /*#__PURE__*/(() => {\n  class ɵNgSelectMultipleOption {\n    constructor(_element, _renderer, _select) {\n      this._element = _element;\n      this._renderer = _renderer;\n      this._select = _select;\n      if (this._select) {\n        this.id = this._select._registerOption(this);\n      }\n    }\n    /**\n     * @description\n     * Tracks the value bound to the option element. Unlike the value binding,\n     * ngValue supports binding to objects.\n     */\n    set ngValue(value) {\n      if (this._select == null) return;\n      this._value = value;\n      this._setElementValue(_buildValueString(this.id, value));\n      this._select.writeValue(this._select.value);\n    }\n    /**\n     * @description\n     * Tracks simple string values bound to the option element.\n     * For objects, use the `ngValue` input binding.\n     */\n    set value(value) {\n      if (this._select) {\n        this._value = value;\n        this._setElementValue(_buildValueString(this.id, value));\n        this._select.writeValue(this._select.value);\n      } else {\n        this._setElementValue(value);\n      }\n    }\n    /** @internal */\n    _setElementValue(value) {\n      this._renderer.setProperty(this._element.nativeElement, 'value', value);\n    }\n    /** @internal */\n    _setSelected(selected) {\n      this._renderer.setProperty(this._element.nativeElement, 'selected', selected);\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      if (this._select) {\n        this._select._optionMap.delete(this.id);\n        this._select.writeValue(this._select.value);\n      }\n    }\n    static {\n      this.ɵfac = function ɵNgSelectMultipleOption_Factory(t) {\n        return new (t || ɵNgSelectMultipleOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(SelectMultipleControlValueAccessor, 9));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: ɵNgSelectMultipleOption,\n        selectors: [[\"option\"]],\n        inputs: {\n          ngValue: \"ngValue\",\n          value: \"value\"\n        }\n      });\n    }\n  }\n  return ɵNgSelectMultipleOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Method that updates string to integer if not already a number\n *\n * @param value The value to convert to integer.\n * @returns value of parameter converted to number or integer.\n */\nfunction toInteger(value) {\n  return typeof value === 'number' ? value : parseInt(value, 10);\n}\n/**\n * Method that ensures that provided value is a float (and converts it to float if needed).\n *\n * @param value The value to convert to float.\n * @returns value of parameter converted to number or float.\n */\nfunction toFloat(value) {\n  return typeof value === 'number' ? value : parseFloat(value);\n}\n/**\n * A base class for Validator-based Directives. The class contains common logic shared across such\n * Directives.\n *\n * For internal use only, this class is not intended for use outside of the Forms package.\n */\nlet AbstractValidatorDirective = /*#__PURE__*/(() => {\n  class AbstractValidatorDirective {\n    constructor() {\n      this._validator = nullValidator;\n    }\n    /** @nodoc */\n    ngOnChanges(changes) {\n      if (this.inputName in changes) {\n        const input = this.normalizeInput(changes[this.inputName].currentValue);\n        this._enabled = this.enabled(input);\n        this._validator = this._enabled ? this.createValidator(input) : nullValidator;\n        if (this._onChange) {\n          this._onChange();\n        }\n      }\n    }\n    /** @nodoc */\n    validate(control) {\n      return this._validator(control);\n    }\n    /** @nodoc */\n    registerOnValidatorChange(fn) {\n      this._onChange = fn;\n    }\n    /**\n     * @description\n     * Determines whether this validator should be active or not based on an input.\n     * Base class implementation checks whether an input is defined (if the value is different from\n     * `null` and `undefined`). Validator classes that extend this base class can override this\n     * function with the logic specific to a particular validator directive.\n     */\n    enabled(input) {\n      return input != null /* both `null` and `undefined` */;\n    }\n    static {\n      this.ɵfac = function AbstractValidatorDirective_Factory(t) {\n        return new (t || AbstractValidatorDirective)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: AbstractValidatorDirective,\n        features: [i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return AbstractValidatorDirective;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MaxValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `max` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a max validator\n *\n * The following example shows how to add a max validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel max=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxValidator = /*#__PURE__*/(() => {\n  class MaxValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'max';\n      /** @internal */\n      this.normalizeInput = input => toFloat(input);\n      /** @internal */\n      this.createValidator = max => maxValidator(max);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMaxValidator_BaseFactory;\n        return function MaxValidator_Factory(t) {\n          return (ɵMaxValidator_BaseFactory || (ɵMaxValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxValidator)))(t || MaxValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MaxValidator,\n        selectors: [[\"input\", \"type\", \"number\", \"max\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"max\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MaxValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"max\", ctx._enabled ? ctx.max : null);\n          }\n        },\n        inputs: {\n          max: \"max\"\n        },\n        features: [i0.ɵɵProvidersFeature([MAX_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MaxValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinValidator),\n  multi: true\n};\n/**\n * A directive which installs the {@link MinValidator} for any `formControlName`,\n * `formControl`, or control with `ngModel` that also has a `min` attribute.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a min validator\n *\n * The following example shows how to add a min validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input type=\"number\" ngModel min=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinValidator = /*#__PURE__*/(() => {\n  class MinValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'min';\n      /** @internal */\n      this.normalizeInput = input => toFloat(input);\n      /** @internal */\n      this.createValidator = min => minValidator(min);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMinValidator_BaseFactory;\n        return function MinValidator_Factory(t) {\n          return (ɵMinValidator_BaseFactory || (ɵMinValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinValidator)))(t || MinValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MinValidator,\n        selectors: [[\"input\", \"type\", \"number\", \"min\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"number\", \"min\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MinValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"min\", ctx._enabled ? ctx.min : null);\n          }\n        },\n        inputs: {\n          min: \"min\"\n        },\n        features: [i0.ɵɵProvidersFeature([MIN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MinValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `RequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => RequiredValidator),\n  multi: true\n};\n/**\n * @description\n * Provider which adds `CheckboxRequiredValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst CHECKBOX_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => CheckboxRequiredValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds the `required` validator to any controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required validator using template-driven forms\n *\n * ```\n * <input name=\"fullName\" ngModel required>\n * ```\n *\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n * @publicApi\n */\nlet RequiredValidator = /*#__PURE__*/(() => {\n  class RequiredValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'required';\n      /** @internal */\n      this.normalizeInput = booleanAttribute;\n      /** @internal */\n      this.createValidator = input => requiredValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵRequiredValidator_BaseFactory;\n        return function RequiredValidator_Factory(t) {\n          return (ɵRequiredValidator_BaseFactory || (ɵRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(RequiredValidator)))(t || RequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: RequiredValidator,\n        selectors: [[\"\", \"required\", \"\", \"formControlName\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"formControl\", \"\", 3, \"type\", \"checkbox\"], [\"\", \"required\", \"\", \"ngModel\", \"\", 3, \"type\", \"checkbox\"]],\n        hostVars: 1,\n        hostBindings: function RequiredValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n          }\n        },\n        inputs: {\n          required: \"required\"\n        },\n        features: [i0.ɵɵProvidersFeature([REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return RequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A Directive that adds the `required` validator to checkbox controls marked with the\n * `required` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a required checkbox validator using template-driven forms\n *\n * The following example shows how to add a checkbox required validator to an input attached to an\n * ngModel binding.\n *\n * ```\n * <input type=\"checkbox\" name=\"active\" ngModel required>\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet CheckboxRequiredValidator = /*#__PURE__*/(() => {\n  class CheckboxRequiredValidator extends RequiredValidator {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.createValidator = input => requiredTrueValidator;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵCheckboxRequiredValidator_BaseFactory;\n        return function CheckboxRequiredValidator_Factory(t) {\n          return (ɵCheckboxRequiredValidator_BaseFactory || (ɵCheckboxRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(CheckboxRequiredValidator)))(t || CheckboxRequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CheckboxRequiredValidator,\n        selectors: [[\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControlName\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"formControl\", \"\"], [\"input\", \"type\", \"checkbox\", \"required\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function CheckboxRequiredValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"required\", ctx._enabled ? \"\" : null);\n          }\n        },\n        features: [i0.ɵɵProvidersFeature([CHECKBOX_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return CheckboxRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `EmailValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst EMAIL_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => EmailValidator),\n  multi: true\n};\n/**\n * A directive that adds the `email` validator to controls marked with the\n * `email` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * The email validation is based on the WHATWG HTML specification with some enhancements to\n * incorporate more RFC rules. More information can be found on the [Validators.email\n * page](api/forms/Validators#email).\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding an email validator\n *\n * The following example shows how to add an email validator to an input attached to an ngModel\n * binding.\n *\n * ```\n * <input type=\"email\" name=\"email\" ngModel email>\n * <input type=\"email\" name=\"email\" ngModel email=\"true\">\n * <input type=\"email\" name=\"email\" ngModel [email]=\"true\">\n * ```\n *\n * @publicApi\n * @ngModule FormsModule\n * @ngModule ReactiveFormsModule\n */\nlet EmailValidator = /*#__PURE__*/(() => {\n  class EmailValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'email';\n      /** @internal */\n      this.normalizeInput = booleanAttribute;\n      /** @internal */\n      this.createValidator = input => emailValidator;\n    }\n    /** @nodoc */\n    enabled(input) {\n      return input;\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵEmailValidator_BaseFactory;\n        return function EmailValidator_Factory(t) {\n          return (ɵEmailValidator_BaseFactory || (ɵEmailValidator_BaseFactory = i0.ɵɵgetInheritedFactory(EmailValidator)))(t || EmailValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: EmailValidator,\n        selectors: [[\"\", \"email\", \"\", \"formControlName\", \"\"], [\"\", \"email\", \"\", \"formControl\", \"\"], [\"\", \"email\", \"\", \"ngModel\", \"\"]],\n        inputs: {\n          email: \"email\"\n        },\n        features: [i0.ɵɵProvidersFeature([EMAIL_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return EmailValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MinLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MIN_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MinLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds minimum length validation to controls marked with the\n * `minlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a minimum length validator\n *\n * The following example shows how to add a minimum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel minlength=\"4\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MinLengthValidator = /*#__PURE__*/(() => {\n  class MinLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'minlength';\n      /** @internal */\n      this.normalizeInput = input => toInteger(input);\n      /** @internal */\n      this.createValidator = minlength => minLengthValidator(minlength);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMinLengthValidator_BaseFactory;\n        return function MinLengthValidator_Factory(t) {\n          return (ɵMinLengthValidator_BaseFactory || (ɵMinLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MinLengthValidator)))(t || MinLengthValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MinLengthValidator,\n        selectors: [[\"\", \"minlength\", \"\", \"formControlName\", \"\"], [\"\", \"minlength\", \"\", \"formControl\", \"\"], [\"\", \"minlength\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MinLengthValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"minlength\", ctx._enabled ? ctx.minlength : null);\n          }\n        },\n        inputs: {\n          minlength: \"minlength\"\n        },\n        features: [i0.ɵɵProvidersFeature([MIN_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MinLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `MaxLengthValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst MAX_LENGTH_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MaxLengthValidator),\n  multi: true\n};\n/**\n * A directive that adds maximum length validation to controls marked with the\n * `maxlength` attribute. The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a maximum length validator\n *\n * The following example shows how to add a maximum length validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel maxlength=\"25\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet MaxLengthValidator = /*#__PURE__*/(() => {\n  class MaxLengthValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'maxlength';\n      /** @internal */\n      this.normalizeInput = input => toInteger(input);\n      /** @internal */\n      this.createValidator = maxlength => maxLengthValidator(maxlength);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMaxLengthValidator_BaseFactory;\n        return function MaxLengthValidator_Factory(t) {\n          return (ɵMaxLengthValidator_BaseFactory || (ɵMaxLengthValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MaxLengthValidator)))(t || MaxLengthValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MaxLengthValidator,\n        selectors: [[\"\", \"maxlength\", \"\", \"formControlName\", \"\"], [\"\", \"maxlength\", \"\", \"formControl\", \"\"], [\"\", \"maxlength\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function MaxLengthValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"maxlength\", ctx._enabled ? ctx.maxlength : null);\n          }\n        },\n        inputs: {\n          maxlength: \"maxlength\"\n        },\n        features: [i0.ɵɵProvidersFeature([MAX_LENGTH_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MaxLengthValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * Provider which adds `PatternValidator` to the `NG_VALIDATORS` multi-provider list.\n */\nconst PATTERN_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => PatternValidator),\n  multi: true\n};\n/**\n * @description\n * A directive that adds regex pattern validation to controls marked with the\n * `pattern` attribute. The regex must match the entire control value.\n * The directive is provided with the `NG_VALIDATORS` multi-provider list.\n *\n * @see [Form Validation](guide/form-validation)\n *\n * @usageNotes\n *\n * ### Adding a pattern validator\n *\n * The following example shows how to add a pattern validator to an input attached to an\n * ngModel binding.\n *\n * ```html\n * <input name=\"firstName\" ngModel pattern=\"[a-zA-Z ]*\">\n * ```\n *\n * @ngModule ReactiveFormsModule\n * @ngModule FormsModule\n * @publicApi\n */\nlet PatternValidator = /*#__PURE__*/(() => {\n  class PatternValidator extends AbstractValidatorDirective {\n    constructor() {\n      super(...arguments);\n      /** @internal */\n      this.inputName = 'pattern';\n      /** @internal */\n      this.normalizeInput = input => input;\n      /** @internal */\n      this.createValidator = input => patternValidator(input);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵPatternValidator_BaseFactory;\n        return function PatternValidator_Factory(t) {\n          return (ɵPatternValidator_BaseFactory || (ɵPatternValidator_BaseFactory = i0.ɵɵgetInheritedFactory(PatternValidator)))(t || PatternValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: PatternValidator,\n        selectors: [[\"\", \"pattern\", \"\", \"formControlName\", \"\"], [\"\", \"pattern\", \"\", \"formControl\", \"\"], [\"\", \"pattern\", \"\", \"ngModel\", \"\"]],\n        hostVars: 1,\n        hostBindings: function PatternValidator_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"pattern\", ctx._enabled ? ctx.pattern : null);\n          }\n        },\n        inputs: {\n          pattern: \"pattern\"\n        },\n        features: [i0.ɵɵProvidersFeature([PATTERN_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return PatternValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst SHARED_FORM_DIRECTIVES = [ɵNgNoValidate, NgSelectOption, ɵNgSelectMultipleOption, DefaultValueAccessor, NumberValueAccessor, RangeValueAccessor, CheckboxControlValueAccessor, SelectControlValueAccessor, SelectMultipleControlValueAccessor, RadioControlValueAccessor, NgControlStatus, NgControlStatusGroup, RequiredValidator, MinLengthValidator, MaxLengthValidator, PatternValidator, CheckboxRequiredValidator, EmailValidator, MinValidator, MaxValidator];\nconst TEMPLATE_DRIVEN_DIRECTIVES = [NgModel, NgModelGroup, NgForm];\nconst REACTIVE_DRIVEN_DIRECTIVES = [FormControlDirective, FormGroupDirective, FormControlName, FormGroupName, FormArrayName];\n/**\n * Internal module used for sharing directives between FormsModule and ReactiveFormsModule\n */\nlet ɵInternalFormsSharedModule = /*#__PURE__*/(() => {\n  class ɵInternalFormsSharedModule {\n    static {\n      this.ɵfac = function ɵInternalFormsSharedModule_Factory(t) {\n        return new (t || ɵInternalFormsSharedModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: ɵInternalFormsSharedModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return ɵInternalFormsSharedModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Tracks the value and validity state of an array of `FormControl`,\n * `FormGroup` or `FormArray` instances.\n *\n * A `FormArray` aggregates the values of each child `FormControl` into an array.\n * It calculates its status by reducing the status values of its children. For example, if one of\n * the controls in a `FormArray` is invalid, the entire array becomes invalid.\n *\n * `FormArray` accepts one generic argument, which is the type of the controls inside.\n * If you need a heterogenous array, use {@link UntypedFormArray}.\n *\n * `FormArray` is one of the four fundamental building blocks used to define forms in Angular,\n * along with `FormControl`, `FormGroup`, and `FormRecord`.\n *\n * @usageNotes\n *\n * ### Create an array of form controls\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy', Validators.minLength(2)),\n *   new FormControl('Drew'),\n * ]);\n *\n * console.log(arr.value);   // ['Nancy', 'Drew']\n * console.log(arr.status);  // 'VALID'\n * ```\n *\n * ### Create a form array with array-level validators\n *\n * You include array-level validators and async validators. These come in handy\n * when you want to perform validation that considers the value of more than one child\n * control.\n *\n * The two types of validators are passed in separately as the second and third arg\n * respectively, or together as part of an options object.\n *\n * ```\n * const arr = new FormArray([\n *   new FormControl('Nancy'),\n *   new FormControl('Drew')\n * ], {validators: myValidator, asyncValidators: myAsyncValidator});\n * ```\n *\n * ### Set the updateOn property for all controls in a form array\n *\n * The options object is used to set a default value for each child\n * control's `updateOn` property. If you set `updateOn` to `'blur'` at the\n * array level, all child controls default to 'blur', unless the child\n * has explicitly specified a different `updateOn` value.\n *\n * ```ts\n * const arr = new FormArray([\n *    new FormControl()\n * ], {updateOn: 'blur'});\n * ```\n *\n * ### Adding or removing controls from a form array\n *\n * To change the controls in the array, use the `push`, `insert`, `removeAt` or `clear` methods\n * in `FormArray` itself. These methods ensure the controls are properly tracked in the\n * form's hierarchy. Do not modify the array of `AbstractControl`s used to instantiate\n * the `FormArray` directly, as that result in strange and unexpected behavior such\n * as broken change detection.\n *\n * @publicApi\n */\nclass FormArray extends AbstractControl {\n  /**\n   * Creates a new `FormArray` instance.\n   *\n   * @param controls An array of child controls. Each child control is given an index\n   * where it is registered.\n   *\n   * @param validatorOrOpts A synchronous validator function, or an array of\n   * such functions, or an `AbstractControlOptions` object that contains validation functions\n   * and a validation trigger.\n   *\n   * @param asyncValidator A single async validator or array of async validator functions\n   *\n   */\n  constructor(controls, validatorOrOpts, asyncValidator) {\n    super(pickValidators(validatorOrOpts), pickAsyncValidators(asyncValidator, validatorOrOpts));\n    this.controls = controls;\n    this._initObservables();\n    this._setUpdateStrategy(validatorOrOpts);\n    this._setUpControls();\n    this.updateValueAndValidity({\n      onlySelf: true,\n      // If `asyncValidator` is present, it will trigger control status change from `PENDING` to\n      // `VALID` or `INVALID`.\n      // The status should be broadcasted via the `statusChanges` observable, so we set `emitEvent`\n      // to `true` to allow that during the control creation process.\n      emitEvent: !!this.asyncValidator\n    });\n  }\n  /**\n   * Get the `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to retrieve the control. If `index` is negative, it will wrap\n   *     around from the back, and if index is greatly negative (less than `-length`), the result is\n   * undefined. This behavior is the same as `Array.at(index)`.\n   */\n  at(index) {\n    return this.controls[this._adjustIndex(index)];\n  }\n  /**\n   * Insert a new `AbstractControl` at the end of the array.\n   *\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is added.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  push(control, options = {}) {\n    this.controls.push(control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Insert a new `AbstractControl` at the given `index` in the array.\n   *\n   * @param index Index in the array to insert the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), prepends to the array.\n   * This behavior is the same as `Array.splice(index, 0, control)`.\n   * @param control Form control to be inserted\n   * @param options Specifies whether this FormArray instance should emit events after a new\n   *     control is inserted.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * inserted. When false, no events are emitted.\n   */\n  insert(index, control, options = {}) {\n    this.controls.splice(index, 0, control);\n    this._registerControl(control);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Remove the control at the given `index` in the array.\n   *\n   * @param index Index in the array to remove the control.  If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), removes the first\n   *     element. This behavior is the same as `Array.splice(index, 1)`.\n   * @param options Specifies whether this FormArray instance should emit events after a\n   *     control is removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * removed. When false, no events are emitted.\n   */\n  removeAt(index, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Replace an existing control.\n   *\n   * @param index Index in the array to replace the control. If `index` is negative, wraps around\n   *     from the back. If `index` is greatly negative (less than `-length`), replaces the first\n   *     element. This behavior is the same as `Array.splice(index, 1, control)`.\n   * @param control The `AbstractControl` control to replace the existing control\n   * @param options Specifies whether this FormArray instance should emit events after an\n   *     existing control is replaced with a new one.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control is\n   * replaced with a new one. When false, no events are emitted.\n   */\n  setControl(index, control, options = {}) {\n    // Adjust the index, then clamp it at no less than 0 to prevent undesired underflows.\n    let adjustedIndex = this._adjustIndex(index);\n    if (adjustedIndex < 0) adjustedIndex = 0;\n    if (this.controls[adjustedIndex]) this.controls[adjustedIndex]._registerOnCollectionChange(() => {});\n    this.controls.splice(adjustedIndex, 1);\n    if (control) {\n      this.controls.splice(adjustedIndex, 0, control);\n      this._registerControl(control);\n    }\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n    this._onCollectionChange();\n  }\n  /**\n   * Length of the control array.\n   */\n  get length() {\n    return this.controls.length;\n  }\n  /**\n   * Sets the value of the `FormArray`. It accepts an array that matches\n   * the structure of the control.\n   *\n   * This method performs strict checks, and throws an error if you try\n   * to set the value of a control that doesn't exist or if you exclude the\n   * value of a control.\n   *\n   * @usageNotes\n   * ### Set the values for the controls in the form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *   new FormControl(),\n   *   new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.setValue(['Nancy', 'Drew']);\n   * console.log(arr.value);   // ['Nancy', 'Drew']\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control value is updated.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  setValue(value, options = {}) {\n    assertAllValuesPresent(this, false, value);\n    value.forEach((newValue, index) => {\n      assertControlPresent(this, false, index);\n      this.at(index).setValue(newValue, {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Patches the value of the `FormArray`. It accepts an array that matches the\n   * structure of the control, and does its best to match the values to the correct\n   * controls in the group.\n   *\n   * It accepts both super-sets and sub-sets of the array without throwing an error.\n   *\n   * @usageNotes\n   * ### Patch the values for controls in a form array\n   *\n   * ```\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.value);   // [null, null]\n   *\n   * arr.patchValue(['Nancy']);\n   * console.log(arr.value);   // ['Nancy', null]\n   * ```\n   *\n   * @param value Array of latest values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when the control\n   * value is updated. When false, no events are emitted. The configuration options are passed to\n   * the {@link AbstractControl#updateValueAndValidity updateValueAndValidity} method.\n   */\n  patchValue(value, options = {}) {\n    // Even though the `value` argument type doesn't allow `null` and `undefined` values, the\n    // `patchValue` can be called recursively and inner data structures might have these values,\n    // so we just ignore such cases when a field containing FormArray instance receives `null` or\n    // `undefined` as a value.\n    if (value == null /* both `null` and `undefined` */) return;\n    value.forEach((newValue, index) => {\n      if (this.at(index)) {\n        this.at(index).patchValue(newValue, {\n          onlySelf: true,\n          emitEvent: options.emitEvent\n        });\n      }\n    });\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * Resets the `FormArray` and all descendants are marked `pristine` and `untouched`, and the\n   * value of all descendants to null or null maps.\n   *\n   * You reset to a specific form state by passing in an array of states\n   * that matches the structure of the control. The state is a standalone value\n   * or a form state object with both a value and a disabled status.\n   *\n   * @usageNotes\n   * ### Reset the values in a form array\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * arr.reset(['name', 'last name']);\n   *\n   * console.log(arr.value);  // ['name', 'last name']\n   * ```\n   *\n   * ### Reset the values in a form array and the disabled status for the first control\n   *\n   * ```\n   * arr.reset([\n   *   {value: 'name', disabled: true},\n   *   'last'\n   * ]);\n   *\n   * console.log(arr.value);  // ['last']\n   * console.log(arr.at(0).status);  // 'DISABLED'\n   * ```\n   *\n   * @param value Array of values for the controls\n   * @param options Configure options that determine how the control propagates changes and\n   * emits events after the value changes\n   *\n   * * `onlySelf`: When true, each change only affects this control, and not its parent. Default\n   * is false.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges`\n   * observables emit events with the latest status and value when the control is reset.\n   * When false, no events are emitted.\n   * The configuration options are passed to the {@link AbstractControl#updateValueAndValidity\n   * updateValueAndValidity} method.\n   */\n  reset(value = [], options = {}) {\n    this._forEachChild((control, index) => {\n      control.reset(value[index], {\n        onlySelf: true,\n        emitEvent: options.emitEvent\n      });\n    });\n    this._updatePristine(options);\n    this._updateTouched(options);\n    this.updateValueAndValidity(options);\n  }\n  /**\n   * The aggregate value of the array, including any disabled controls.\n   *\n   * Reports all values regardless of disabled status.\n   */\n  getRawValue() {\n    return this.controls.map(control => control.getRawValue());\n  }\n  /**\n   * Remove all controls in the `FormArray`.\n   *\n   * @param options Specifies whether this FormArray instance should emit events after all\n   *     controls are removed.\n   * * `emitEvent`: When true or not supplied (the default), both the `statusChanges` and\n   * `valueChanges` observables emit events with the latest status and value when all controls\n   * in this FormArray instance are removed. When false, no events are emitted.\n   *\n   * @usageNotes\n   * ### Remove all elements from a FormArray\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   * console.log(arr.length);  // 2\n   *\n   * arr.clear();\n   * console.log(arr.length);  // 0\n   * ```\n   *\n   * It's a simpler and more efficient alternative to removing all elements one by one:\n   *\n   * ```ts\n   * const arr = new FormArray([\n   *    new FormControl(),\n   *    new FormControl()\n   * ]);\n   *\n   * while (arr.length) {\n   *    arr.removeAt(0);\n   * }\n   * ```\n   */\n  clear(options = {}) {\n    if (this.controls.length < 1) return;\n    this._forEachChild(control => control._registerOnCollectionChange(() => {}));\n    this.controls.splice(0);\n    this.updateValueAndValidity({\n      emitEvent: options.emitEvent\n    });\n  }\n  /**\n   * Adjusts a negative index by summing it with the length of the array. For very negative\n   * indices, the result may remain negative.\n   * @internal\n   */\n  _adjustIndex(index) {\n    return index < 0 ? index + this.length : index;\n  }\n  /** @internal */\n  _syncPendingControls() {\n    let subtreeUpdated = this.controls.reduce((updated, child) => {\n      return child._syncPendingControls() ? true : updated;\n    }, false);\n    if (subtreeUpdated) this.updateValueAndValidity({\n      onlySelf: true\n    });\n    return subtreeUpdated;\n  }\n  /** @internal */\n  _forEachChild(cb) {\n    this.controls.forEach((control, index) => {\n      cb(control, index);\n    });\n  }\n  /** @internal */\n  _updateValue() {\n    this.value = this.controls.filter(control => control.enabled || this.disabled).map(control => control.value);\n  }\n  /** @internal */\n  _anyControls(condition) {\n    return this.controls.some(control => control.enabled && condition(control));\n  }\n  /** @internal */\n  _setUpControls() {\n    this._forEachChild(control => this._registerControl(control));\n  }\n  /** @internal */\n  _allControlsDisabled() {\n    for (const control of this.controls) {\n      if (control.enabled) return false;\n    }\n    return this.controls.length > 0 || this.disabled;\n  }\n  _registerControl(control) {\n    control.setParent(this);\n    control._registerOnCollectionChange(this._onCollectionChange);\n  }\n  /** @internal */\n  _find(name) {\n    return this.at(name) ?? null;\n  }\n}\nconst UntypedFormArray = FormArray;\n/**\n * @description\n * Asserts that the given control is an instance of `FormArray`\n *\n * @publicApi\n */\nconst isFormArray = control => control instanceof FormArray;\nfunction isAbstractControlOptions(options) {\n  return !!options && (options.asyncValidators !== undefined || options.validators !== undefined || options.updateOn !== undefined);\n}\n// clang-format on\n/**\n * @description\n * Creates an `AbstractControl` from a user-specified configuration.\n *\n * The `FormBuilder` provides syntactic sugar that shortens creating instances of a\n * `FormControl`, `FormGroup`, or `FormArray`. It reduces the amount of boilerplate needed to\n * build complex forms.\n *\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nlet FormBuilder = /*#__PURE__*/(() => {\n  class FormBuilder {\n    constructor() {\n      this.useNonNullable = false;\n    }\n    /**\n     * @description\n     * Returns a FormBuilder in which automatically constructed `FormControl` elements\n     * have `{nonNullable: true}` and are non-nullable.\n     *\n     * **Constructing non-nullable controls**\n     *\n     * When constructing a control, it will be non-nullable, and will reset to its initial value.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.control('Alex'); // FormControl<string>\n     * name.reset();\n     * console.log(name); // 'Alex'\n     * ```\n     *\n     * **Constructing non-nullable groups or arrays**\n     *\n     * When constructing a group or array, all automatically created inner controls will be\n     * non-nullable, and will reset to their initial values.\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * let name = nnfb.group({who: 'Alex'}); // FormGroup<{who: FormControl<string>}>\n     * name.reset();\n     * console.log(name); // {who: 'Alex'}\n     * ```\n     * **Constructing *nullable* fields on groups or arrays**\n     *\n     * It is still possible to have a nullable field. In particular, any `FormControl` which is\n     * *already* constructed will not be altered. For example:\n     *\n     * ```ts\n     * let nnfb = new FormBuilder().nonNullable;\n     * // FormGroup<{who: FormControl<string|null>}>\n     * let name = nnfb.group({who: new FormControl('Alex')});\n     * name.reset(); console.log(name); // {who: null}\n     * ```\n     *\n     * Because the inner control is constructed explicitly by the caller, the builder has\n     * no control over how it is created, and cannot exclude the `null`.\n     */\n    get nonNullable() {\n      const nnfb = new FormBuilder();\n      nnfb.useNonNullable = true;\n      return nnfb;\n    }\n    group(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      let newOptions = {};\n      if (isAbstractControlOptions(options)) {\n        // `options` are `AbstractControlOptions`\n        newOptions = options;\n      } else if (options !== null) {\n        // `options` are legacy form group options\n        newOptions.validators = options.validator;\n        newOptions.asyncValidators = options.asyncValidator;\n      }\n      return new FormGroup(reducedControls, newOptions);\n    }\n    /**\n     * @description\n     * Constructs a new `FormRecord` instance. Accepts a single generic argument, which is an object\n     * containing all the keys and corresponding inner control types.\n     *\n     * @param controls A collection of child controls. The key for each child is the name\n     * under which it is registered.\n     *\n     * @param options Configuration options object for the `FormRecord`. The object should have the\n     * `AbstractControlOptions` type and might contain the following fields:\n     * * `validators`: A synchronous validator function, or an array of validator functions.\n     * * `asyncValidators`: A single async validator or array of async validator functions.\n     * * `updateOn`: The event upon which the control should be updated (options: 'change' | 'blur'\n     * | submit').\n     */\n    record(controls, options = null) {\n      const reducedControls = this._reduceControls(controls);\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormRecord(reducedControls, options);\n    }\n    /**\n     * @description\n     * Constructs a new `FormControl` with the given state, validators and options. Sets\n     * `{nonNullable: true}` in the options to get a non-nullable control. Otherwise, the\n     * control will be nullable. Accepts a single generic argument, which is the type  of the\n     * control's value.\n     *\n     * @param formState Initializes the control with an initial state value, or\n     * with an object that contains both a value and a disabled status.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of\n     * such functions, or a `FormControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator\n     * functions.\n     *\n     * @usageNotes\n     *\n     * ### Initialize a control as disabled\n     *\n     * The following example returns a control with an initial value in a disabled state.\n     *\n     * <code-example path=\"forms/ts/formBuilder/form_builder_example.ts\" region=\"disabled-control\">\n     * </code-example>\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      let newOptions = {};\n      if (!this.useNonNullable) {\n        return new FormControl(formState, validatorOrOpts, asyncValidator);\n      }\n      if (isAbstractControlOptions(validatorOrOpts)) {\n        // If the second argument is options, then they are copied.\n        newOptions = validatorOrOpts;\n      } else {\n        // If the other arguments are validators, they are copied into an options object.\n        newOptions.validators = validatorOrOpts;\n        newOptions.asyncValidators = asyncValidator;\n      }\n      return new FormControl(formState, {\n        ...newOptions,\n        nonNullable: true\n      });\n    }\n    /**\n     * Constructs a new `FormArray` from the given array of configurations,\n     * validators and options. Accepts a single generic argument, which is the type of each control\n     * inside the array.\n     *\n     * @param controls An array of child controls or control configs. Each child control is given an\n     *     index when it is registered.\n     *\n     * @param validatorOrOpts A synchronous validator function, or an array of such functions, or an\n     *     `AbstractControlOptions` object that contains\n     * validation functions and a validation trigger.\n     *\n     * @param asyncValidator A single async validator or array of async validator functions.\n     */\n    array(controls, validatorOrOpts, asyncValidator) {\n      const createdControls = controls.map(c => this._createControl(c));\n      // Cast to `any` because the inferred types are not as specific as Element.\n      return new FormArray(createdControls, validatorOrOpts, asyncValidator);\n    }\n    /** @internal */\n    _reduceControls(controls) {\n      const createdControls = {};\n      Object.keys(controls).forEach(controlName => {\n        createdControls[controlName] = this._createControl(controls[controlName]);\n      });\n      return createdControls;\n    }\n    /** @internal */\n    _createControl(controls) {\n      if (controls instanceof FormControl) {\n        return controls;\n      } else if (controls instanceof AbstractControl) {\n        // A control; just return it\n        return controls;\n      } else if (Array.isArray(controls)) {\n        // ControlConfig Tuple\n        const value = controls[0];\n        const validator = controls.length > 1 ? controls[1] : null;\n        const asyncValidator = controls.length > 2 ? controls[2] : null;\n        return this.control(value, validator, asyncValidator);\n      } else {\n        // T or FormControlState<T>\n        return this.control(controls);\n      }\n    }\n    static {\n      this.ɵfac = function FormBuilder_Factory(t) {\n        return new (t || FormBuilder)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FormBuilder,\n        factory: FormBuilder.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * @description\n * `NonNullableFormBuilder` is similar to {@link FormBuilder}, but automatically constructed\n * {@link FormControl} elements have `{nonNullable: true}` and are non-nullable.\n *\n * @publicApi\n */\nlet NonNullableFormBuilder = /*#__PURE__*/(() => {\n  class NonNullableFormBuilder {\n    static {\n      this.ɵfac = function NonNullableFormBuilder_Factory(t) {\n        return new (t || NonNullableFormBuilder)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: NonNullableFormBuilder,\n        factory: () => (() => inject(FormBuilder).nonNullable)(),\n        providedIn: 'root'\n      });\n    }\n  }\n  return NonNullableFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * UntypedFormBuilder is the same as `FormBuilder`, but it provides untyped controls.\n */\nlet UntypedFormBuilder = /*#__PURE__*/(() => {\n  class UntypedFormBuilder extends FormBuilder {\n    group(controlsConfig, options = null) {\n      return super.group(controlsConfig, options);\n    }\n    /**\n     * Like `FormBuilder#control`, except the resulting control is untyped.\n     */\n    control(formState, validatorOrOpts, asyncValidator) {\n      return super.control(formState, validatorOrOpts, asyncValidator);\n    }\n    /**\n     * Like `FormBuilder#array`, except the resulting array is untyped.\n     */\n    array(controlsConfig, validatorOrOpts, asyncValidator) {\n      return super.array(controlsConfig, validatorOrOpts, asyncValidator);\n    }\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵUntypedFormBuilder_BaseFactory;\n        return function UntypedFormBuilder_Factory(t) {\n          return (ɵUntypedFormBuilder_BaseFactory || (ɵUntypedFormBuilder_BaseFactory = i0.ɵɵgetInheritedFactory(UntypedFormBuilder)))(t || UntypedFormBuilder);\n        };\n      })();\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: UntypedFormBuilder,\n        factory: UntypedFormBuilder.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return UntypedFormBuilder;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of the forms package.\n */\n/**\n * @publicApi\n */\nconst VERSION = /*#__PURE__*/new Version('17.2.2');\n\n/**\n * Exports the required providers and directives for template-driven forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](/guide/forms-overview)\n * @see [Template-driven Forms Guide](/guide/forms)\n *\n * @publicApi\n */\nlet FormsModule = /*#__PURE__*/(() => {\n  class FormsModule {\n    /**\n     * @description\n     * Provides options for configuring the forms module.\n     *\n     * @param opts An object of configuration options\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: FormsModule,\n        providers: [{\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static {\n      this.ɵfac = function FormsModule_Factory(t) {\n        return new (t || FormsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: FormsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ɵInternalFormsSharedModule]\n      });\n    }\n  }\n  return FormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Exports the required infrastructure and directives for reactive forms,\n * making them available for import by NgModules that import this module.\n *\n * @see [Forms Overview](guide/forms-overview)\n * @see [Reactive Forms Guide](guide/reactive-forms)\n *\n * @publicApi\n */\nlet ReactiveFormsModule = /*#__PURE__*/(() => {\n  class ReactiveFormsModule {\n    /**\n     * @description\n     * Provides options for configuring the reactive forms module.\n     *\n     * @param opts An object of configuration options\n     * * `warnOnNgModelWithFormControl` Configures when to emit a warning when an `ngModel`\n     * binding is used with reactive form directives.\n     * * `callSetDisabledState` Configures whether to `always` call `setDisabledState`, which is more\n     * correct, or to only call it `whenDisabled`, which is the legacy behavior.\n     */\n    static withConfig(opts) {\n      return {\n        ngModule: ReactiveFormsModule,\n        providers: [{\n          provide: NG_MODEL_WITH_FORM_CONTROL_WARNING,\n          useValue: opts.warnOnNgModelWithFormControl ?? 'always'\n        }, {\n          provide: CALL_SET_DISABLED_STATE,\n          useValue: opts.callSetDisabledState ?? setDisabledStateDefault\n        }]\n      };\n    }\n    static {\n      this.ɵfac = function ReactiveFormsModule_Factory(t) {\n        return new (t || ReactiveFormsModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: ReactiveFormsModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ɵInternalFormsSharedModule]\n      });\n    }\n  }\n  return ReactiveFormsModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @module\n * @description\n * This module is used for handling user input, by defining and building a `FormGroup` that\n * consists of `FormControl` objects, and mapping them onto the DOM. `FormControl`\n * objects can then be used to read information from the form DOM elements.\n *\n * Forms providers are not included in default providers; you must import these providers\n * explicitly.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AbstractControl, AbstractControlDirective, AbstractFormGroupDirective, COMPOSITION_BUFFER_MODE, CheckboxControlValueAccessor, CheckboxRequiredValidator, ControlContainer, DefaultValueAccessor, EmailValidator, FormArray, FormArrayName, FormBuilder, FormControl, FormControlDirective, FormControlName, FormGroup, FormGroupDirective, FormGroupName, FormRecord, FormsModule, MaxLengthValidator, MaxValidator, MinLengthValidator, MinValidator, NG_ASYNC_VALIDATORS, NG_VALIDATORS, NG_VALUE_ACCESSOR, NgControl, NgControlStatus, NgControlStatusGroup, NgForm, NgModel, NgModelGroup, NgSelectOption, NonNullableFormBuilder, NumberValueAccessor, PatternValidator, RadioControlValueAccessor, RangeValueAccessor, ReactiveFormsModule, RequiredValidator, SelectControlValueAccessor, SelectMultipleControlValueAccessor, UntypedFormArray, UntypedFormBuilder, UntypedFormControl, UntypedFormGroup, VERSION, Validators, isFormArray, isFormControl, isFormGroup, isFormRecord, ɵInternalFormsSharedModule, ɵNgNoValidate, ɵNgSelectMultipleOption };\n","import * as i0 from '@angular/core';\nimport { PLATFORM_ID, Injectable, Inject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n  hasV8BreakIterator = typeof Intl !== 'undefined' && Intl.v8BreakIterator;\n} catch {\n  hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nlet Platform = /*#__PURE__*/(() => {\n  class Platform {\n    constructor(_platformId) {\n      this._platformId = _platformId;\n      // We want to use the Angular platform check because if the Document is shimmed\n      // without the navigator, the following checks will fail. This is preferred because\n      // sometimes the Document may be shimmed without the user's knowledge or intention\n      /** Whether the Angular application is being rendered in the browser. */\n      this.isBrowser = this._platformId ? isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n      /** Whether the current browser is Microsoft Edge. */\n      this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n      /** Whether the current rendering engine is Microsoft Trident. */\n      this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n      // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n      /** Whether the current rendering engine is Blink. */\n      this.BLINK = this.isBrowser && !!(window.chrome || hasV8BreakIterator) && typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT;\n      // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n      // ensure that Webkit runs standalone and is not used as another engine's base.\n      /** Whether the current rendering engine is WebKit. */\n      this.WEBKIT = this.isBrowser && /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n      /** Whether the current platform is Apple iOS. */\n      this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) && !('MSStream' in window);\n      // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n      // them self as Gecko-like browsers and modify the userAgent's according to that.\n      // Since we only cover one explicit Firefox case, we can simply check for Firefox\n      // instead of having an unstable check for Gecko.\n      /** Whether the current browser is Firefox. */\n      this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n      /** Whether the current platform is Android. */\n      // Trident on mobile adds the android platform to the userAgent to trick detections.\n      this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n      // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n      // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n      // Safari browser should also use Webkit as its layout engine.\n      /** Whether the current browser is Safari. */\n      this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n    static {\n      this.ɵfac = function Platform_Factory(t) {\n        return new (t || Platform)(i0.ɵɵinject(PLATFORM_ID));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Platform,\n        factory: Platform.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Platform;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PlatformModule = /*#__PURE__*/(() => {\n  class PlatformModule {\n    static {\n      this.ɵfac = function PlatformModule_Factory(t) {\n        return new (t || PlatformModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: PlatformModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return PlatformModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Cached result Set of input types support by the current browser. */\nlet supportedInputTypes;\n/** Types of `<input>` that *might* be supported. */\nconst candidateInputTypes = [\n// `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n// first changing it to something else:\n// The specified value \"\" does not conform to the required format.\n// The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n'color', 'button', 'checkbox', 'date', 'datetime-local', 'email', 'file', 'hidden', 'image', 'month', 'number', 'password', 'radio', 'range', 'reset', 'search', 'submit', 'tel', 'text', 'time', 'url', 'week'];\n/** @returns The input types supported by this browser. */\nfunction getSupportedInputTypes() {\n  // Result is cached.\n  if (supportedInputTypes) {\n    return supportedInputTypes;\n  }\n  // We can't check if an input type is not supported until we're on the browser, so say that\n  // everything is supported when not on the browser. We don't use `Platform` here since it's\n  // just a helper function and can't inject it.\n  if (typeof document !== 'object' || !document) {\n    supportedInputTypes = new Set(candidateInputTypes);\n    return supportedInputTypes;\n  }\n  let featureTestInput = document.createElement('input');\n  supportedInputTypes = new Set(candidateInputTypes.filter(value => {\n    featureTestInput.setAttribute('type', value);\n    return featureTestInput.type === value;\n  }));\n  return supportedInputTypes;\n}\n\n/** Cached result of whether the user's browser supports passive event listeners. */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n */\nfunction supportsPassiveEventListeners() {\n  if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n    try {\n      window.addEventListener('test', null, Object.defineProperty({}, 'passive', {\n        get: () => supportsPassiveEvents = true\n      }));\n    } finally {\n      supportsPassiveEvents = supportsPassiveEvents || false;\n    }\n  }\n  return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param options Object to be normalized.\n */\nfunction normalizePassiveListenerOptions(options) {\n  return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/** The possible ways the browser may handle the horizontal scroll axis in RTL languages. */\nvar RtlScrollAxisType = /*#__PURE__*/function (RtlScrollAxisType) {\n  /**\n   * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"NORMAL\"] = 0] = \"NORMAL\";\n  /**\n   * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"NEGATED\"] = 1] = \"NEGATED\";\n  /**\n   * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n   * all the way right.\n   */\n  RtlScrollAxisType[RtlScrollAxisType[\"INVERTED\"] = 2] = \"INVERTED\";\n  return RtlScrollAxisType;\n}(RtlScrollAxisType || {});\n/** Cached result of the way the browser handles the horizontal scroll axis in RTL mode. */\nlet rtlScrollAxisType;\n/** Cached result of the check that indicates whether the browser supports scroll behaviors. */\nlet scrollBehaviorSupported;\n/** Check whether the browser supports scroll behaviors. */\nfunction supportsScrollBehavior() {\n  if (scrollBehaviorSupported == null) {\n    // If we're not in the browser, it can't be supported. Also check for `Element`, because\n    // some projects stub out the global `document` during SSR which can throw us off.\n    if (typeof document !== 'object' || !document || typeof Element !== 'function' || !Element) {\n      scrollBehaviorSupported = false;\n      return scrollBehaviorSupported;\n    }\n    // If the element can have a `scrollBehavior` style, we can be sure that it's supported.\n    if ('scrollBehavior' in document.documentElement.style) {\n      scrollBehaviorSupported = true;\n    } else {\n      // At this point we have 3 possibilities: `scrollTo` isn't supported at all, it's\n      // supported but it doesn't handle scroll behavior, or it has been polyfilled.\n      const scrollToFunction = Element.prototype.scrollTo;\n      if (scrollToFunction) {\n        // We can detect if the function has been polyfilled by calling `toString` on it. Native\n        // functions are obfuscated using `[native code]`, whereas if it was overwritten we'd get\n        // the actual function source. Via https://davidwalsh.name/detect-native-function. Consider\n        // polyfilled functions as supporting scroll behavior.\n        scrollBehaviorSupported = !/\\{\\s*\\[native code\\]\\s*\\}/.test(scrollToFunction.toString());\n      } else {\n        scrollBehaviorSupported = false;\n      }\n    }\n  }\n  return scrollBehaviorSupported;\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n */\nfunction getRtlScrollAxisType() {\n  // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n  if (typeof document !== 'object' || !document) {\n    return RtlScrollAxisType.NORMAL;\n  }\n  if (rtlScrollAxisType == null) {\n    // Create a 1px wide scrolling container and a 2px wide content element.\n    const scrollContainer = document.createElement('div');\n    const containerStyle = scrollContainer.style;\n    scrollContainer.dir = 'rtl';\n    containerStyle.width = '1px';\n    containerStyle.overflow = 'auto';\n    containerStyle.visibility = 'hidden';\n    containerStyle.pointerEvents = 'none';\n    containerStyle.position = 'absolute';\n    const content = document.createElement('div');\n    const contentStyle = content.style;\n    contentStyle.width = '2px';\n    contentStyle.height = '1px';\n    scrollContainer.appendChild(content);\n    document.body.appendChild(scrollContainer);\n    rtlScrollAxisType = RtlScrollAxisType.NORMAL;\n    // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n    // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n    // dealing with one of the other two types of browsers.\n    if (scrollContainer.scrollLeft === 0) {\n      // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n      // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n      // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n      // return 0 when we read it again.\n      scrollContainer.scrollLeft = 1;\n      rtlScrollAxisType = scrollContainer.scrollLeft === 0 ? RtlScrollAxisType.NEGATED : RtlScrollAxisType.INVERTED;\n    }\n    scrollContainer.remove();\n  }\n  return rtlScrollAxisType;\n}\nlet shadowDomIsSupported;\n/** Checks whether the user's browser support Shadow DOM. */\nfunction _supportsShadowDom() {\n  if (shadowDomIsSupported == null) {\n    const head = typeof document !== 'undefined' ? document.head : null;\n    shadowDomIsSupported = !!(head && (head.createShadowRoot || head.attachShadow));\n  }\n  return shadowDomIsSupported;\n}\n/** Gets the shadow root of an element, if supported and the element is inside the Shadow DOM. */\nfunction _getShadowRoot(element) {\n  if (_supportsShadowDom()) {\n    const rootNode = element.getRootNode ? element.getRootNode() : null;\n    // Note that this should be caught by `_supportsShadowDom`, but some\n    // teams have been able to hit this code path on unsupported browsers.\n    if (typeof ShadowRoot !== 'undefined' && ShadowRoot && rootNode instanceof ShadowRoot) {\n      return rootNode;\n    }\n  }\n  return null;\n}\n/**\n * Gets the currently-focused element on the page while\n * also piercing through Shadow DOM boundaries.\n */\nfunction _getFocusedElementPierceShadowDom() {\n  let activeElement = typeof document !== 'undefined' && document ? document.activeElement : null;\n  while (activeElement && activeElement.shadowRoot) {\n    const newActiveElement = activeElement.shadowRoot.activeElement;\n    if (newActiveElement === activeElement) {\n      break;\n    } else {\n      activeElement = newActiveElement;\n    }\n  }\n  return activeElement;\n}\n/** Gets the target of an event while accounting for Shadow DOM. */\nfunction _getEventTarget(event) {\n  // If an event is bound outside the Shadow DOM, the `event.target` will\n  // point to the shadow root so we have to use `composedPath` instead.\n  return event.composedPath ? event.composedPath()[0] : event.target;\n}\n\n/** Gets whether the code is currently running in a test environment. */\nfunction _isTestEnvironment() {\n  // We can't use `declare const` because it causes conflicts inside Google with the real typings\n  // for these symbols and we can't read them off the global object, because they don't appear to\n  // be attached there for some runners like Jest.\n  // (see: https://github.com/angular/components/issues/23365#issuecomment-938146643)\n  return (\n    // @ts-ignore\n    typeof __karma__ !== 'undefined' && !!__karma__ ||\n    // @ts-ignore\n    typeof jasmine !== 'undefined' && !!jasmine ||\n    // @ts-ignore\n    typeof jest !== 'undefined' && !!jest ||\n    // @ts-ignore\n    typeof Mocha !== 'undefined' && !!Mocha\n  );\n}\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, RtlScrollAxisType, _getEventTarget, _getFocusedElementPierceShadowDom, _getShadowRoot, _isTestEnvironment, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n","import { ElementRef } from '@angular/core';\n\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n  return value != null && `${value}` !== 'false';\n}\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n  return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n  // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n  // and other non-number values as NaN, where Number just uses 0) but it considers the string\n  // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n  return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\nfunction coerceArray(value) {\n  return Array.isArray(value) ? value : [value];\n}\n\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n  if (value == null) {\n    return '';\n  }\n  return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n  return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * Coerces a value to an array of trimmed non-empty strings.\n * Any input that is not an array, `null` or `undefined` will be turned into a string\n * via `toString()` and subsequently split with the given separator.\n * `null` and `undefined` will result in an empty array.\n * This results in the following outcomes:\n * - `null` -&gt; `[]`\n * - `[null]` -&gt; `[\"null\"]`\n * - `[\"a\", \"b \", \" \"]` -&gt; `[\"a\", \"b\"]`\n * - `[1, [2, 3]]` -&gt; `[\"1\", \"2,3\"]`\n * - `[{ a: 0 }]` -&gt; `[\"[object Object]\"]`\n * - `{ a: 0 }` -&gt; `[\"[object\", \"Object]\"]`\n *\n * Useful for defining CSS classes or table columns.\n * @param value the value to coerce into an array of strings\n * @param separator split-separator if value isn't an array\n */\nfunction coerceStringArray(value, separator = /\\s+/) {\n  const result = [];\n  if (value != null) {\n    const sourceValues = Array.isArray(value) ? value : `${value}`.split(separator);\n    for (const sourceValue of sourceValues) {\n      const trimmedString = `${sourceValue}`.trim();\n      if (trimmedString) {\n        result.push(trimmedString);\n      }\n    }\n  }\n  return result;\n}\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty, coerceStringArray };\n","import * as i0 from '@angular/core';\nimport { NgModule, CSP_NONCE, Injectable, Optional, Inject } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\nlet LayoutModule = /*#__PURE__*/(() => {\n  class LayoutModule {\n    static {\n      this.ɵfac = function LayoutModule_Factory(t) {\n        return new (t || LayoutModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: LayoutModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return LayoutModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = /*#__PURE__*/new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nlet MediaMatcher = /*#__PURE__*/(() => {\n  class MediaMatcher {\n    constructor(_platform, _nonce) {\n      this._platform = _platform;\n      this._nonce = _nonce;\n      this._matchMedia = this._platform.isBrowser && window.matchMedia ?\n      // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n      // call it from a different scope.\n      window.matchMedia.bind(window) : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n      if (this._platform.WEBKIT || this._platform.BLINK) {\n        createEmptyStyleRule(query, this._nonce);\n      }\n      return this._matchMedia(query);\n    }\n    static {\n      this.ɵfac = function MediaMatcher_Factory(t) {\n        return new (t || MediaMatcher)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(CSP_NONCE, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MediaMatcher,\n        factory: MediaMatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MediaMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query, nonce) {\n  if (mediaQueriesForWebkitCompatibility.has(query)) {\n    return;\n  }\n  try {\n    if (!mediaQueryStyleNode) {\n      mediaQueryStyleNode = document.createElement('style');\n      if (nonce) {\n        mediaQueryStyleNode.nonce = nonce;\n      }\n      mediaQueryStyleNode.setAttribute('type', 'text/css');\n      document.head.appendChild(mediaQueryStyleNode);\n    }\n    if (mediaQueryStyleNode.sheet) {\n      mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n      mediaQueriesForWebkitCompatibility.add(query);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n  // Use `as any` here to avoid adding additional necessary properties for\n  // the noop matcher.\n  return {\n    matches: query === 'all' || query === '',\n    media: query,\n    addListener: () => {},\n    removeListener: () => {}\n  };\n}\n\n/** Utility for checking the matching state of @media queries. */\nlet BreakpointObserver = /*#__PURE__*/(() => {\n  class BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n      this._mediaMatcher = _mediaMatcher;\n      this._zone = _zone;\n      /**  A map of all media queries currently being listened for. */\n      this._queries = new Map();\n      /** A subject for all other observables to takeUntil based on. */\n      this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n      this._destroySubject.next();\n      this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n      const queries = splitQueries(coerceArray(value));\n      return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n      const queries = splitQueries(coerceArray(value));\n      const observables = queries.map(query => this._registerQuery(query).observable);\n      let stateObservable = combineLatest(observables);\n      // Emit the first state immediately, and then debounce the subsequent emissions.\n      stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n      return stateObservable.pipe(map(breakpointStates => {\n        const response = {\n          matches: false,\n          breakpoints: {}\n        };\n        breakpointStates.forEach(({\n          matches,\n          query\n        }) => {\n          response.matches = response.matches || matches;\n          response.breakpoints[query] = matches;\n        });\n        return response;\n      }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n      // Only set up a new MediaQueryList if it is not already being listened for.\n      if (this._queries.has(query)) {\n        return this._queries.get(query);\n      }\n      const mql = this._mediaMatcher.matchMedia(query);\n      // Create callback for match changes and add it is as a listener.\n      const queryObservable = new Observable(observer => {\n        // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n        // back into the zone because matchMedia is only included in Zone.js by loading the\n        // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n        // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n        // patches it.\n        const handler = e => this._zone.run(() => observer.next(e));\n        mql.addListener(handler);\n        return () => {\n          mql.removeListener(handler);\n        };\n      }).pipe(startWith(mql), map(({\n        matches\n      }) => ({\n        query,\n        matches\n      })), takeUntil(this._destroySubject));\n      // Add the MediaQueryList to the set of queries.\n      const output = {\n        observable: queryObservable,\n        mql\n      };\n      this._queries.set(query, output);\n      return output;\n    }\n    static {\n      this.ɵfac = function BreakpointObserver_Factory(t) {\n        return new (t || BreakpointObserver)(i0.ɵɵinject(MediaMatcher), i0.ɵɵinject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: BreakpointObserver,\n        factory: BreakpointObserver.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return BreakpointObserver;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n  return queries.map(query => query.split(',')).reduce((a1, a2) => a1.concat(a2)).map(query => query.trim());\n}\n\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n  XSmall: '(max-width: 599.98px)',\n  Small: '(min-width: 600px) and (max-width: 959.98px)',\n  Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n  Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n  XLarge: '(min-width: 1920px)',\n  Handset: '(max-width: 599.98px) and (orientation: portrait), ' + '(max-width: 959.98px) and (orientation: landscape)',\n  Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' + '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  Web: '(min-width: 840px) and (orientation: portrait), ' + '(min-width: 1280px) and (orientation: landscape)',\n  HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n  TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n  WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n  HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n  TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n  WebLandscape: '(min-width: 1280px) and (orientation: landscape)'\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, APP_ID, Injectable, Inject, QueryList, booleanAttribute, Directive, Input, InjectionToken, Optional, EventEmitter, Output, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/platform';\nimport { Platform, _getFocusedElementPierceShadowDom, normalizePassiveListenerOptions, _getEventTarget, _getShadowRoot } from '@angular/cdk/platform';\nimport { Subject, Subscription, BehaviorSubject, of } from 'rxjs';\nimport { hasModifierKey, A, Z, ZERO, NINE, PAGE_DOWN, PAGE_UP, END, HOME, LEFT_ARROW, RIGHT_ARROW, UP_ARROW, DOWN_ARROW, TAB, ALT, CONTROL, MAC_META, META, SHIFT } from '@angular/cdk/keycodes';\nimport { tap, debounceTime, filter, map, take, skip, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport * as i1$1 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport { coerceElement } from '@angular/cdk/coercion';\nimport { BreakpointObserver } from '@angular/cdk/layout';\n\n/** IDs are delimited by an empty space, as per the spec. */\nconst ID_DELIMITER = ' ';\n/**\n * Adds the given ID to the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction addAriaReferencedId(el, attr, id) {\n  const ids = getAriaReferenceIds(el, attr);\n  id = id.trim();\n  if (ids.some(existingId => existingId.trim() === id)) {\n    return;\n  }\n  ids.push(id);\n  el.setAttribute(attr, ids.join(ID_DELIMITER));\n}\n/**\n * Removes the given ID from the specified ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction removeAriaReferencedId(el, attr, id) {\n  const ids = getAriaReferenceIds(el, attr);\n  id = id.trim();\n  const filteredIds = ids.filter(val => val !== id);\n  if (filteredIds.length) {\n    el.setAttribute(attr, filteredIds.join(ID_DELIMITER));\n  } else {\n    el.removeAttribute(attr);\n  }\n}\n/**\n * Gets the list of IDs referenced by the given ARIA attribute on an element.\n * Used for attributes such as aria-labelledby, aria-owns, etc.\n */\nfunction getAriaReferenceIds(el, attr) {\n  // Get string array of all individual ids (whitespace delimited) in the attribute value\n  const attrValue = el.getAttribute(attr);\n  return attrValue?.match(/\\S+/g) ?? [];\n}\n\n/**\n * ID used for the body container where all messages are appended.\n * @deprecated No longer being used. To be removed.\n * @breaking-change 14.0.0\n */\nconst MESSAGES_CONTAINER_ID = 'cdk-describedby-message-container';\n/**\n * ID prefix used for each created message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_ID_PREFIX = 'cdk-describedby-message';\n/**\n * Attribute given to each host element that is described by a message element.\n * @deprecated To be turned into a private variable.\n * @breaking-change 14.0.0\n */\nconst CDK_DESCRIBEDBY_HOST_ATTRIBUTE = 'cdk-describedby-host';\n/** Global incremental identifier for each registered message element. */\nlet nextId = 0;\n/**\n * Utility that creates visually hidden elements with a message content. Useful for elements that\n * want to use aria-describedby to further describe themselves without adding additional visual\n * content.\n */\nlet AriaDescriber = /*#__PURE__*/(() => {\n  class AriaDescriber {\n    constructor(_document,\n    /**\n     * @deprecated To be turned into a required parameter.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n      this._platform = _platform;\n      /** Map of all registered message elements that have been placed into the document. */\n      this._messageRegistry = new Map();\n      /** Container for all registered messages. */\n      this._messagesContainer = null;\n      /** Unique ID for the service. */\n      this._id = `${nextId++}`;\n      this._document = _document;\n      this._id = inject(APP_ID) + '-' + nextId++;\n    }\n    describe(hostElement, message, role) {\n      if (!this._canBeDescribed(hostElement, message)) {\n        return;\n      }\n      const key = getKey(message, role);\n      if (typeof message !== 'string') {\n        // We need to ensure that the element has an ID.\n        setMessageId(message, this._id);\n        this._messageRegistry.set(key, {\n          messageElement: message,\n          referenceCount: 0\n        });\n      } else if (!this._messageRegistry.has(key)) {\n        this._createMessageElement(message, role);\n      }\n      if (!this._isElementDescribedByMessage(hostElement, key)) {\n        this._addMessageReference(hostElement, key);\n      }\n    }\n    removeDescription(hostElement, message, role) {\n      if (!message || !this._isElementNode(hostElement)) {\n        return;\n      }\n      const key = getKey(message, role);\n      if (this._isElementDescribedByMessage(hostElement, key)) {\n        this._removeMessageReference(hostElement, key);\n      }\n      // If the message is a string, it means that it's one that we created for the\n      // consumer so we can remove it safely, otherwise we should leave it in place.\n      if (typeof message === 'string') {\n        const registeredMessage = this._messageRegistry.get(key);\n        if (registeredMessage && registeredMessage.referenceCount === 0) {\n          this._deleteMessageElement(key);\n        }\n      }\n      if (this._messagesContainer?.childNodes.length === 0) {\n        this._messagesContainer.remove();\n        this._messagesContainer = null;\n      }\n    }\n    /** Unregisters all created message elements and removes the message container. */\n    ngOnDestroy() {\n      const describedElements = this._document.querySelectorAll(`[${CDK_DESCRIBEDBY_HOST_ATTRIBUTE}=\"${this._id}\"]`);\n      for (let i = 0; i < describedElements.length; i++) {\n        this._removeCdkDescribedByReferenceIds(describedElements[i]);\n        describedElements[i].removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n      }\n      this._messagesContainer?.remove();\n      this._messagesContainer = null;\n      this._messageRegistry.clear();\n    }\n    /**\n     * Creates a new element in the visually hidden message container element with the message\n     * as its content and adds it to the message registry.\n     */\n    _createMessageElement(message, role) {\n      const messageElement = this._document.createElement('div');\n      setMessageId(messageElement, this._id);\n      messageElement.textContent = message;\n      if (role) {\n        messageElement.setAttribute('role', role);\n      }\n      this._createMessagesContainer();\n      this._messagesContainer.appendChild(messageElement);\n      this._messageRegistry.set(getKey(message, role), {\n        messageElement,\n        referenceCount: 0\n      });\n    }\n    /** Deletes the message element from the global messages container. */\n    _deleteMessageElement(key) {\n      this._messageRegistry.get(key)?.messageElement?.remove();\n      this._messageRegistry.delete(key);\n    }\n    /** Creates the global container for all aria-describedby messages. */\n    _createMessagesContainer() {\n      if (this._messagesContainer) {\n        return;\n      }\n      const containerClassName = 'cdk-describedby-message-container';\n      const serverContainers = this._document.querySelectorAll(`.${containerClassName}[platform=\"server\"]`);\n      for (let i = 0; i < serverContainers.length; i++) {\n        // When going from the server to the client, we may end up in a situation where there's\n        // already a container on the page, but we don't have a reference to it. Clear the\n        // old container so we don't get duplicates. Doing this, instead of emptying the previous\n        // container, should be slightly faster.\n        serverContainers[i].remove();\n      }\n      const messagesContainer = this._document.createElement('div');\n      // We add `visibility: hidden` in order to prevent text in this container from\n      // being searchable by the browser's Ctrl + F functionality.\n      // Screen-readers will still read the description for elements with aria-describedby even\n      // when the description element is not visible.\n      messagesContainer.style.visibility = 'hidden';\n      // Even though we use `visibility: hidden`, we still apply `cdk-visually-hidden` so that\n      // the description element doesn't impact page layout.\n      messagesContainer.classList.add(containerClassName);\n      messagesContainer.classList.add('cdk-visually-hidden');\n      // @breaking-change 14.0.0 Remove null check for `_platform`.\n      if (this._platform && !this._platform.isBrowser) {\n        messagesContainer.setAttribute('platform', 'server');\n      }\n      this._document.body.appendChild(messagesContainer);\n      this._messagesContainer = messagesContainer;\n    }\n    /** Removes all cdk-describedby messages that are hosted through the element. */\n    _removeCdkDescribedByReferenceIds(element) {\n      // Remove all aria-describedby reference IDs that are prefixed by CDK_DESCRIBEDBY_ID_PREFIX\n      const originalReferenceIds = getAriaReferenceIds(element, 'aria-describedby').filter(id => id.indexOf(CDK_DESCRIBEDBY_ID_PREFIX) != 0);\n      element.setAttribute('aria-describedby', originalReferenceIds.join(' '));\n    }\n    /**\n     * Adds a message reference to the element using aria-describedby and increments the registered\n     * message's reference count.\n     */\n    _addMessageReference(element, key) {\n      const registeredMessage = this._messageRegistry.get(key);\n      // Add the aria-describedby reference and set the\n      // describedby_host attribute to mark the element.\n      addAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n      element.setAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE, this._id);\n      registeredMessage.referenceCount++;\n    }\n    /**\n     * Removes a message reference from the element using aria-describedby\n     * and decrements the registered message's reference count.\n     */\n    _removeMessageReference(element, key) {\n      const registeredMessage = this._messageRegistry.get(key);\n      registeredMessage.referenceCount--;\n      removeAriaReferencedId(element, 'aria-describedby', registeredMessage.messageElement.id);\n      element.removeAttribute(CDK_DESCRIBEDBY_HOST_ATTRIBUTE);\n    }\n    /** Returns true if the element has been described by the provided message ID. */\n    _isElementDescribedByMessage(element, key) {\n      const referenceIds = getAriaReferenceIds(element, 'aria-describedby');\n      const registeredMessage = this._messageRegistry.get(key);\n      const messageId = registeredMessage && registeredMessage.messageElement.id;\n      return !!messageId && referenceIds.indexOf(messageId) != -1;\n    }\n    /** Determines whether a message can be described on a particular element. */\n    _canBeDescribed(element, message) {\n      if (!this._isElementNode(element)) {\n        return false;\n      }\n      if (message && typeof message === 'object') {\n        // We'd have to make some assumptions about the description element's text, if the consumer\n        // passed in an element. Assume that if an element is passed in, the consumer has verified\n        // that it can be used as a description.\n        return true;\n      }\n      const trimmedMessage = message == null ? '' : `${message}`.trim();\n      const ariaLabel = element.getAttribute('aria-label');\n      // We shouldn't set descriptions if they're exactly the same as the `aria-label` of the\n      // element, because screen readers will end up reading out the same text twice in a row.\n      return trimmedMessage ? !ariaLabel || ariaLabel.trim() !== trimmedMessage : false;\n    }\n    /** Checks whether a node is an Element node. */\n    _isElementNode(element) {\n      return element.nodeType === this._document.ELEMENT_NODE;\n    }\n    static {\n      this.ɵfac = function AriaDescriber_Factory(t) {\n        return new (t || AriaDescriber)(i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(i1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AriaDescriber,\n        factory: AriaDescriber.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return AriaDescriber;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Gets a key that can be used to look messages up in the registry. */\nfunction getKey(message, role) {\n  return typeof message === 'string' ? `${role || ''}/${message}` : message;\n}\n/** Assigns a unique ID to an element, if it doesn't have one already. */\nfunction setMessageId(element, serviceId) {\n  if (!element.id) {\n    element.id = `${CDK_DESCRIBEDBY_ID_PREFIX}-${serviceId}-${nextId++}`;\n  }\n}\n\n/**\n * This class manages keyboard events for selectable lists. If you pass it a query list\n * of items, it will set the active item correctly when arrow events occur.\n */\nclass ListKeyManager {\n  constructor(_items) {\n    this._items = _items;\n    this._activeItemIndex = -1;\n    this._activeItem = null;\n    this._wrap = false;\n    this._letterKeyStream = new Subject();\n    this._typeaheadSubscription = Subscription.EMPTY;\n    this._vertical = true;\n    this._allowedModifierKeys = [];\n    this._homeAndEnd = false;\n    this._pageUpAndDown = {\n      enabled: false,\n      delta: 10\n    };\n    /**\n     * Predicate function that can be used to check whether an item should be skipped\n     * by the key manager. By default, disabled items are skipped.\n     */\n    this._skipPredicateFn = item => item.disabled;\n    // Buffer for the letters that the user has pressed when the typeahead option is turned on.\n    this._pressedLetters = [];\n    /**\n     * Stream that emits any time the TAB key is pressed, so components can react\n     * when focus is shifted off of the list.\n     */\n    this.tabOut = new Subject();\n    /** Stream that emits whenever the active item of the list manager changes. */\n    this.change = new Subject();\n    // We allow for the items to be an array because, in some cases, the consumer may\n    // not have access to a QueryList of the items they want to manage (e.g. when the\n    // items aren't being collected via `ViewChildren` or `ContentChildren`).\n    if (_items instanceof QueryList) {\n      this._itemChangesSubscription = _items.changes.subscribe(newItems => {\n        if (this._activeItem) {\n          const itemArray = newItems.toArray();\n          const newIndex = itemArray.indexOf(this._activeItem);\n          if (newIndex > -1 && newIndex !== this._activeItemIndex) {\n            this._activeItemIndex = newIndex;\n          }\n        }\n      });\n    }\n  }\n  /**\n   * Sets the predicate function that determines which items should be skipped by the\n   * list key manager.\n   * @param predicate Function that determines whether the given item should be skipped.\n   */\n  skipPredicate(predicate) {\n    this._skipPredicateFn = predicate;\n    return this;\n  }\n  /**\n   * Configures wrapping mode, which determines whether the active item will wrap to\n   * the other end of list when there are no more items in the given direction.\n   * @param shouldWrap Whether the list should wrap when reaching the end.\n   */\n  withWrap(shouldWrap = true) {\n    this._wrap = shouldWrap;\n    return this;\n  }\n  /**\n   * Configures whether the key manager should be able to move the selection vertically.\n   * @param enabled Whether vertical selection should be enabled.\n   */\n  withVerticalOrientation(enabled = true) {\n    this._vertical = enabled;\n    return this;\n  }\n  /**\n   * Configures the key manager to move the selection horizontally.\n   * Passing in `null` will disable horizontal movement.\n   * @param direction Direction in which the selection can be moved.\n   */\n  withHorizontalOrientation(direction) {\n    this._horizontal = direction;\n    return this;\n  }\n  /**\n   * Modifier keys which are allowed to be held down and whose default actions will be prevented\n   * as the user is pressing the arrow keys. Defaults to not allowing any modifier keys.\n   */\n  withAllowedModifierKeys(keys) {\n    this._allowedModifierKeys = keys;\n    return this;\n  }\n  /**\n   * Turns on typeahead mode which allows users to set the active item by typing.\n   * @param debounceInterval Time to wait after the last keystroke before setting the active item.\n   */\n  withTypeAhead(debounceInterval = 200) {\n    if ((typeof ngDevMode === 'undefined' || ngDevMode) && this._items.length && this._items.some(item => typeof item.getLabel !== 'function')) {\n      throw Error('ListKeyManager items in typeahead mode must implement the `getLabel` method.');\n    }\n    this._typeaheadSubscription.unsubscribe();\n    // Debounce the presses of non-navigational keys, collect the ones that correspond to letters\n    // and convert those letters back into a string. Afterwards find the first item that starts\n    // with that string and select it.\n    this._typeaheadSubscription = this._letterKeyStream.pipe(tap(letter => this._pressedLetters.push(letter)), debounceTime(debounceInterval), filter(() => this._pressedLetters.length > 0), map(() => this._pressedLetters.join(''))).subscribe(inputString => {\n      const items = this._getItemsArray();\n      // Start at 1 because we want to start searching at the item immediately\n      // following the current active item.\n      for (let i = 1; i < items.length + 1; i++) {\n        const index = (this._activeItemIndex + i) % items.length;\n        const item = items[index];\n        if (!this._skipPredicateFn(item) && item.getLabel().toUpperCase().trim().indexOf(inputString) === 0) {\n          this.setActiveItem(index);\n          break;\n        }\n      }\n      this._pressedLetters = [];\n    });\n    return this;\n  }\n  /** Cancels the current typeahead sequence. */\n  cancelTypeahead() {\n    this._pressedLetters = [];\n    return this;\n  }\n  /**\n   * Configures the key manager to activate the first and last items\n   * respectively when the Home or End key is pressed.\n   * @param enabled Whether pressing the Home or End key activates the first/last item.\n   */\n  withHomeAndEnd(enabled = true) {\n    this._homeAndEnd = enabled;\n    return this;\n  }\n  /**\n   * Configures the key manager to activate every 10th, configured or first/last element in up/down direction\n   * respectively when the Page-Up or Page-Down key is pressed.\n   * @param enabled Whether pressing the Page-Up or Page-Down key activates the first/last item.\n   * @param delta Whether pressing the Home or End key activates the first/last item.\n   */\n  withPageUpDown(enabled = true, delta = 10) {\n    this._pageUpAndDown = {\n      enabled,\n      delta\n    };\n    return this;\n  }\n  setActiveItem(item) {\n    const previousActiveItem = this._activeItem;\n    this.updateActiveItem(item);\n    if (this._activeItem !== previousActiveItem) {\n      this.change.next(this._activeItemIndex);\n    }\n  }\n  /**\n   * Sets the active item depending on the key event passed in.\n   * @param event Keyboard event to be used for determining which element should be active.\n   */\n  onKeydown(event) {\n    const keyCode = event.keyCode;\n    const modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];\n    const isModifierAllowed = modifiers.every(modifier => {\n      return !event[modifier] || this._allowedModifierKeys.indexOf(modifier) > -1;\n    });\n    switch (keyCode) {\n      case TAB:\n        this.tabOut.next();\n        return;\n      case DOWN_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n      case UP_ARROW:\n        if (this._vertical && isModifierAllowed) {\n          this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n      case RIGHT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setPreviousItemActive() : this.setNextItemActive();\n          break;\n        } else {\n          return;\n        }\n      case LEFT_ARROW:\n        if (this._horizontal && isModifierAllowed) {\n          this._horizontal === 'rtl' ? this.setNextItemActive() : this.setPreviousItemActive();\n          break;\n        } else {\n          return;\n        }\n      case HOME:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setFirstItemActive();\n          break;\n        } else {\n          return;\n        }\n      case END:\n        if (this._homeAndEnd && isModifierAllowed) {\n          this.setLastItemActive();\n          break;\n        } else {\n          return;\n        }\n      case PAGE_UP:\n        if (this._pageUpAndDown.enabled && isModifierAllowed) {\n          const targetIndex = this._activeItemIndex - this._pageUpAndDown.delta;\n          this._setActiveItemByIndex(targetIndex > 0 ? targetIndex : 0, 1);\n          break;\n        } else {\n          return;\n        }\n      case PAGE_DOWN:\n        if (this._pageUpAndDown.enabled && isModifierAllowed) {\n          const targetIndex = this._activeItemIndex + this._pageUpAndDown.delta;\n          const itemsLength = this._getItemsArray().length;\n          this._setActiveItemByIndex(targetIndex < itemsLength ? targetIndex : itemsLength - 1, -1);\n          break;\n        } else {\n          return;\n        }\n      default:\n        if (isModifierAllowed || hasModifierKey(event, 'shiftKey')) {\n          // Attempt to use the `event.key` which also maps it to the user's keyboard language,\n          // otherwise fall back to resolving alphanumeric characters via the keyCode.\n          if (event.key && event.key.length === 1) {\n            this._letterKeyStream.next(event.key.toLocaleUpperCase());\n          } else if (keyCode >= A && keyCode <= Z || keyCode >= ZERO && keyCode <= NINE) {\n            this._letterKeyStream.next(String.fromCharCode(keyCode));\n          }\n        }\n        // Note that we return here, in order to avoid preventing\n        // the default action of non-navigational keys.\n        return;\n    }\n    this._pressedLetters = [];\n    event.preventDefault();\n  }\n  /** Index of the currently active item. */\n  get activeItemIndex() {\n    return this._activeItemIndex;\n  }\n  /** The active item. */\n  get activeItem() {\n    return this._activeItem;\n  }\n  /** Gets whether the user is currently typing into the manager using the typeahead feature. */\n  isTyping() {\n    return this._pressedLetters.length > 0;\n  }\n  /** Sets the active item to the first enabled item in the list. */\n  setFirstItemActive() {\n    this._setActiveItemByIndex(0, 1);\n  }\n  /** Sets the active item to the last enabled item in the list. */\n  setLastItemActive() {\n    this._setActiveItemByIndex(this._items.length - 1, -1);\n  }\n  /** Sets the active item to the next enabled item in the list. */\n  setNextItemActive() {\n    this._activeItemIndex < 0 ? this.setFirstItemActive() : this._setActiveItemByDelta(1);\n  }\n  /** Sets the active item to a previous enabled item in the list. */\n  setPreviousItemActive() {\n    this._activeItemIndex < 0 && this._wrap ? this.setLastItemActive() : this._setActiveItemByDelta(-1);\n  }\n  updateActiveItem(item) {\n    const itemArray = this._getItemsArray();\n    const index = typeof item === 'number' ? item : itemArray.indexOf(item);\n    const activeItem = itemArray[index];\n    // Explicitly check for `null` and `undefined` because other falsy values are valid.\n    this._activeItem = activeItem == null ? null : activeItem;\n    this._activeItemIndex = index;\n  }\n  /** Cleans up the key manager. */\n  destroy() {\n    this._typeaheadSubscription.unsubscribe();\n    this._itemChangesSubscription?.unsubscribe();\n    this._letterKeyStream.complete();\n    this.tabOut.complete();\n    this.change.complete();\n    this._pressedLetters = [];\n  }\n  /**\n   * This method sets the active item, given a list of items and the delta between the\n   * currently active item and the new active item. It will calculate differently\n   * depending on whether wrap mode is turned on.\n   */\n  _setActiveItemByDelta(delta) {\n    this._wrap ? this._setActiveInWrapMode(delta) : this._setActiveInDefaultMode(delta);\n  }\n  /**\n   * Sets the active item properly given \"wrap\" mode. In other words, it will continue to move\n   * down the list until it finds an item that is not disabled, and it will wrap if it\n   * encounters either end of the list.\n   */\n  _setActiveInWrapMode(delta) {\n    const items = this._getItemsArray();\n    for (let i = 1; i <= items.length; i++) {\n      const index = (this._activeItemIndex + delta * i + items.length) % items.length;\n      const item = items[index];\n      if (!this._skipPredicateFn(item)) {\n        this.setActiveItem(index);\n        return;\n      }\n    }\n  }\n  /**\n   * Sets the active item properly given the default mode. In other words, it will\n   * continue to move down the list until it finds an item that is not disabled. If\n   * it encounters either end of the list, it will stop and not wrap.\n   */\n  _setActiveInDefaultMode(delta) {\n    this._setActiveItemByIndex(this._activeItemIndex + delta, delta);\n  }\n  /**\n   * Sets the active item to the first enabled item starting at the index specified. If the\n   * item is disabled, it will move in the fallbackDelta direction until it either\n   * finds an enabled item or encounters the end of the list.\n   */\n  _setActiveItemByIndex(index, fallbackDelta) {\n    const items = this._getItemsArray();\n    if (!items[index]) {\n      return;\n    }\n    while (this._skipPredicateFn(items[index])) {\n      index += fallbackDelta;\n      if (!items[index]) {\n        return;\n      }\n    }\n    this.setActiveItem(index);\n  }\n  /** Returns the items as an array. */\n  _getItemsArray() {\n    return this._items instanceof QueryList ? this._items.toArray() : this._items;\n  }\n}\nclass ActiveDescendantKeyManager extends ListKeyManager {\n  setActiveItem(index) {\n    if (this.activeItem) {\n      this.activeItem.setInactiveStyles();\n    }\n    super.setActiveItem(index);\n    if (this.activeItem) {\n      this.activeItem.setActiveStyles();\n    }\n  }\n}\nclass FocusKeyManager extends ListKeyManager {\n  constructor() {\n    super(...arguments);\n    this._origin = 'program';\n  }\n  /**\n   * Sets the focus origin that will be passed in to the items for any subsequent `focus` calls.\n   * @param origin Focus origin to be used when focusing items.\n   */\n  setFocusOrigin(origin) {\n    this._origin = origin;\n    return this;\n  }\n  setActiveItem(item) {\n    super.setActiveItem(item);\n    if (this.activeItem) {\n      this.activeItem.focus(this._origin);\n    }\n  }\n}\n\n/**\n * Configuration for the isFocusable method.\n */\nclass IsFocusableConfig {\n  constructor() {\n    /**\n     * Whether to count an element as focusable even if it is not currently visible.\n     */\n    this.ignoreVisibility = false;\n  }\n}\n// The InteractivityChecker leans heavily on the ally.js accessibility utilities.\n// Methods like `isTabbable` are only covering specific edge-cases for the browsers which are\n// supported.\n/**\n * Utility for checking the interactivity of an element, such as whether it is focusable or\n * tabbable.\n */\nlet InteractivityChecker = /*#__PURE__*/(() => {\n  class InteractivityChecker {\n    constructor(_platform) {\n      this._platform = _platform;\n    }\n    /**\n     * Gets whether an element is disabled.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is disabled.\n     */\n    isDisabled(element) {\n      // This does not capture some cases, such as a non-form control with a disabled attribute or\n      // a form control inside of a disabled form, but should capture the most common cases.\n      return element.hasAttribute('disabled');\n    }\n    /**\n     * Gets whether an element is visible for the purposes of interactivity.\n     *\n     * This will capture states like `display: none` and `visibility: hidden`, but not things like\n     * being clipped by an `overflow: hidden` parent or being outside the viewport.\n     *\n     * @returns Whether the element is visible.\n     */\n    isVisible(element) {\n      return hasGeometry(element) && getComputedStyle(element).visibility === 'visible';\n    }\n    /**\n     * Gets whether an element can be reached via Tab key.\n     * Assumes that the element has already been checked with isFocusable.\n     *\n     * @param element Element to be checked.\n     * @returns Whether the element is tabbable.\n     */\n    isTabbable(element) {\n      // Nothing is tabbable on the server 😎\n      if (!this._platform.isBrowser) {\n        return false;\n      }\n      const frameElement = getFrameElement(getWindow(element));\n      if (frameElement) {\n        // Frame elements inherit their tabindex onto all child elements.\n        if (getTabIndexValue(frameElement) === -1) {\n          return false;\n        }\n        // Browsers disable tabbing to an element inside of an invisible frame.\n        if (!this.isVisible(frameElement)) {\n          return false;\n        }\n      }\n      let nodeName = element.nodeName.toLowerCase();\n      let tabIndexValue = getTabIndexValue(element);\n      if (element.hasAttribute('contenteditable')) {\n        return tabIndexValue !== -1;\n      }\n      if (nodeName === 'iframe' || nodeName === 'object') {\n        // The frame or object's content may be tabbable depending on the content, but it's\n        // not possibly to reliably detect the content of the frames. We always consider such\n        // elements as non-tabbable.\n        return false;\n      }\n      // In iOS, the browser only considers some specific elements as tabbable.\n      if (this._platform.WEBKIT && this._platform.IOS && !isPotentiallyTabbableIOS(element)) {\n        return false;\n      }\n      if (nodeName === 'audio') {\n        // Audio elements without controls enabled are never tabbable, regardless\n        // of the tabindex attribute explicitly being set.\n        if (!element.hasAttribute('controls')) {\n          return false;\n        }\n        // Audio elements with controls are by default tabbable unless the\n        // tabindex attribute is set to `-1` explicitly.\n        return tabIndexValue !== -1;\n      }\n      if (nodeName === 'video') {\n        // For all video elements, if the tabindex attribute is set to `-1`, the video\n        // is not tabbable. Note: We cannot rely on the default `HTMLElement.tabIndex`\n        // property as that one is set to `-1` in Chrome, Edge and Safari v13.1. The\n        // tabindex attribute is the source of truth here.\n        if (tabIndexValue === -1) {\n          return false;\n        }\n        // If the tabindex is explicitly set, and not `-1` (as per check before), the\n        // video element is always tabbable (regardless of whether it has controls or not).\n        if (tabIndexValue !== null) {\n          return true;\n        }\n        // Otherwise (when no explicit tabindex is set), a video is only tabbable if it\n        // has controls enabled. Firefox is special as videos are always tabbable regardless\n        // of whether there are controls or not.\n        return this._platform.FIREFOX || element.hasAttribute('controls');\n      }\n      return element.tabIndex >= 0;\n    }\n    /**\n     * Gets whether an element can be focused by the user.\n     *\n     * @param element Element to be checked.\n     * @param config The config object with options to customize this method's behavior\n     * @returns Whether the element is focusable.\n     */\n    isFocusable(element, config) {\n      // Perform checks in order of left to most expensive.\n      // Again, naive approach that does not capture many edge cases and browser quirks.\n      return isPotentiallyFocusable(element) && !this.isDisabled(element) && (config?.ignoreVisibility || this.isVisible(element));\n    }\n    static {\n      this.ɵfac = function InteractivityChecker_Factory(t) {\n        return new (t || InteractivityChecker)(i0.ɵɵinject(i1.Platform));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: InteractivityChecker,\n        factory: InteractivityChecker.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return InteractivityChecker;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Returns the frame element from a window object. Since browsers like MS Edge throw errors if\n * the frameElement property is being accessed from a different host address, this property\n * should be accessed carefully.\n */\nfunction getFrameElement(window) {\n  try {\n    return window.frameElement;\n  } catch {\n    return null;\n  }\n}\n/** Checks whether the specified element has any geometry / rectangles. */\nfunction hasGeometry(element) {\n  // Use logic from jQuery to check for an invisible element.\n  // See https://github.com/jquery/jquery/blob/master/src/css/hiddenVisibleSelectors.js#L12\n  return !!(element.offsetWidth || element.offsetHeight || typeof element.getClientRects === 'function' && element.getClientRects().length);\n}\n/** Gets whether an element's  */\nfunction isNativeFormElement(element) {\n  let nodeName = element.nodeName.toLowerCase();\n  return nodeName === 'input' || nodeName === 'select' || nodeName === 'button' || nodeName === 'textarea';\n}\n/** Gets whether an element is an `<input type=\"hidden\">`. */\nfunction isHiddenInput(element) {\n  return isInputElement(element) && element.type == 'hidden';\n}\n/** Gets whether an element is an anchor that has an href attribute. */\nfunction isAnchorWithHref(element) {\n  return isAnchorElement(element) && element.hasAttribute('href');\n}\n/** Gets whether an element is an input element. */\nfunction isInputElement(element) {\n  return element.nodeName.toLowerCase() == 'input';\n}\n/** Gets whether an element is an anchor element. */\nfunction isAnchorElement(element) {\n  return element.nodeName.toLowerCase() == 'a';\n}\n/** Gets whether an element has a valid tabindex. */\nfunction hasValidTabIndex(element) {\n  if (!element.hasAttribute('tabindex') || element.tabIndex === undefined) {\n    return false;\n  }\n  let tabIndex = element.getAttribute('tabindex');\n  return !!(tabIndex && !isNaN(parseInt(tabIndex, 10)));\n}\n/**\n * Returns the parsed tabindex from the element attributes instead of returning the\n * evaluated tabindex from the browsers defaults.\n */\nfunction getTabIndexValue(element) {\n  if (!hasValidTabIndex(element)) {\n    return null;\n  }\n  // See browser issue in Gecko https://bugzilla.mozilla.org/show_bug.cgi?id=1128054\n  const tabIndex = parseInt(element.getAttribute('tabindex') || '', 10);\n  return isNaN(tabIndex) ? -1 : tabIndex;\n}\n/** Checks whether the specified element is potentially tabbable on iOS */\nfunction isPotentiallyTabbableIOS(element) {\n  let nodeName = element.nodeName.toLowerCase();\n  let inputType = nodeName === 'input' && element.type;\n  return inputType === 'text' || inputType === 'password' || nodeName === 'select' || nodeName === 'textarea';\n}\n/**\n * Gets whether an element is potentially focusable without taking current visible/disabled state\n * into account.\n */\nfunction isPotentiallyFocusable(element) {\n  // Inputs are potentially focusable *unless* they're type=\"hidden\".\n  if (isHiddenInput(element)) {\n    return false;\n  }\n  return isNativeFormElement(element) || isAnchorWithHref(element) || element.hasAttribute('contenteditable') || hasValidTabIndex(element);\n}\n/** Gets the parent window of a DOM node with regards of being inside of an iframe. */\nfunction getWindow(node) {\n  // ownerDocument is null if `node` itself *is* a document.\n  return node.ownerDocument && node.ownerDocument.defaultView || window;\n}\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class currently uses a relatively simple approach to focus trapping.\n * It assumes that the tab order is the same as DOM order, which is not necessarily true.\n * Things like `tabIndex > 0`, flex `order`, and shadow roots can cause the two to be misaligned.\n *\n * @deprecated Use `ConfigurableFocusTrap` instead.\n * @breaking-change 11.0.0\n */\nclass FocusTrap {\n  /** Whether the focus trap is active. */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(value, this._startAnchor);\n      this._toggleAnchorTabIndex(value, this._endAnchor);\n    }\n  }\n  constructor(_element, _checker, _ngZone, _document, deferAnchors = false) {\n    this._element = _element;\n    this._checker = _checker;\n    this._ngZone = _ngZone;\n    this._document = _document;\n    this._hasAttached = false;\n    // Event listeners for the anchors. Need to be regular functions so that we can unbind them later.\n    this.startAnchorListener = () => this.focusLastTabbableElement();\n    this.endAnchorListener = () => this.focusFirstTabbableElement();\n    this._enabled = true;\n    if (!deferAnchors) {\n      this.attachAnchors();\n    }\n  }\n  /** Destroys the focus trap by cleaning up the anchors. */\n  destroy() {\n    const startAnchor = this._startAnchor;\n    const endAnchor = this._endAnchor;\n    if (startAnchor) {\n      startAnchor.removeEventListener('focus', this.startAnchorListener);\n      startAnchor.remove();\n    }\n    if (endAnchor) {\n      endAnchor.removeEventListener('focus', this.endAnchorListener);\n      endAnchor.remove();\n    }\n    this._startAnchor = this._endAnchor = null;\n    this._hasAttached = false;\n  }\n  /**\n   * Inserts the anchors into the DOM. This is usually done automatically\n   * in the constructor, but can be deferred for cases like directives with `*ngIf`.\n   * @returns Whether the focus trap managed to attach successfully. This may not be the case\n   * if the target element isn't currently in the DOM.\n   */\n  attachAnchors() {\n    // If we're not on the browser, there can be no focus to trap.\n    if (this._hasAttached) {\n      return true;\n    }\n    this._ngZone.runOutsideAngular(() => {\n      if (!this._startAnchor) {\n        this._startAnchor = this._createAnchor();\n        this._startAnchor.addEventListener('focus', this.startAnchorListener);\n      }\n      if (!this._endAnchor) {\n        this._endAnchor = this._createAnchor();\n        this._endAnchor.addEventListener('focus', this.endAnchorListener);\n      }\n    });\n    if (this._element.parentNode) {\n      this._element.parentNode.insertBefore(this._startAnchor, this._element);\n      this._element.parentNode.insertBefore(this._endAnchor, this._element.nextSibling);\n      this._hasAttached = true;\n    }\n    return this._hasAttached;\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses the first tabbable element.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusInitialElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusInitialElement(options)));\n    });\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the first tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusFirstTabbableElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusFirstTabbableElement(options)));\n    });\n  }\n  /**\n   * Waits for the zone to stabilize, then focuses\n   * the last tabbable element within the focus trap region.\n   * @returns Returns a promise that resolves with a boolean, depending\n   * on whether focus was moved successfully.\n   */\n  focusLastTabbableElementWhenReady(options) {\n    return new Promise(resolve => {\n      this._executeOnStable(() => resolve(this.focusLastTabbableElement(options)));\n    });\n  }\n  /**\n   * Get the specified boundary element of the trapped region.\n   * @param bound The boundary to get (start or end of trapped region).\n   * @returns The boundary element.\n   */\n  _getRegionBoundary(bound) {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const markers = this._element.querySelectorAll(`[cdk-focus-region-${bound}], ` + `[cdkFocusRegion${bound}], ` + `[cdk-focus-${bound}]`);\n    if (typeof ngDevMode === 'undefined' || ngDevMode) {\n      for (let i = 0; i < markers.length; i++) {\n        // @breaking-change 8.0.0\n        if (markers[i].hasAttribute(`cdk-focus-${bound}`)) {\n          console.warn(`Found use of deprecated attribute 'cdk-focus-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated ` + `attribute will be removed in 8.0.0.`, markers[i]);\n        } else if (markers[i].hasAttribute(`cdk-focus-region-${bound}`)) {\n          console.warn(`Found use of deprecated attribute 'cdk-focus-region-${bound}', ` + `use 'cdkFocusRegion${bound}' instead. The deprecated attribute ` + `will be removed in 8.0.0.`, markers[i]);\n        }\n      }\n    }\n    if (bound == 'start') {\n      return markers.length ? markers[0] : this._getFirstTabbableElement(this._element);\n    }\n    return markers.length ? markers[markers.length - 1] : this._getLastTabbableElement(this._element);\n  }\n  /**\n   * Focuses the element that should be focused when the focus trap is initialized.\n   * @returns Whether focus was moved successfully.\n   */\n  focusInitialElement(options) {\n    // Contains the deprecated version of selector, for temporary backwards comparability.\n    const redirectToElement = this._element.querySelector(`[cdk-focus-initial], ` + `[cdkFocusInitial]`);\n    if (redirectToElement) {\n      // @breaking-change 8.0.0\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && redirectToElement.hasAttribute(`cdk-focus-initial`)) {\n        console.warn(`Found use of deprecated attribute 'cdk-focus-initial', ` + `use 'cdkFocusInitial' instead. The deprecated attribute ` + `will be removed in 8.0.0`, redirectToElement);\n      }\n      // Warn the consumer if the element they've pointed to\n      // isn't focusable, when not in production mode.\n      if ((typeof ngDevMode === 'undefined' || ngDevMode) && !this._checker.isFocusable(redirectToElement)) {\n        console.warn(`Element matching '[cdkFocusInitial]' is not focusable.`, redirectToElement);\n      }\n      if (!this._checker.isFocusable(redirectToElement)) {\n        const focusableChild = this._getFirstTabbableElement(redirectToElement);\n        focusableChild?.focus(options);\n        return !!focusableChild;\n      }\n      redirectToElement.focus(options);\n      return true;\n    }\n    return this.focusFirstTabbableElement(options);\n  }\n  /**\n   * Focuses the first tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfully.\n   */\n  focusFirstTabbableElement(options) {\n    const redirectToElement = this._getRegionBoundary('start');\n    if (redirectToElement) {\n      redirectToElement.focus(options);\n    }\n    return !!redirectToElement;\n  }\n  /**\n   * Focuses the last tabbable element within the focus trap region.\n   * @returns Whether focus was moved successfully.\n   */\n  focusLastTabbableElement(options) {\n    const redirectToElement = this._getRegionBoundary('end');\n    if (redirectToElement) {\n      redirectToElement.focus(options);\n    }\n    return !!redirectToElement;\n  }\n  /**\n   * Checks whether the focus trap has successfully been attached.\n   */\n  hasAttached() {\n    return this._hasAttached;\n  }\n  /** Get the first tabbable element from a DOM subtree (inclusive). */\n  _getFirstTabbableElement(root) {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n    const children = root.children;\n    for (let i = 0; i < children.length; i++) {\n      const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getFirstTabbableElement(children[i]) : null;\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n    return null;\n  }\n  /** Get the last tabbable element from a DOM subtree (inclusive). */\n  _getLastTabbableElement(root) {\n    if (this._checker.isFocusable(root) && this._checker.isTabbable(root)) {\n      return root;\n    }\n    // Iterate in reverse DOM order.\n    const children = root.children;\n    for (let i = children.length - 1; i >= 0; i--) {\n      const tabbableChild = children[i].nodeType === this._document.ELEMENT_NODE ? this._getLastTabbableElement(children[i]) : null;\n      if (tabbableChild) {\n        return tabbableChild;\n      }\n    }\n    return null;\n  }\n  /** Creates an anchor element. */\n  _createAnchor() {\n    const anchor = this._document.createElement('div');\n    this._toggleAnchorTabIndex(this._enabled, anchor);\n    anchor.classList.add('cdk-visually-hidden');\n    anchor.classList.add('cdk-focus-trap-anchor');\n    anchor.setAttribute('aria-hidden', 'true');\n    return anchor;\n  }\n  /**\n   * Toggles the `tabindex` of an anchor, based on the enabled state of the focus trap.\n   * @param isEnabled Whether the focus trap is enabled.\n   * @param anchor Anchor on which to toggle the tabindex.\n   */\n  _toggleAnchorTabIndex(isEnabled, anchor) {\n    // Remove the tabindex completely, rather than setting it to -1, because if the\n    // element has a tabindex, the user might still hit it when navigating with the arrow keys.\n    isEnabled ? anchor.setAttribute('tabindex', '0') : anchor.removeAttribute('tabindex');\n  }\n  /**\n   * Toggles the`tabindex` of both anchors to either trap Tab focus or allow it to escape.\n   * @param enabled: Whether the anchors should trap Tab.\n   */\n  toggleAnchors(enabled) {\n    if (this._startAnchor && this._endAnchor) {\n      this._toggleAnchorTabIndex(enabled, this._startAnchor);\n      this._toggleAnchorTabIndex(enabled, this._endAnchor);\n    }\n  }\n  /** Executes a function when the zone is stable. */\n  _executeOnStable(fn) {\n    if (this._ngZone.isStable) {\n      fn();\n    } else {\n      this._ngZone.onStable.pipe(take(1)).subscribe(fn);\n    }\n  }\n}\n/**\n * Factory that allows easy instantiation of focus traps.\n * @deprecated Use `ConfigurableFocusTrapFactory` instead.\n * @breaking-change 11.0.0\n */\nlet FocusTrapFactory = /*#__PURE__*/(() => {\n  class FocusTrapFactory {\n    constructor(_checker, _ngZone, _document) {\n      this._checker = _checker;\n      this._ngZone = _ngZone;\n      this._document = _document;\n    }\n    /**\n     * Creates a focus-trapped region around the given element.\n     * @param element The element around which focus will be trapped.\n     * @param deferCaptureElements Defers the creation of focus-capturing elements to be done\n     *     manually by the user.\n     * @returns The created focus trap instance.\n     */\n    create(element, deferCaptureElements = false) {\n      return new FocusTrap(element, this._checker, this._ngZone, this._document, deferCaptureElements);\n    }\n    static {\n      this.ɵfac = function FocusTrapFactory_Factory(t) {\n        return new (t || FocusTrapFactory)(i0.ɵɵinject(InteractivityChecker), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusTrapFactory,\n        factory: FocusTrapFactory.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusTrapFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Directive for trapping focus within a region. */\nlet CdkTrapFocus = /*#__PURE__*/(() => {\n  class CdkTrapFocus {\n    /** Whether the focus trap is active. */\n    get enabled() {\n      return this.focusTrap?.enabled || false;\n    }\n    set enabled(value) {\n      if (this.focusTrap) {\n        this.focusTrap.enabled = value;\n      }\n    }\n    constructor(_elementRef, _focusTrapFactory,\n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 13.0.0\n     */\n    _document) {\n      this._elementRef = _elementRef;\n      this._focusTrapFactory = _focusTrapFactory;\n      /** Previously focused element to restore focus to upon destroy when using autoCapture. */\n      this._previouslyFocusedElement = null;\n      const platform = inject(Platform);\n      if (platform.isBrowser) {\n        this.focusTrap = this._focusTrapFactory.create(this._elementRef.nativeElement, true);\n      }\n    }\n    ngOnDestroy() {\n      this.focusTrap?.destroy();\n      // If we stored a previously focused element when using autoCapture, return focus to that\n      // element now that the trapped region is being destroyed.\n      if (this._previouslyFocusedElement) {\n        this._previouslyFocusedElement.focus();\n        this._previouslyFocusedElement = null;\n      }\n    }\n    ngAfterContentInit() {\n      this.focusTrap?.attachAnchors();\n      if (this.autoCapture) {\n        this._captureFocus();\n      }\n    }\n    ngDoCheck() {\n      if (this.focusTrap && !this.focusTrap.hasAttached()) {\n        this.focusTrap.attachAnchors();\n      }\n    }\n    ngOnChanges(changes) {\n      const autoCaptureChange = changes['autoCapture'];\n      if (autoCaptureChange && !autoCaptureChange.firstChange && this.autoCapture && this.focusTrap?.hasAttached()) {\n        this._captureFocus();\n      }\n    }\n    _captureFocus() {\n      this._previouslyFocusedElement = _getFocusedElementPierceShadowDom();\n      this.focusTrap?.focusInitialElementWhenReady();\n    }\n    static {\n      this.ɵfac = function CdkTrapFocus_Factory(t) {\n        return new (t || CdkTrapFocus)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusTrapFactory), i0.ɵɵdirectiveInject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkTrapFocus,\n        selectors: [[\"\", \"cdkTrapFocus\", \"\"]],\n        inputs: {\n          enabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkTrapFocus\", \"enabled\", booleanAttribute],\n          autoCapture: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"cdkTrapFocusAutoCapture\", \"autoCapture\", booleanAttribute]\n        },\n        exportAs: [\"cdkTrapFocus\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature]\n      });\n    }\n  }\n  return CdkTrapFocus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Class that allows for trapping focus within a DOM element.\n *\n * This class uses a strategy pattern that determines how it traps focus.\n * See FocusTrapInertStrategy.\n */\nclass ConfigurableFocusTrap extends FocusTrap {\n  /** Whether the FocusTrap is enabled. */\n  get enabled() {\n    return this._enabled;\n  }\n  set enabled(value) {\n    this._enabled = value;\n    if (this._enabled) {\n      this._focusTrapManager.register(this);\n    } else {\n      this._focusTrapManager.deregister(this);\n    }\n  }\n  constructor(_element, _checker, _ngZone, _document, _focusTrapManager, _inertStrategy, config) {\n    super(_element, _checker, _ngZone, _document, config.defer);\n    this._focusTrapManager = _focusTrapManager;\n    this._inertStrategy = _inertStrategy;\n    this._focusTrapManager.register(this);\n  }\n  /** Notifies the FocusTrapManager that this FocusTrap will be destroyed. */\n  destroy() {\n    this._focusTrapManager.deregister(this);\n    super.destroy();\n  }\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _enable() {\n    this._inertStrategy.preventFocus(this);\n    this.toggleAnchors(true);\n  }\n  /** @docs-private Implemented as part of ManagedFocusTrap. */\n  _disable() {\n    this._inertStrategy.allowFocus(this);\n    this.toggleAnchors(false);\n  }\n}\n\n/** The injection token used to specify the inert strategy. */\nconst FOCUS_TRAP_INERT_STRATEGY = /*#__PURE__*/new InjectionToken('FOCUS_TRAP_INERT_STRATEGY');\n\n/**\n * Lightweight FocusTrapInertStrategy that adds a document focus event\n * listener to redirect focus back inside the FocusTrap.\n */\nclass EventListenerFocusTrapInertStrategy {\n  constructor() {\n    /** Focus event handler. */\n    this._listener = null;\n  }\n  /** Adds a document event listener that keeps focus inside the FocusTrap. */\n  preventFocus(focusTrap) {\n    // Ensure there's only one listener per document\n    if (this._listener) {\n      focusTrap._document.removeEventListener('focus', this._listener, true);\n    }\n    this._listener = e => this._trapFocus(focusTrap, e);\n    focusTrap._ngZone.runOutsideAngular(() => {\n      focusTrap._document.addEventListener('focus', this._listener, true);\n    });\n  }\n  /** Removes the event listener added in preventFocus. */\n  allowFocus(focusTrap) {\n    if (!this._listener) {\n      return;\n    }\n    focusTrap._document.removeEventListener('focus', this._listener, true);\n    this._listener = null;\n  }\n  /**\n   * Refocuses the first element in the FocusTrap if the focus event target was outside\n   * the FocusTrap.\n   *\n   * This is an event listener callback. The event listener is added in runOutsideAngular,\n   * so all this code runs outside Angular as well.\n   */\n  _trapFocus(focusTrap, event) {\n    const target = event.target;\n    const focusTrapRoot = focusTrap._element;\n    // Don't refocus if target was in an overlay, because the overlay might be associated\n    // with an element inside the FocusTrap, ex. mat-select.\n    if (target && !focusTrapRoot.contains(target) && !target.closest?.('div.cdk-overlay-pane')) {\n      // Some legacy FocusTrap usages have logic that focuses some element on the page\n      // just before FocusTrap is destroyed. For backwards compatibility, wait\n      // to be sure FocusTrap is still enabled before refocusing.\n      setTimeout(() => {\n        // Check whether focus wasn't put back into the focus trap while the timeout was pending.\n        if (focusTrap.enabled && !focusTrapRoot.contains(focusTrap._document.activeElement)) {\n          focusTrap.focusFirstTabbableElement();\n        }\n      });\n    }\n  }\n}\n\n/** Injectable that ensures only the most recently enabled FocusTrap is active. */\nlet FocusTrapManager = /*#__PURE__*/(() => {\n  class FocusTrapManager {\n    constructor() {\n      // A stack of the FocusTraps on the page. Only the FocusTrap at the\n      // top of the stack is active.\n      this._focusTrapStack = [];\n    }\n    /**\n     * Disables the FocusTrap at the top of the stack, and then pushes\n     * the new FocusTrap onto the stack.\n     */\n    register(focusTrap) {\n      // Dedupe focusTraps that register multiple times.\n      this._focusTrapStack = this._focusTrapStack.filter(ft => ft !== focusTrap);\n      let stack = this._focusTrapStack;\n      if (stack.length) {\n        stack[stack.length - 1]._disable();\n      }\n      stack.push(focusTrap);\n      focusTrap._enable();\n    }\n    /**\n     * Removes the FocusTrap from the stack, and activates the\n     * FocusTrap that is the new top of the stack.\n     */\n    deregister(focusTrap) {\n      focusTrap._disable();\n      const stack = this._focusTrapStack;\n      const i = stack.indexOf(focusTrap);\n      if (i !== -1) {\n        stack.splice(i, 1);\n        if (stack.length) {\n          stack[stack.length - 1]._enable();\n        }\n      }\n    }\n    static {\n      this.ɵfac = function FocusTrapManager_Factory(t) {\n        return new (t || FocusTrapManager)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusTrapManager,\n        factory: FocusTrapManager.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusTrapManager;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Factory that allows easy instantiation of configurable focus traps. */\nlet ConfigurableFocusTrapFactory = /*#__PURE__*/(() => {\n  class ConfigurableFocusTrapFactory {\n    constructor(_checker, _ngZone, _focusTrapManager, _document, _inertStrategy) {\n      this._checker = _checker;\n      this._ngZone = _ngZone;\n      this._focusTrapManager = _focusTrapManager;\n      this._document = _document;\n      // TODO split up the strategies into different modules, similar to DateAdapter.\n      this._inertStrategy = _inertStrategy || new EventListenerFocusTrapInertStrategy();\n    }\n    create(element, config = {\n      defer: false\n    }) {\n      let configObject;\n      if (typeof config === 'boolean') {\n        configObject = {\n          defer: config\n        };\n      } else {\n        configObject = config;\n      }\n      return new ConfigurableFocusTrap(element, this._checker, this._ngZone, this._document, this._focusTrapManager, this._inertStrategy, configObject);\n    }\n    static {\n      this.ɵfac = function ConfigurableFocusTrapFactory_Factory(t) {\n        return new (t || ConfigurableFocusTrapFactory)(i0.ɵɵinject(InteractivityChecker), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(FocusTrapManager), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(FOCUS_TRAP_INERT_STRATEGY, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ConfigurableFocusTrapFactory,\n        factory: ConfigurableFocusTrapFactory.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ConfigurableFocusTrapFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Gets whether an event could be a faked `mousedown` event dispatched by a screen reader. */\nfunction isFakeMousedownFromScreenReader(event) {\n  // Some screen readers will dispatch a fake `mousedown` event when pressing enter or space on\n  // a clickable element. We can distinguish these events when `event.buttons` is zero, or\n  // `event.detail` is zero depending on the browser:\n  // - `event.buttons` works on Firefox, but fails on Chrome.\n  // - `detail` works on Chrome, but fails on Firefox.\n  return event.buttons === 0 || event.detail === 0;\n}\n/** Gets whether an event could be a faked `touchstart` event dispatched by a screen reader. */\nfunction isFakeTouchstartFromScreenReader(event) {\n  const touch = event.touches && event.touches[0] || event.changedTouches && event.changedTouches[0];\n  // A fake `touchstart` can be distinguished from a real one by looking at the `identifier`\n  // which is typically >= 0 on a real device versus -1 from a screen reader. Just to be safe,\n  // we can also look at `radiusX` and `radiusY`. This behavior was observed against a Windows 10\n  // device with a touch screen running NVDA v2020.4 and Firefox 85 or Chrome 88.\n  return !!touch && touch.identifier === -1 && (touch.radiusX == null || touch.radiusX === 1) && (touch.radiusY == null || touch.radiusY === 1);\n}\n\n/**\n * Injectable options for the InputModalityDetector. These are shallowly merged with the default\n * options.\n */\nconst INPUT_MODALITY_DETECTOR_OPTIONS = /*#__PURE__*/new InjectionToken('cdk-input-modality-detector-options');\n/**\n * Default options for the InputModalityDetector.\n *\n * Modifier keys are ignored by default (i.e. when pressed won't cause the service to detect\n * keyboard input modality) for two reasons:\n *\n * 1. Modifier keys are commonly used with mouse to perform actions such as 'right click' or 'open\n *    in new tab', and are thus less representative of actual keyboard interaction.\n * 2. VoiceOver triggers some keyboard events when linearly navigating with Control + Option (but\n *    confusingly not with Caps Lock). Thus, to have parity with other screen readers, we ignore\n *    these keys so as to not update the input modality.\n *\n * Note that we do not by default ignore the right Meta key on Safari because it has the same key\n * code as the ContextMenu key on other browsers. When we switch to using event.key, we can\n * distinguish between the two.\n */\nconst INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS = {\n  ignoreKeys: [ALT, CONTROL, MAC_META, META, SHIFT]\n};\n/**\n * The amount of time needed to pass after a touchstart event in order for a subsequent mousedown\n * event to be attributed as mouse and not touch.\n *\n * This is the value used by AngularJS Material. Through trial and error (on iPhone 6S) they found\n * that a value of around 650ms seems appropriate.\n */\nconst TOUCH_BUFFER_MS = 650;\n/**\n * Event listener options that enable capturing and also mark the listener as passive if the browser\n * supports it.\n */\nconst modalityEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/**\n * Service that detects the user's input modality.\n *\n * This service does not update the input modality when a user navigates with a screen reader\n * (e.g. linear navigation with VoiceOver, object navigation / browse mode with NVDA, virtual PC\n * cursor mode with JAWS). This is in part due to technical limitations (i.e. keyboard events do not\n * fire as expected in these modes) but is also arguably the correct behavior. Navigating with a\n * screen reader is akin to visually scanning a page, and should not be interpreted as actual user\n * input interaction.\n *\n * When a user is not navigating but *interacting* with a screen reader, this service attempts to\n * update the input modality to keyboard, but in general this service's behavior is largely\n * undefined.\n */\nlet InputModalityDetector = /*#__PURE__*/(() => {\n  class InputModalityDetector {\n    /** The most recently detected input modality. */\n    get mostRecentModality() {\n      return this._modality.value;\n    }\n    constructor(_platform, ngZone, document, options) {\n      this._platform = _platform;\n      /**\n       * The most recently detected input modality event target. Is null if no input modality has been\n       * detected or if the associated event target is null for some unknown reason.\n       */\n      this._mostRecentTarget = null;\n      /** The underlying BehaviorSubject that emits whenever an input modality is detected. */\n      this._modality = new BehaviorSubject(null);\n      /**\n       * The timestamp of the last touch input modality. Used to determine whether mousedown events\n       * should be attributed to mouse or touch.\n       */\n      this._lastTouchMs = 0;\n      /**\n       * Handles keydown events. Must be an arrow function in order to preserve the context when it gets\n       * bound.\n       */\n      this._onKeydown = event => {\n        // If this is one of the keys we should ignore, then ignore it and don't update the input\n        // modality to keyboard.\n        if (this._options?.ignoreKeys?.some(keyCode => keyCode === event.keyCode)) {\n          return;\n        }\n        this._modality.next('keyboard');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      /**\n       * Handles mousedown events. Must be an arrow function in order to preserve the context when it\n       * gets bound.\n       */\n      this._onMousedown = event => {\n        // Touches trigger both touch and mouse events, so we need to distinguish between mouse events\n        // that were triggered via mouse vs touch. To do so, check if the mouse event occurs closely\n        // after the previous touch event.\n        if (Date.now() - this._lastTouchMs < TOUCH_BUFFER_MS) {\n          return;\n        }\n        // Fake mousedown events are fired by some screen readers when controls are activated by the\n        // screen reader. Attribute them to keyboard input modality.\n        this._modality.next(isFakeMousedownFromScreenReader(event) ? 'keyboard' : 'mouse');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      /**\n       * Handles touchstart events. Must be an arrow function in order to preserve the context when it\n       * gets bound.\n       */\n      this._onTouchstart = event => {\n        // Same scenario as mentioned in _onMousedown, but on touch screen devices, fake touchstart\n        // events are fired. Again, attribute to keyboard input modality.\n        if (isFakeTouchstartFromScreenReader(event)) {\n          this._modality.next('keyboard');\n          return;\n        }\n        // Store the timestamp of this touch event, as it's used to distinguish between mouse events\n        // triggered via mouse vs touch.\n        this._lastTouchMs = Date.now();\n        this._modality.next('touch');\n        this._mostRecentTarget = _getEventTarget(event);\n      };\n      this._options = {\n        ...INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS,\n        ...options\n      };\n      // Skip the first emission as it's null.\n      this.modalityDetected = this._modality.pipe(skip(1));\n      this.modalityChanged = this.modalityDetected.pipe(distinctUntilChanged());\n      // If we're not in a browser, this service should do nothing, as there's no relevant input\n      // modality to detect.\n      if (_platform.isBrowser) {\n        ngZone.runOutsideAngular(() => {\n          document.addEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n          document.addEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n          document.addEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n        });\n      }\n    }\n    ngOnDestroy() {\n      this._modality.complete();\n      if (this._platform.isBrowser) {\n        document.removeEventListener('keydown', this._onKeydown, modalityEventListenerOptions);\n        document.removeEventListener('mousedown', this._onMousedown, modalityEventListenerOptions);\n        document.removeEventListener('touchstart', this._onTouchstart, modalityEventListenerOptions);\n      }\n    }\n    static {\n      this.ɵfac = function InputModalityDetector_Factory(t) {\n        return new (t || InputModalityDetector)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(INPUT_MODALITY_DETECTOR_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: InputModalityDetector,\n        factory: InputModalityDetector.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return InputModalityDetector;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst LIVE_ANNOUNCER_ELEMENT_TOKEN = /*#__PURE__*/new InjectionToken('liveAnnouncerElement', {\n  providedIn: 'root',\n  factory: LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY\n});\n/** @docs-private */\nfunction LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY() {\n  return null;\n}\n/** Injection token that can be used to configure the default options for the LiveAnnouncer. */\nconst LIVE_ANNOUNCER_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('LIVE_ANNOUNCER_DEFAULT_OPTIONS');\nlet uniqueIds = 0;\nlet LiveAnnouncer = /*#__PURE__*/(() => {\n  class LiveAnnouncer {\n    constructor(elementToken, _ngZone, _document, _defaultOptions) {\n      this._ngZone = _ngZone;\n      this._defaultOptions = _defaultOptions;\n      // We inject the live element and document as `any` because the constructor signature cannot\n      // reference browser globals (HTMLElement, Document) on non-browser environments, since having\n      // a class decorator causes TypeScript to preserve the constructor signature types.\n      this._document = _document;\n      this._liveElement = elementToken || this._createLiveElement();\n    }\n    announce(message, ...args) {\n      const defaultOptions = this._defaultOptions;\n      let politeness;\n      let duration;\n      if (args.length === 1 && typeof args[0] === 'number') {\n        duration = args[0];\n      } else {\n        [politeness, duration] = args;\n      }\n      this.clear();\n      clearTimeout(this._previousTimeout);\n      if (!politeness) {\n        politeness = defaultOptions && defaultOptions.politeness ? defaultOptions.politeness : 'polite';\n      }\n      if (duration == null && defaultOptions) {\n        duration = defaultOptions.duration;\n      }\n      // TODO: ensure changing the politeness works on all environments we support.\n      this._liveElement.setAttribute('aria-live', politeness);\n      if (this._liveElement.id) {\n        this._exposeAnnouncerToModals(this._liveElement.id);\n      }\n      // This 100ms timeout is necessary for some browser + screen-reader combinations:\n      // - Both JAWS and NVDA over IE11 will not announce anything without a non-zero timeout.\n      // - With Chrome and IE11 with NVDA or JAWS, a repeated (identical) message won't be read a\n      //   second time without clearing and then using a non-zero delay.\n      // (using JAWS 17 at time of this writing).\n      return this._ngZone.runOutsideAngular(() => {\n        if (!this._currentPromise) {\n          this._currentPromise = new Promise(resolve => this._currentResolve = resolve);\n        }\n        clearTimeout(this._previousTimeout);\n        this._previousTimeout = setTimeout(() => {\n          this._liveElement.textContent = message;\n          if (typeof duration === 'number') {\n            this._previousTimeout = setTimeout(() => this.clear(), duration);\n          }\n          // For some reason in tests this can be undefined\n          // Probably related to ZoneJS and every other thing that patches browser APIs in tests\n          this._currentResolve?.();\n          this._currentPromise = this._currentResolve = undefined;\n        }, 100);\n        return this._currentPromise;\n      });\n    }\n    /**\n     * Clears the current text from the announcer element. Can be used to prevent\n     * screen readers from reading the text out again while the user is going\n     * through the page landmarks.\n     */\n    clear() {\n      if (this._liveElement) {\n        this._liveElement.textContent = '';\n      }\n    }\n    ngOnDestroy() {\n      clearTimeout(this._previousTimeout);\n      this._liveElement?.remove();\n      this._liveElement = null;\n      this._currentResolve?.();\n      this._currentPromise = this._currentResolve = undefined;\n    }\n    _createLiveElement() {\n      const elementClass = 'cdk-live-announcer-element';\n      const previousElements = this._document.getElementsByClassName(elementClass);\n      const liveEl = this._document.createElement('div');\n      // Remove any old containers. This can happen when coming in from a server-side-rendered page.\n      for (let i = 0; i < previousElements.length; i++) {\n        previousElements[i].remove();\n      }\n      liveEl.classList.add(elementClass);\n      liveEl.classList.add('cdk-visually-hidden');\n      liveEl.setAttribute('aria-atomic', 'true');\n      liveEl.setAttribute('aria-live', 'polite');\n      liveEl.id = `cdk-live-announcer-${uniqueIds++}`;\n      this._document.body.appendChild(liveEl);\n      return liveEl;\n    }\n    /**\n     * Some browsers won't expose the accessibility node of the live announcer element if there is an\n     * `aria-modal` and the live announcer is outside of it. This method works around the issue by\n     * pointing the `aria-owns` of all modals to the live announcer element.\n     */\n    _exposeAnnouncerToModals(id) {\n      // TODO(http://github.com/angular/components/issues/26853): consider de-duplicating this with\n      // the `SnakBarContainer` and other usages.\n      //\n      // Note that the selector here is limited to CDK overlays at the moment in order to reduce the\n      // section of the DOM we need to look through. This should cover all the cases we support, but\n      // the selector can be expanded if it turns out to be too narrow.\n      const modals = this._document.querySelectorAll('body > .cdk-overlay-container [aria-modal=\"true\"]');\n      for (let i = 0; i < modals.length; i++) {\n        const modal = modals[i];\n        const ariaOwns = modal.getAttribute('aria-owns');\n        if (!ariaOwns) {\n          modal.setAttribute('aria-owns', id);\n        } else if (ariaOwns.indexOf(id) === -1) {\n          modal.setAttribute('aria-owns', ariaOwns + ' ' + id);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function LiveAnnouncer_Factory(t) {\n        return new (t || LiveAnnouncer)(i0.ɵɵinject(LIVE_ANNOUNCER_ELEMENT_TOKEN, 8), i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(DOCUMENT), i0.ɵɵinject(LIVE_ANNOUNCER_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: LiveAnnouncer,\n        factory: LiveAnnouncer.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return LiveAnnouncer;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * A directive that works similarly to aria-live, but uses the LiveAnnouncer to ensure compatibility\n * with a wider range of browsers and screen readers.\n */\nlet CdkAriaLive = /*#__PURE__*/(() => {\n  class CdkAriaLive {\n    /** The aria-live politeness level to use when announcing messages. */\n    get politeness() {\n      return this._politeness;\n    }\n    set politeness(value) {\n      this._politeness = value === 'off' || value === 'assertive' ? value : 'polite';\n      if (this._politeness === 'off') {\n        if (this._subscription) {\n          this._subscription.unsubscribe();\n          this._subscription = null;\n        }\n      } else if (!this._subscription) {\n        this._subscription = this._ngZone.runOutsideAngular(() => {\n          return this._contentObserver.observe(this._elementRef).subscribe(() => {\n            // Note that we use textContent here, rather than innerText, in order to avoid a reflow.\n            const elementText = this._elementRef.nativeElement.textContent;\n            // The `MutationObserver` fires also for attribute\n            // changes which we don't want to announce.\n            if (elementText !== this._previousAnnouncedText) {\n              this._liveAnnouncer.announce(elementText, this._politeness, this.duration);\n              this._previousAnnouncedText = elementText;\n            }\n          });\n        });\n      }\n    }\n    constructor(_elementRef, _liveAnnouncer, _contentObserver, _ngZone) {\n      this._elementRef = _elementRef;\n      this._liveAnnouncer = _liveAnnouncer;\n      this._contentObserver = _contentObserver;\n      this._ngZone = _ngZone;\n      this._politeness = 'polite';\n    }\n    ngOnDestroy() {\n      if (this._subscription) {\n        this._subscription.unsubscribe();\n      }\n    }\n    static {\n      this.ɵfac = function CdkAriaLive_Factory(t) {\n        return new (t || CdkAriaLive)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(LiveAnnouncer), i0.ɵɵdirectiveInject(i1$1.ContentObserver), i0.ɵɵdirectiveInject(i0.NgZone));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkAriaLive,\n        selectors: [[\"\", \"cdkAriaLive\", \"\"]],\n        inputs: {\n          politeness: [i0.ɵɵInputFlags.None, \"cdkAriaLive\", \"politeness\"],\n          duration: [i0.ɵɵInputFlags.None, \"cdkAriaLiveDuration\", \"duration\"]\n        },\n        exportAs: [\"cdkAriaLive\"],\n        standalone: true\n      });\n    }\n  }\n  return CdkAriaLive;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Detection mode used for attributing the origin of a focus event. */\nvar FocusMonitorDetectionMode = /*#__PURE__*/function (FocusMonitorDetectionMode) {\n  /**\n   * Any mousedown, keydown, or touchstart event that happened in the previous\n   * tick or the current tick will be used to assign a focus event's origin (to\n   * either mouse, keyboard, or touch). This is the default option.\n   */\n  FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"IMMEDIATE\"] = 0] = \"IMMEDIATE\";\n  /**\n   * A focus event's origin is always attributed to the last corresponding\n   * mousedown, keydown, or touchstart event, no matter how long ago it occurred.\n   */\n  FocusMonitorDetectionMode[FocusMonitorDetectionMode[\"EVENTUAL\"] = 1] = \"EVENTUAL\";\n  return FocusMonitorDetectionMode;\n}(FocusMonitorDetectionMode || {});\n/** InjectionToken for FocusMonitorOptions. */\nconst FOCUS_MONITOR_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('cdk-focus-monitor-default-options');\n/**\n * Event listener options that enable capturing and also\n * mark the listener as passive if the browser supports it.\n */\nconst captureEventListenerOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Monitors mouse and keyboard events to determine the cause of focus events. */\nlet FocusMonitor = /*#__PURE__*/(() => {\n  class FocusMonitor {\n    constructor(_ngZone, _platform, _inputModalityDetector, /** @breaking-change 11.0.0 make document required */\n    document, options) {\n      this._ngZone = _ngZone;\n      this._platform = _platform;\n      this._inputModalityDetector = _inputModalityDetector;\n      /** The focus origin that the next focus event is a result of. */\n      this._origin = null;\n      /** Whether the window has just been focused. */\n      this._windowFocused = false;\n      /**\n       * Whether the origin was determined via a touch interaction. Necessary as properly attributing\n       * focus events to touch interactions requires special logic.\n       */\n      this._originFromTouchInteraction = false;\n      /** Map of elements being monitored to their info. */\n      this._elementInfo = new Map();\n      /** The number of elements currently being monitored. */\n      this._monitoredElementCount = 0;\n      /**\n       * Keeps track of the root nodes to which we've currently bound a focus/blur handler,\n       * as well as the number of monitored elements that they contain. We have to treat focus/blur\n       * handlers differently from the rest of the events, because the browser won't emit events\n       * to the document when focus moves inside of a shadow root.\n       */\n      this._rootNodeFocusListenerCount = new Map();\n      /**\n       * Event listener for `focus` events on the window.\n       * Needs to be an arrow function in order to preserve the context when it gets bound.\n       */\n      this._windowFocusListener = () => {\n        // Make a note of when the window regains focus, so we can\n        // restore the origin info for the focused element.\n        this._windowFocused = true;\n        this._windowFocusTimeoutId = window.setTimeout(() => this._windowFocused = false);\n      };\n      /** Subject for stopping our InputModalityDetector subscription. */\n      this._stopInputModalityDetector = new Subject();\n      /**\n       * Event listener for `focus` and 'blur' events on the document.\n       * Needs to be an arrow function in order to preserve the context when it gets bound.\n       */\n      this._rootNodeFocusAndBlurListener = event => {\n        const target = _getEventTarget(event);\n        // We need to walk up the ancestor chain in order to support `checkChildren`.\n        for (let element = target; element; element = element.parentElement) {\n          if (event.type === 'focus') {\n            this._onFocus(event, element);\n          } else {\n            this._onBlur(event, element);\n          }\n        }\n      };\n      this._document = document;\n      this._detectionMode = options?.detectionMode || FocusMonitorDetectionMode.IMMEDIATE;\n    }\n    monitor(element, checkChildren = false) {\n      const nativeElement = coerceElement(element);\n      // Do nothing if we're not on the browser platform or the passed in node isn't an element.\n      if (!this._platform.isBrowser || nativeElement.nodeType !== 1) {\n        // Note: we don't want the observable to emit at all so we don't pass any parameters.\n        return of();\n      }\n      // If the element is inside the shadow DOM, we need to bind our focus/blur listeners to\n      // the shadow root, rather than the `document`, because the browser won't emit focus events\n      // to the `document`, if focus is moving within the same shadow root.\n      const rootNode = _getShadowRoot(nativeElement) || this._getDocument();\n      const cachedInfo = this._elementInfo.get(nativeElement);\n      // Check if we're already monitoring this element.\n      if (cachedInfo) {\n        if (checkChildren) {\n          // TODO(COMP-318): this can be problematic, because it'll turn all non-checkChildren\n          // observers into ones that behave as if `checkChildren` was turned on. We need a more\n          // robust solution.\n          cachedInfo.checkChildren = true;\n        }\n        return cachedInfo.subject;\n      }\n      // Create monitored element info.\n      const info = {\n        checkChildren: checkChildren,\n        subject: new Subject(),\n        rootNode\n      };\n      this._elementInfo.set(nativeElement, info);\n      this._registerGlobalListeners(info);\n      return info.subject;\n    }\n    stopMonitoring(element) {\n      const nativeElement = coerceElement(element);\n      const elementInfo = this._elementInfo.get(nativeElement);\n      if (elementInfo) {\n        elementInfo.subject.complete();\n        this._setClasses(nativeElement);\n        this._elementInfo.delete(nativeElement);\n        this._removeGlobalListeners(elementInfo);\n      }\n    }\n    focusVia(element, origin, options) {\n      const nativeElement = coerceElement(element);\n      const focusedElement = this._getDocument().activeElement;\n      // If the element is focused already, calling `focus` again won't trigger the event listener\n      // which means that the focus classes won't be updated. If that's the case, update the classes\n      // directly without waiting for an event.\n      if (nativeElement === focusedElement) {\n        this._getClosestElementsInfo(nativeElement).forEach(([currentElement, info]) => this._originChanged(currentElement, origin, info));\n      } else {\n        this._setOrigin(origin);\n        // `focus` isn't available on the server\n        if (typeof nativeElement.focus === 'function') {\n          nativeElement.focus(options);\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._elementInfo.forEach((_info, element) => this.stopMonitoring(element));\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n      return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n      const doc = this._getDocument();\n      return doc.defaultView || window;\n    }\n    _getFocusOrigin(focusEventTarget) {\n      if (this._origin) {\n        // If the origin was realized via a touch interaction, we need to perform additional checks\n        // to determine whether the focus origin should be attributed to touch or program.\n        if (this._originFromTouchInteraction) {\n          return this._shouldBeAttributedToTouch(focusEventTarget) ? 'touch' : 'program';\n        } else {\n          return this._origin;\n        }\n      }\n      // If the window has just regained focus, we can restore the most recent origin from before the\n      // window blurred. Otherwise, we've reached the point where we can't identify the source of the\n      // focus. This typically means one of two things happened:\n      //\n      // 1) The element was programmatically focused, or\n      // 2) The element was focused via screen reader navigation (which generally doesn't fire\n      //    events).\n      //\n      // Because we can't distinguish between these two cases, we default to setting `program`.\n      if (this._windowFocused && this._lastFocusOrigin) {\n        return this._lastFocusOrigin;\n      }\n      // If the interaction is coming from an input label, we consider it a mouse interactions.\n      // This is a special case where focus moves on `click`, rather than `mousedown` which breaks\n      // our detection, because all our assumptions are for `mousedown`. We need to handle this\n      // special case, because it's very common for checkboxes and radio buttons.\n      if (focusEventTarget && this._isLastInteractionFromInputLabel(focusEventTarget)) {\n        return 'mouse';\n      }\n      return 'program';\n    }\n    /**\n     * Returns whether the focus event should be attributed to touch. Recall that in IMMEDIATE mode, a\n     * touch origin isn't immediately reset at the next tick (see _setOrigin). This means that when we\n     * handle a focus event following a touch interaction, we need to determine whether (1) the focus\n     * event was directly caused by the touch interaction or (2) the focus event was caused by a\n     * subsequent programmatic focus call triggered by the touch interaction.\n     * @param focusEventTarget The target of the focus event under examination.\n     */\n    _shouldBeAttributedToTouch(focusEventTarget) {\n      // Please note that this check is not perfect. Consider the following edge case:\n      //\n      // <div #parent tabindex=\"0\">\n      //   <div #child tabindex=\"0\" (click)=\"#parent.focus()\"></div>\n      // </div>\n      //\n      // Suppose there is a FocusMonitor in IMMEDIATE mode attached to #parent. When the user touches\n      // #child, #parent is programmatically focused. This code will attribute the focus to touch\n      // instead of program. This is a relatively minor edge-case that can be worked around by using\n      // focusVia(parent, 'program') to focus #parent.\n      return this._detectionMode === FocusMonitorDetectionMode.EVENTUAL || !!focusEventTarget?.contains(this._inputModalityDetector._mostRecentTarget);\n    }\n    /**\n     * Sets the focus classes on the element based on the given focus origin.\n     * @param element The element to update the classes on.\n     * @param origin The focus origin.\n     */\n    _setClasses(element, origin) {\n      element.classList.toggle('cdk-focused', !!origin);\n      element.classList.toggle('cdk-touch-focused', origin === 'touch');\n      element.classList.toggle('cdk-keyboard-focused', origin === 'keyboard');\n      element.classList.toggle('cdk-mouse-focused', origin === 'mouse');\n      element.classList.toggle('cdk-program-focused', origin === 'program');\n    }\n    /**\n     * Updates the focus origin. If we're using immediate detection mode, we schedule an async\n     * function to clear the origin at the end of a timeout. The duration of the timeout depends on\n     * the origin being set.\n     * @param origin The origin to set.\n     * @param isFromInteraction Whether we are setting the origin from an interaction event.\n     */\n    _setOrigin(origin, isFromInteraction = false) {\n      this._ngZone.runOutsideAngular(() => {\n        this._origin = origin;\n        this._originFromTouchInteraction = origin === 'touch' && isFromInteraction;\n        // If we're in IMMEDIATE mode, reset the origin at the next tick (or in `TOUCH_BUFFER_MS` ms\n        // for a touch event). We reset the origin at the next tick because Firefox focuses one tick\n        // after the interaction event. We wait `TOUCH_BUFFER_MS` ms before resetting the origin for\n        // a touch event because when a touch event is fired, the associated focus event isn't yet in\n        // the event queue. Before doing so, clear any pending timeouts.\n        if (this._detectionMode === FocusMonitorDetectionMode.IMMEDIATE) {\n          clearTimeout(this._originTimeoutId);\n          const ms = this._originFromTouchInteraction ? TOUCH_BUFFER_MS : 1;\n          this._originTimeoutId = setTimeout(() => this._origin = null, ms);\n        }\n      });\n    }\n    /**\n     * Handles focus events on a registered element.\n     * @param event The focus event.\n     * @param element The monitored element.\n     */\n    _onFocus(event, element) {\n      // NOTE(mmalerba): We currently set the classes based on the focus origin of the most recent\n      // focus event affecting the monitored element. If we want to use the origin of the first event\n      // instead we should check for the cdk-focused class here and return if the element already has\n      // it. (This only matters for elements that have includesChildren = true).\n      // If we are not counting child-element-focus as focused, make sure that the event target is the\n      // monitored element itself.\n      const elementInfo = this._elementInfo.get(element);\n      const focusEventTarget = _getEventTarget(event);\n      if (!elementInfo || !elementInfo.checkChildren && element !== focusEventTarget) {\n        return;\n      }\n      this._originChanged(element, this._getFocusOrigin(focusEventTarget), elementInfo);\n    }\n    /**\n     * Handles blur events on a registered element.\n     * @param event The blur event.\n     * @param element The monitored element.\n     */\n    _onBlur(event, element) {\n      // If we are counting child-element-focus as focused, make sure that we aren't just blurring in\n      // order to focus another child of the monitored element.\n      const elementInfo = this._elementInfo.get(element);\n      if (!elementInfo || elementInfo.checkChildren && event.relatedTarget instanceof Node && element.contains(event.relatedTarget)) {\n        return;\n      }\n      this._setClasses(element);\n      this._emitOrigin(elementInfo, null);\n    }\n    _emitOrigin(info, origin) {\n      if (info.subject.observers.length) {\n        this._ngZone.run(() => info.subject.next(origin));\n      }\n    }\n    _registerGlobalListeners(elementInfo) {\n      if (!this._platform.isBrowser) {\n        return;\n      }\n      const rootNode = elementInfo.rootNode;\n      const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode) || 0;\n      if (!rootNodeFocusListeners) {\n        this._ngZone.runOutsideAngular(() => {\n          rootNode.addEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          rootNode.addEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n        });\n      }\n      this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners + 1);\n      // Register global listeners when first element is monitored.\n      if (++this._monitoredElementCount === 1) {\n        // Note: we listen to events in the capture phase so we\n        // can detect them even if the user stops propagation.\n        this._ngZone.runOutsideAngular(() => {\n          const window = this._getWindow();\n          window.addEventListener('focus', this._windowFocusListener);\n        });\n        // The InputModalityDetector is also just a collection of global listeners.\n        this._inputModalityDetector.modalityDetected.pipe(takeUntil(this._stopInputModalityDetector)).subscribe(modality => {\n          this._setOrigin(modality, true /* isFromInteraction */);\n        });\n      }\n    }\n    _removeGlobalListeners(elementInfo) {\n      const rootNode = elementInfo.rootNode;\n      if (this._rootNodeFocusListenerCount.has(rootNode)) {\n        const rootNodeFocusListeners = this._rootNodeFocusListenerCount.get(rootNode);\n        if (rootNodeFocusListeners > 1) {\n          this._rootNodeFocusListenerCount.set(rootNode, rootNodeFocusListeners - 1);\n        } else {\n          rootNode.removeEventListener('focus', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          rootNode.removeEventListener('blur', this._rootNodeFocusAndBlurListener, captureEventListenerOptions);\n          this._rootNodeFocusListenerCount.delete(rootNode);\n        }\n      }\n      // Unregister global listeners when last element is unmonitored.\n      if (! --this._monitoredElementCount) {\n        const window = this._getWindow();\n        window.removeEventListener('focus', this._windowFocusListener);\n        // Equivalently, stop our InputModalityDetector subscription.\n        this._stopInputModalityDetector.next();\n        // Clear timeouts for all potentially pending timeouts to prevent the leaks.\n        clearTimeout(this._windowFocusTimeoutId);\n        clearTimeout(this._originTimeoutId);\n      }\n    }\n    /** Updates all the state on an element once its focus origin has changed. */\n    _originChanged(element, origin, elementInfo) {\n      this._setClasses(element, origin);\n      this._emitOrigin(elementInfo, origin);\n      this._lastFocusOrigin = origin;\n    }\n    /**\n     * Collects the `MonitoredElementInfo` of a particular element and\n     * all of its ancestors that have enabled `checkChildren`.\n     * @param element Element from which to start the search.\n     */\n    _getClosestElementsInfo(element) {\n      const results = [];\n      this._elementInfo.forEach((info, currentElement) => {\n        if (currentElement === element || info.checkChildren && currentElement.contains(element)) {\n          results.push([currentElement, info]);\n        }\n      });\n      return results;\n    }\n    /**\n     * Returns whether an interaction is likely to have come from the user clicking the `label` of\n     * an `input` or `textarea` in order to focus it.\n     * @param focusEventTarget Target currently receiving focus.\n     */\n    _isLastInteractionFromInputLabel(focusEventTarget) {\n      const {\n        _mostRecentTarget: mostRecentTarget,\n        mostRecentModality\n      } = this._inputModalityDetector;\n      // If the last interaction used the mouse on an element contained by one of the labels\n      // of an `input`/`textarea` that is currently focused, it is very likely that the\n      // user redirected focus using the label.\n      if (mostRecentModality !== 'mouse' || !mostRecentTarget || mostRecentTarget === focusEventTarget || focusEventTarget.nodeName !== 'INPUT' && focusEventTarget.nodeName !== 'TEXTAREA' || focusEventTarget.disabled) {\n        return false;\n      }\n      const labels = focusEventTarget.labels;\n      if (labels) {\n        for (let i = 0; i < labels.length; i++) {\n          if (labels[i].contains(mostRecentTarget)) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    static {\n      this.ɵfac = function FocusMonitor_Factory(t) {\n        return new (t || FocusMonitor)(i0.ɵɵinject(i0.NgZone), i0.ɵɵinject(i1.Platform), i0.ɵɵinject(InputModalityDetector), i0.ɵɵinject(DOCUMENT, 8), i0.ɵɵinject(FOCUS_MONITOR_DEFAULT_OPTIONS, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: FocusMonitor,\n        factory: FocusMonitor.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return FocusMonitor;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Directive that determines how a particular element was focused (via keyboard, mouse, touch, or\n * programmatically) and adds corresponding classes to the element.\n *\n * There are two variants of this directive:\n * 1) cdkMonitorElementFocus: does not consider an element to be focused if one of its children is\n *    focused.\n * 2) cdkMonitorSubtreeFocus: considers an element focused if it or any of its children are focused.\n */\nlet CdkMonitorFocus = /*#__PURE__*/(() => {\n  class CdkMonitorFocus {\n    constructor(_elementRef, _focusMonitor) {\n      this._elementRef = _elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._focusOrigin = null;\n      this.cdkFocusChange = new EventEmitter();\n    }\n    get focusOrigin() {\n      return this._focusOrigin;\n    }\n    ngAfterViewInit() {\n      const element = this._elementRef.nativeElement;\n      this._monitorSubscription = this._focusMonitor.monitor(element, element.nodeType === 1 && element.hasAttribute('cdkMonitorSubtreeFocus')).subscribe(origin => {\n        this._focusOrigin = origin;\n        this.cdkFocusChange.emit(origin);\n      });\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n      if (this._monitorSubscription) {\n        this._monitorSubscription.unsubscribe();\n      }\n    }\n    static {\n      this.ɵfac = function CdkMonitorFocus_Factory(t) {\n        return new (t || CdkMonitorFocus)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(FocusMonitor));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: CdkMonitorFocus,\n        selectors: [[\"\", \"cdkMonitorElementFocus\", \"\"], [\"\", \"cdkMonitorSubtreeFocus\", \"\"]],\n        outputs: {\n          cdkFocusChange: \"cdkFocusChange\"\n        },\n        exportAs: [\"cdkMonitorFocus\"],\n        standalone: true\n      });\n    }\n  }\n  return CdkMonitorFocus;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Set of possible high-contrast mode backgrounds. */\nvar HighContrastMode = /*#__PURE__*/function (HighContrastMode) {\n  HighContrastMode[HighContrastMode[\"NONE\"] = 0] = \"NONE\";\n  HighContrastMode[HighContrastMode[\"BLACK_ON_WHITE\"] = 1] = \"BLACK_ON_WHITE\";\n  HighContrastMode[HighContrastMode[\"WHITE_ON_BLACK\"] = 2] = \"WHITE_ON_BLACK\";\n  return HighContrastMode;\n}(HighContrastMode || {});\n/** CSS class applied to the document body when in black-on-white high-contrast mode. */\nconst BLACK_ON_WHITE_CSS_CLASS = 'cdk-high-contrast-black-on-white';\n/** CSS class applied to the document body when in white-on-black high-contrast mode. */\nconst WHITE_ON_BLACK_CSS_CLASS = 'cdk-high-contrast-white-on-black';\n/** CSS class applied to the document body when in high-contrast mode. */\nconst HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS = 'cdk-high-contrast-active';\n/**\n * Service to determine whether the browser is currently in a high-contrast-mode environment.\n *\n * Microsoft Windows supports an accessibility feature called \"High Contrast Mode\". This mode\n * changes the appearance of all applications, including web applications, to dramatically increase\n * contrast.\n *\n * IE, Edge, and Firefox currently support this mode. Chrome does not support Windows High Contrast\n * Mode. This service does not detect high-contrast mode as added by the Chrome \"High Contrast\"\n * browser extension.\n */\nlet HighContrastModeDetector = /*#__PURE__*/(() => {\n  class HighContrastModeDetector {\n    constructor(_platform, document) {\n      this._platform = _platform;\n      this._document = document;\n      this._breakpointSubscription = inject(BreakpointObserver).observe('(forced-colors: active)').subscribe(() => {\n        if (this._hasCheckedHighContrastMode) {\n          this._hasCheckedHighContrastMode = false;\n          this._applyBodyHighContrastModeCssClasses();\n        }\n      });\n    }\n    /** Gets the current high-contrast-mode for the page. */\n    getHighContrastMode() {\n      if (!this._platform.isBrowser) {\n        return HighContrastMode.NONE;\n      }\n      // Create a test element with an arbitrary background-color that is neither black nor\n      // white; high-contrast mode will coerce the color to either black or white. Also ensure that\n      // appending the test element to the DOM does not affect layout by absolutely positioning it\n      const testElement = this._document.createElement('div');\n      testElement.style.backgroundColor = 'rgb(1,2,3)';\n      testElement.style.position = 'absolute';\n      this._document.body.appendChild(testElement);\n      // Get the computed style for the background color, collapsing spaces to normalize between\n      // browsers. Once we get this color, we no longer need the test element. Access the `window`\n      // via the document so we can fake it in tests. Note that we have extra null checks, because\n      // this logic will likely run during app bootstrap and throwing can break the entire app.\n      const documentWindow = this._document.defaultView || window;\n      const computedStyle = documentWindow && documentWindow.getComputedStyle ? documentWindow.getComputedStyle(testElement) : null;\n      const computedColor = (computedStyle && computedStyle.backgroundColor || '').replace(/ /g, '');\n      testElement.remove();\n      switch (computedColor) {\n        // Pre Windows 11 dark theme.\n        case 'rgb(0,0,0)':\n        // Windows 11 dark themes.\n        case 'rgb(45,50,54)':\n        case 'rgb(32,32,32)':\n          return HighContrastMode.WHITE_ON_BLACK;\n        // Pre Windows 11 light theme.\n        case 'rgb(255,255,255)':\n        // Windows 11 light theme.\n        case 'rgb(255,250,239)':\n          return HighContrastMode.BLACK_ON_WHITE;\n      }\n      return HighContrastMode.NONE;\n    }\n    ngOnDestroy() {\n      this._breakpointSubscription.unsubscribe();\n    }\n    /** Applies CSS classes indicating high-contrast mode to document body (browser-only). */\n    _applyBodyHighContrastModeCssClasses() {\n      if (!this._hasCheckedHighContrastMode && this._platform.isBrowser && this._document.body) {\n        const bodyClasses = this._document.body.classList;\n        bodyClasses.remove(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n        this._hasCheckedHighContrastMode = true;\n        const mode = this.getHighContrastMode();\n        if (mode === HighContrastMode.BLACK_ON_WHITE) {\n          bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, BLACK_ON_WHITE_CSS_CLASS);\n        } else if (mode === HighContrastMode.WHITE_ON_BLACK) {\n          bodyClasses.add(HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS, WHITE_ON_BLACK_CSS_CLASS);\n        }\n      }\n    }\n    static {\n      this.ɵfac = function HighContrastModeDetector_Factory(t) {\n        return new (t || HighContrastModeDetector)(i0.ɵɵinject(i1.Platform), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: HighContrastModeDetector,\n        factory: HighContrastModeDetector.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return HighContrastModeDetector;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet A11yModule = /*#__PURE__*/(() => {\n  class A11yModule {\n    constructor(highContrastModeDetector) {\n      highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n    }\n    static {\n      this.ɵfac = function A11yModule_Factory(t) {\n        return new (t || A11yModule)(i0.ɵɵinject(HighContrastModeDetector));\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: A11yModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [ObserversModule]\n      });\n    }\n  }\n  return A11yModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { A11yModule, ActiveDescendantKeyManager, AriaDescriber, CDK_DESCRIBEDBY_HOST_ATTRIBUTE, CDK_DESCRIBEDBY_ID_PREFIX, CdkAriaLive, CdkMonitorFocus, CdkTrapFocus, ConfigurableFocusTrap, ConfigurableFocusTrapFactory, EventListenerFocusTrapInertStrategy, FOCUS_MONITOR_DEFAULT_OPTIONS, FOCUS_TRAP_INERT_STRATEGY, FocusKeyManager, FocusMonitor, FocusMonitorDetectionMode, FocusTrap, FocusTrapFactory, HighContrastMode, HighContrastModeDetector, INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS, INPUT_MODALITY_DETECTOR_OPTIONS, InputModalityDetector, InteractivityChecker, IsFocusableConfig, LIVE_ANNOUNCER_DEFAULT_OPTIONS, LIVE_ANNOUNCER_ELEMENT_TOKEN, LIVE_ANNOUNCER_ELEMENT_TOKEN_FACTORY, ListKeyManager, LiveAnnouncer, MESSAGES_CONTAINER_ID, addAriaReferencedId, getAriaReferenceIds, isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader, removeAriaReferencedId };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-browser because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * @docs-private\n */\nconst DIR_DOCUMENT = /*#__PURE__*/new InjectionToken('cdk-dir-doc', {\n  providedIn: 'root',\n  factory: DIR_DOCUMENT_FACTORY\n});\n/** @docs-private */\nfunction DIR_DOCUMENT_FACTORY() {\n  return inject(DOCUMENT);\n}\n\n/** Regex that matches locales with an RTL script. Taken from `goog.i18n.bidi.isRtlLanguage`. */\nconst RTL_LOCALE_PATTERN = /^(ar|ckb|dv|he|iw|fa|nqo|ps|sd|ug|ur|yi|.*[-_](Adlm|Arab|Hebr|Nkoo|Rohg|Thaa))(?!.*[-_](Latn|Cyrl)($|-|_))($|-|_)/i;\n/** Resolves a string value to a specific direction. */\nfunction _resolveDirectionality(rawValue) {\n  const value = rawValue?.toLowerCase() || '';\n  if (value === 'auto' && typeof navigator !== 'undefined' && navigator?.language) {\n    return RTL_LOCALE_PATTERN.test(navigator.language) ? 'rtl' : 'ltr';\n  }\n  return value === 'rtl' ? 'rtl' : 'ltr';\n}\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nlet Directionality = /*#__PURE__*/(() => {\n  class Directionality {\n    constructor(_document) {\n      /** The current 'ltr' or 'rtl' value. */\n      this.value = 'ltr';\n      /** Stream that emits whenever the 'ltr' / 'rtl' state changes. */\n      this.change = new EventEmitter();\n      if (_document) {\n        const bodyDir = _document.body ? _document.body.dir : null;\n        const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n        this.value = _resolveDirectionality(bodyDir || htmlDir || 'ltr');\n      }\n    }\n    ngOnDestroy() {\n      this.change.complete();\n    }\n    static {\n      this.ɵfac = function Directionality_Factory(t) {\n        return new (t || Directionality)(i0.ɵɵinject(DIR_DOCUMENT, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: Directionality,\n        factory: Directionality.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return Directionality;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nlet Dir = /*#__PURE__*/(() => {\n  class Dir {\n    constructor() {\n      /** Normalized direction that accounts for invalid/unsupported values. */\n      this._dir = 'ltr';\n      /** Whether the `value` has been set to its initial value. */\n      this._isInitialized = false;\n      /** Event emitted when the direction changes. */\n      this.change = new EventEmitter();\n    }\n    /** @docs-private */\n    get dir() {\n      return this._dir;\n    }\n    set dir(value) {\n      const previousValue = this._dir;\n      // Note: `_resolveDirectionality` resolves the language based on the browser's language,\n      // whereas the browser does it based on the content of the element. Since doing so based\n      // on the content can be expensive, for now we're doing the simpler matching.\n      this._dir = _resolveDirectionality(value);\n      this._rawDir = value;\n      if (previousValue !== this._dir && this._isInitialized) {\n        this.change.emit(this._dir);\n      }\n    }\n    /** Current layout direction of the element. */\n    get value() {\n      return this.dir;\n    }\n    /** Initialize once default value has been set. */\n    ngAfterContentInit() {\n      this._isInitialized = true;\n    }\n    ngOnDestroy() {\n      this.change.complete();\n    }\n    static {\n      this.ɵfac = function Dir_Factory(t) {\n        return new (t || Dir)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: Dir,\n        selectors: [[\"\", \"dir\", \"\"]],\n        hostVars: 1,\n        hostBindings: function Dir_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"dir\", ctx._rawDir);\n          }\n        },\n        inputs: {\n          dir: \"dir\"\n        },\n        outputs: {\n          change: \"dirChange\"\n        },\n        exportAs: [\"dir\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: Directionality,\n          useExisting: Dir\n        }])]\n      });\n    }\n  }\n  return Dir;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet BidiModule = /*#__PURE__*/(() => {\n  class BidiModule {\n    static {\n      this.ɵfac = function BidiModule_Factory(t) {\n        return new (t || BidiModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: BidiModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return BidiModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality };\n","import * as i0 from '@angular/core';\nimport { Version, InjectionToken, inject, NgModule, Optional, Inject, LOCALE_ID, Injectable, Directive, ANIMATION_MODULE_TYPE, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, booleanAttribute, EventEmitter, Output, ViewChild, NgZone, ElementRef } from '@angular/core';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport { DOCUMENT } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { Platform, _isTestEnvironment, normalizePassiveListenerOptions, _getEventTarget } from '@angular/cdk/platform';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Observable, Subject } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/** Current version of Angular Material. */\nconst _c0 = [\"*\", [[\"mat-option\"], [\"ng-container\"]]];\nconst _c1 = [\"*\", \"mat-option, ng-container\"];\nconst _c2 = [\"text\"];\nfunction MatOption_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 6);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r0.disabled)(\"state\", ctx_r0.selected ? \"checked\" : \"unchecked\");\n  }\n}\nfunction MatOption_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"mat-pseudo-checkbox\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.disabled);\n  }\n}\nfunction MatOption_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"(\", ctx_r3.group.label, \")\");\n  }\n}\nconst _c3 = [[[\"mat-icon\"]], \"*\"];\nconst _c4 = [\"mat-icon\", \"*\"];\nconst _c5 = [\"mat-internal-form-field\", \"\"];\nconst _c6 = [\"*\"];\nconst VERSION = /*#__PURE__*/new Version('17.3.0');\n\n/** @docs-private */\nlet AnimationCurves = /*#__PURE__*/(() => {\n  class AnimationCurves {\n    static {\n      this.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\n    }\n    static {\n      this.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\n    }\n    static {\n      this.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\n    }\n    static {\n      this.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n    }\n  }\n  return AnimationCurves;\n})();\n/** @docs-private */\nlet AnimationDurations = /*#__PURE__*/(() => {\n  class AnimationDurations {\n    static {\n      this.COMPLEX = '375ms';\n    }\n    static {\n      this.ENTERING = '225ms';\n    }\n    static {\n      this.EXITING = '195ms';\n    }\n  }\n  return AnimationDurations;\n})();\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n  return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = /*#__PURE__*/new InjectionToken('mat-sanity-checks', {\n  providedIn: 'root',\n  factory: MATERIAL_SANITY_CHECKS_FACTORY\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nlet MatCommonModule = /*#__PURE__*/(() => {\n  class MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n      this._sanityChecks = _sanityChecks;\n      this._document = _document;\n      /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n      this._hasDoneGlobalChecks = false;\n      // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n      // in MatCommonModule.\n      highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n      if (!this._hasDoneGlobalChecks) {\n        this._hasDoneGlobalChecks = true;\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n          // Inject in here so the reference to `Platform` can be removed in production mode.\n          const platform = inject(Platform, {\n            optional: true\n          });\n          if (this._checkIsEnabled('doctype')) {\n            _checkDoctypeIsDefined(this._document);\n          }\n          if (this._checkIsEnabled('theme')) {\n            _checkThemeIsPresent(this._document, !!platform?.isBrowser);\n          }\n          if (this._checkIsEnabled('version')) {\n            _checkCdkVersionMatch();\n          }\n        }\n      }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n      if (_isTestEnvironment()) {\n        return false;\n      }\n      if (typeof this._sanityChecks === 'boolean') {\n        return this._sanityChecks;\n      }\n      return !!this._sanityChecks[name];\n    }\n    static {\n      this.ɵfac = function MatCommonModule_Factory(t) {\n        return new (t || MatCommonModule)(i0.ɵɵinject(i1.HighContrastModeDetector), i0.ɵɵinject(MATERIAL_SANITY_CHECKS, 8), i0.ɵɵinject(DOCUMENT));\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatCommonModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [BidiModule, BidiModule]\n      });\n    }\n  }\n  return MatCommonModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n  if (!doc.doctype) {\n    console.warn('Current document does not have a doctype. This may cause ' + 'some Angular Material components not to behave as expected.');\n  }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc, isBrowser) {\n  // We need to assert that the `body` is defined, because these checks run very early\n  // and the `body` won't be defined if the consumer put their scripts in the `head`.\n  if (!doc.body || !isBrowser) {\n    return;\n  }\n  const testElement = doc.createElement('div');\n  testElement.classList.add('mat-theme-loaded-marker');\n  doc.body.appendChild(testElement);\n  const computedStyle = getComputedStyle(testElement);\n  // In some situations the computed style of the test element can be null. For example in\n  // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n  // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n  if (computedStyle && computedStyle.display !== 'none') {\n    console.warn('Could not find Angular Material core theme. Most Material ' + 'components may not work as expected. For more info refer ' + 'to the theming guide: https://material.angular.io/guide/theming');\n  }\n  testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n  if (VERSION.full !== VERSION$1.full) {\n    console.warn('The Angular Material version (' + VERSION.full + ') does not match ' + 'the Angular CDK version (' + VERSION$1.full + ').\\n' + 'Please ensure the versions of these two packages exactly match.');\n  }\n}\nfunction mixinDisabled(base) {\n  return class extends base {\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = coerceBooleanProperty(value);\n    }\n    constructor(...args) {\n      super(...args);\n      this._disabled = false;\n    }\n  };\n}\nfunction mixinColor(base, defaultColor) {\n  return class extends base {\n    get color() {\n      return this._color;\n    }\n    set color(value) {\n      const colorPalette = value || this.defaultColor;\n      if (colorPalette !== this._color) {\n        if (this._color) {\n          this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n        }\n        if (colorPalette) {\n          this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n        }\n        this._color = colorPalette;\n      }\n    }\n    constructor(...args) {\n      super(...args);\n      this.defaultColor = defaultColor;\n      // Set the default color that can be specified from the mixin.\n      this.color = defaultColor;\n    }\n  };\n}\nfunction mixinDisableRipple(base) {\n  return class extends base {\n    /** Whether the ripple effect is disabled or not. */\n    get disableRipple() {\n      return this._disableRipple;\n    }\n    set disableRipple(value) {\n      this._disableRipple = coerceBooleanProperty(value);\n    }\n    constructor(...args) {\n      super(...args);\n      this._disableRipple = false;\n    }\n  };\n}\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n  return class extends base {\n    get tabIndex() {\n      return this.disabled ? -1 : this._tabIndex;\n    }\n    set tabIndex(value) {\n      // If the specified tabIndex value is null or undefined, fall back to the default value.\n      this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n    }\n    constructor(...args) {\n      super(...args);\n      this._tabIndex = defaultTabIndex;\n      this.defaultTabIndex = defaultTabIndex;\n    }\n  };\n}\n\n/**\n * Class that tracks the error state of a component.\n * @docs-private\n */\nclass _ErrorStateTracker {\n  constructor(_defaultMatcher, ngControl, _parentFormGroup, _parentForm, _stateChanges) {\n    this._defaultMatcher = _defaultMatcher;\n    this.ngControl = ngControl;\n    this._parentFormGroup = _parentFormGroup;\n    this._parentForm = _parentForm;\n    this._stateChanges = _stateChanges;\n    /** Whether the tracker is currently in an error state. */\n    this.errorState = false;\n  }\n  /** Updates the error state based on the provided error state matcher. */\n  updateErrorState() {\n    const oldState = this.errorState;\n    const parent = this._parentFormGroup || this._parentForm;\n    const matcher = this.matcher || this._defaultMatcher;\n    const control = this.ngControl ? this.ngControl.control : null;\n    const newState = matcher?.isErrorState(control, parent) ?? false;\n    if (newState !== oldState) {\n      this.errorState = newState;\n      this._stateChanges.next();\n    }\n  }\n}\nfunction mixinErrorState(base) {\n  return class extends base {\n    /** Whether the component is in an error state. */\n    get errorState() {\n      return this._getTracker().errorState;\n    }\n    set errorState(value) {\n      this._getTracker().errorState = value;\n    }\n    /** An object used to control the error state of the component. */\n    get errorStateMatcher() {\n      return this._getTracker().matcher;\n    }\n    set errorStateMatcher(value) {\n      this._getTracker().matcher = value;\n    }\n    /** Updates the error state based on the provided error state matcher. */\n    updateErrorState() {\n      this._getTracker().updateErrorState();\n    }\n    _getTracker() {\n      if (!this._tracker) {\n        this._tracker = new _ErrorStateTracker(this._defaultErrorStateMatcher, this.ngControl, this._parentFormGroup, this._parentForm, this.stateChanges);\n      }\n      return this._tracker;\n    }\n    constructor(...args) {\n      super(...args);\n    }\n  };\n}\n\n/**\n * Mixin to augment a directive with an initialized property that will emits when ngOnInit ends.\n * @deprecated Track the initialized state manually.\n * @breaking-change 19.0.0\n */\nfunction mixinInitialized(base) {\n  return class extends base {\n    constructor(...args) {\n      super(...args);\n      /** Whether this directive has been marked as initialized. */\n      this._isInitialized = false;\n      /**\n       * List of subscribers that subscribed before the directive was initialized. Should be notified\n       * during _markInitialized. Set to null after pending subscribers are notified, and should\n       * not expect to be populated after.\n       */\n      this._pendingSubscribers = [];\n      /**\n       * Observable stream that emits when the directive initializes. If already initialized, the\n       * subscriber is stored to be notified once _markInitialized is called.\n       */\n      this.initialized = new Observable(subscriber => {\n        // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n        // when _markInitialized is called.\n        if (this._isInitialized) {\n          this._notifySubscriber(subscriber);\n        } else {\n          this._pendingSubscribers.push(subscriber);\n        }\n      });\n    }\n    /**\n     * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n     * of ngOnInit.\n     * @docs-private\n     */\n    _markInitialized() {\n      if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error('This directive has already been marked as initialized and ' + 'should not be called twice.');\n      }\n      this._isInitialized = true;\n      this._pendingSubscribers.forEach(this._notifySubscriber);\n      this._pendingSubscribers = null;\n    }\n    /** Emits and completes the subscriber stream (should only emit once). */\n    _notifySubscriber(subscriber) {\n      subscriber.next();\n      subscriber.complete();\n    }\n  };\n}\n\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = /*#__PURE__*/new InjectionToken('MAT_DATE_LOCALE', {\n  providedIn: 'root',\n  factory: MAT_DATE_LOCALE_FACTORY\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n  return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n  constructor() {\n    this._localeChanges = new Subject();\n    /** A stream that emits when the locale changes. */\n    this.localeChanges = this._localeChanges;\n  }\n  /**\n   * Given a potential date object, returns that same date object if it is\n   * a valid date, or `null` if it's not a valid date.\n   * @param obj The object to check.\n   * @returns A date or `null`.\n   */\n  getValidDateOrNull(obj) {\n    return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n  }\n  /**\n   * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n   * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n   * string). The default implementation does not allow any deserialization, it simply checks that\n   * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n   * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n   * support passing values from your backend directly to these properties by overriding this method\n   * to also deserialize the format used by your backend.\n   * @param value The value to be deserialized into a date object.\n   * @returns The deserialized date object, either a valid date, null if the value can be\n   *     deserialized into a null date (e.g. the empty string), or an invalid date.\n   */\n  deserialize(value) {\n    if (value == null || this.isDateInstance(value) && this.isValid(value)) {\n      return value;\n    }\n    return this.invalid();\n  }\n  /**\n   * Sets the locale used for all dates.\n   * @param locale The new locale.\n   */\n  setLocale(locale) {\n    this.locale = locale;\n    this._localeChanges.next();\n  }\n  /**\n   * Compares two dates.\n   * @param first The first date to compare.\n   * @param second The second date to compare.\n   * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n   *     a number greater than 0 if the first date is later.\n   */\n  compareDate(first, second) {\n    return this.getYear(first) - this.getYear(second) || this.getMonth(first) - this.getMonth(second) || this.getDate(first) - this.getDate(second);\n  }\n  /**\n   * Checks if two dates are equal.\n   * @param first The first date to check.\n   * @param second The second date to check.\n   * @returns Whether the two dates are equal.\n   *     Null dates are considered equal to other null dates.\n   */\n  sameDate(first, second) {\n    if (first && second) {\n      let firstValid = this.isValid(first);\n      let secondValid = this.isValid(second);\n      if (firstValid && secondValid) {\n        return !this.compareDate(first, second);\n      }\n      return firstValid == secondValid;\n    }\n    return first == second;\n  }\n  /**\n   * Clamp the given date between min and max dates.\n   * @param date The date to clamp.\n   * @param min The minimum value to allow. If null or omitted no min is enforced.\n   * @param max The maximum value to allow. If null or omitted no max is enforced.\n   * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n   *     otherwise `date`.\n   */\n  clampDate(date, min, max) {\n    if (min && this.compareDate(date, min) < 0) {\n      return min;\n    }\n    if (max && this.compareDate(date, max) > 0) {\n      return max;\n    }\n    return date;\n  }\n}\nconst MAT_DATE_FORMATS = /*#__PURE__*/new InjectionToken('mat-date-formats');\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n  const valuesArray = Array(length);\n  for (let i = 0; i < length; i++) {\n    valuesArray[i] = valueFunction(i);\n  }\n  return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nlet NativeDateAdapter = /*#__PURE__*/(() => {\n  class NativeDateAdapter extends DateAdapter {\n    constructor(\n    /**\n     * @deprecated Now injected via inject(), param to be removed.\n     * @breaking-change 18.0.0\n     */\n    matDateLocale) {\n      super();\n      /**\n       * @deprecated No longer being used. To be removed.\n       * @breaking-change 14.0.0\n       */\n      this.useUtcForDisplay = false;\n      /** The injected locale. */\n      this._matDateLocale = inject(MAT_DATE_LOCALE, {\n        optional: true\n      });\n      if (matDateLocale !== undefined) {\n        this._matDateLocale = matDateLocale;\n      }\n      super.setLocale(this._matDateLocale);\n    }\n    getYear(date) {\n      return date.getFullYear();\n    }\n    getMonth(date) {\n      return date.getMonth();\n    }\n    getDate(date) {\n      return date.getDate();\n    }\n    getDayOfWeek(date) {\n      return date.getDay();\n    }\n    getMonthNames(style) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        month: style,\n        timeZone: 'utc'\n      });\n      return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        day: 'numeric',\n        timeZone: 'utc'\n      });\n      return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        weekday: style,\n        timeZone: 'utc'\n      });\n      return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        year: 'numeric',\n        timeZone: 'utc'\n      });\n      return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n      // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n      return 0;\n    }\n    getNumDaysInMonth(date) {\n      return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n      return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n      if (typeof ngDevMode === 'undefined' || ngDevMode) {\n        // Check for invalid month and date (except upper bound on date which we have to check after\n        // creating the Date).\n        if (month < 0 || month > 11) {\n          throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n        }\n        if (date < 1) {\n          throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n        }\n      }\n      let result = this._createDateWithOverflow(year, month, date);\n      // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n      if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n        throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n      }\n      return result;\n    }\n    today() {\n      return new Date();\n    }\n    parse(value, parseFormat) {\n      // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n      // parameters.\n      if (typeof value == 'number') {\n        return new Date(value);\n      }\n      return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n      if (!this.isValid(date)) {\n        throw Error('NativeDateAdapter: Cannot format invalid date.');\n      }\n      const dtf = new Intl.DateTimeFormat(this.locale, {\n        ...displayFormat,\n        timeZone: 'utc'\n      });\n      return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n      return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n      let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n      // It's possible to wind up in the wrong month if the original month has more days than the new\n      // month. In this case we want to go to the last day of the desired month.\n      // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n      // guarantee this.\n      if (this.getMonth(newDate) != ((this.getMonth(date) + months) % 12 + 12) % 12) {\n        newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n      }\n      return newDate;\n    }\n    addCalendarDays(date, days) {\n      return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n      return [date.getUTCFullYear(), this._2digit(date.getUTCMonth() + 1), this._2digit(date.getUTCDate())].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n      if (typeof value === 'string') {\n        if (!value) {\n          return null;\n        }\n        // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n        // string is the right format first.\n        if (ISO_8601_REGEX.test(value)) {\n          let date = new Date(value);\n          if (this.isValid(date)) {\n            return date;\n          }\n        }\n      }\n      return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n      return obj instanceof Date;\n    }\n    isValid(date) {\n      return !isNaN(date.getTime());\n    }\n    invalid() {\n      return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setFullYear` and `setHours` instead.\n      const d = new Date();\n      d.setFullYear(year, month, date);\n      d.setHours(0, 0, 0, 0);\n      return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n      return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containing the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n      // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n      // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n      const d = new Date();\n      d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n      d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n      return dtf.format(d);\n    }\n    static {\n      this.ɵfac = function NativeDateAdapter_Factory(t) {\n        return new (t || NativeDateAdapter)(i0.ɵɵinject(MAT_DATE_LOCALE, 8));\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: NativeDateAdapter,\n        factory: NativeDateAdapter.ɵfac\n      });\n    }\n  }\n  return NativeDateAdapter;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nconst MAT_NATIVE_DATE_FORMATS = {\n  parse: {\n    dateInput: null\n  },\n  display: {\n    dateInput: {\n      year: 'numeric',\n      month: 'numeric',\n      day: 'numeric'\n    },\n    monthYearLabel: {\n      year: 'numeric',\n      month: 'short'\n    },\n    dateA11yLabel: {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    },\n    monthYearA11yLabel: {\n      year: 'numeric',\n      month: 'long'\n    }\n  }\n};\nlet NativeDateModule = /*#__PURE__*/(() => {\n  class NativeDateModule {\n    static {\n      this.ɵfac = function NativeDateModule_Factory(t) {\n        return new (t || NativeDateModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: NativeDateModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [{\n          provide: DateAdapter,\n          useClass: NativeDateAdapter\n        }]\n      });\n    }\n  }\n  return NativeDateModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatNativeDateModule = /*#__PURE__*/(() => {\n  class MatNativeDateModule {\n    static {\n      this.ɵfac = function MatNativeDateModule_Factory(t) {\n        return new (t || MatNativeDateModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatNativeDateModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        providers: [provideNativeDateAdapter()]\n      });\n    }\n  }\n  return MatNativeDateModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nfunction provideNativeDateAdapter(formats = MAT_NATIVE_DATE_FORMATS) {\n  return [{\n    provide: DateAdapter,\n    useClass: NativeDateAdapter\n  }, {\n    provide: MAT_DATE_FORMATS,\n    useValue: formats\n  }];\n}\n\n/** Error state matcher that matches when a control is invalid and dirty. */\nlet ShowOnDirtyErrorStateMatcher = /*#__PURE__*/(() => {\n  class ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n      return !!(control && control.invalid && (control.dirty || form && form.submitted));\n    }\n    static {\n      this.ɵfac = function ShowOnDirtyErrorStateMatcher_Factory(t) {\n        return new (t || ShowOnDirtyErrorStateMatcher)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ShowOnDirtyErrorStateMatcher,\n        factory: ShowOnDirtyErrorStateMatcher.ɵfac\n      });\n    }\n  }\n  return ShowOnDirtyErrorStateMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nlet ErrorStateMatcher = /*#__PURE__*/(() => {\n  class ErrorStateMatcher {\n    isErrorState(control, form) {\n      return !!(control && control.invalid && (control.touched || form && form.submitted));\n    }\n    static {\n      this.ɵfac = function ErrorStateMatcher_Factory(t) {\n        return new (t || ErrorStateMatcher)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: ErrorStateMatcher,\n        factory: ErrorStateMatcher.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return ErrorStateMatcher;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nlet MatLine = /*#__PURE__*/(() => {\n  class MatLine {\n    static {\n      this.ɵfac = function MatLine_Factory(t) {\n        return new (t || MatLine)();\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatLine,\n        selectors: [[\"\", \"mat-line\", \"\"], [\"\", \"matLine\", \"\"]],\n        hostAttrs: [1, \"mat-line\"],\n        standalone: true\n      });\n    }\n  }\n  return MatLine;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n  // Note: doesn't need to unsubscribe, because `changes`\n  // gets completed by Angular when the view is destroyed.\n  lines.changes.pipe(startWith(lines)).subscribe(({\n    length\n  }) => {\n    setClass(element, `${prefix}-2-line`, false);\n    setClass(element, `${prefix}-3-line`, false);\n    setClass(element, `${prefix}-multi-line`, false);\n    if (length === 2 || length === 3) {\n      setClass(element, `${prefix}-${length}-line`, true);\n    } else if (length > 3) {\n      setClass(element, `${prefix}-multi-line`, true);\n    }\n  });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n  element.nativeElement.classList.toggle(className, isAdd);\n}\nlet MatLineModule = /*#__PURE__*/(() => {\n  class MatLineModule {\n    static {\n      this.ɵfac = function MatLineModule_Factory(t) {\n        return new (t || MatLineModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatLineModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatLineModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** Possible states for a ripple element. */\nvar RippleState = /*#__PURE__*/function (RippleState) {\n  RippleState[RippleState[\"FADING_IN\"] = 0] = \"FADING_IN\";\n  RippleState[RippleState[\"VISIBLE\"] = 1] = \"VISIBLE\";\n  RippleState[RippleState[\"FADING_OUT\"] = 2] = \"FADING_OUT\";\n  RippleState[RippleState[\"HIDDEN\"] = 3] = \"HIDDEN\";\n  return RippleState;\n}(RippleState || {});\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n  constructor(_renderer, /** Reference to the ripple HTML element. */\n  element, /** Ripple configuration used for the ripple. */\n  config, /* Whether animations are forcibly disabled for ripples through CSS. */\n  _animationForciblyDisabledThroughCss = false) {\n    this._renderer = _renderer;\n    this.element = element;\n    this.config = config;\n    this._animationForciblyDisabledThroughCss = _animationForciblyDisabledThroughCss;\n    /** Current state of the ripple. */\n    this.state = RippleState.HIDDEN;\n  }\n  /** Fades out the ripple element. */\n  fadeOut() {\n    this._renderer.fadeOutRipple(this);\n  }\n}\n\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions$1 = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Manages events through delegation so that as few event handlers as possible are bound. */\nclass RippleEventManager {\n  constructor() {\n    this._events = new Map();\n    /** Event handler that is bound and which dispatches the events to the different targets. */\n    this._delegateEventHandler = event => {\n      const target = _getEventTarget(event);\n      if (target) {\n        this._events.get(event.type)?.forEach((handlers, element) => {\n          if (element === target || element.contains(target)) {\n            handlers.forEach(handler => handler.handleEvent(event));\n          }\n        });\n      }\n    };\n  }\n  /** Adds an event handler. */\n  addHandler(ngZone, name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (handlersForEvent) {\n      const handlersForElement = handlersForEvent.get(element);\n      if (handlersForElement) {\n        handlersForElement.add(handler);\n      } else {\n        handlersForEvent.set(element, new Set([handler]));\n      }\n    } else {\n      this._events.set(name, new Map([[element, new Set([handler])]]));\n      ngZone.runOutsideAngular(() => {\n        document.addEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n      });\n    }\n  }\n  /** Removes an event handler. */\n  removeHandler(name, element, handler) {\n    const handlersForEvent = this._events.get(name);\n    if (!handlersForEvent) {\n      return;\n    }\n    const handlersForElement = handlersForEvent.get(element);\n    if (!handlersForElement) {\n      return;\n    }\n    handlersForElement.delete(handler);\n    if (handlersForElement.size === 0) {\n      handlersForEvent.delete(element);\n    }\n    if (handlersForEvent.size === 0) {\n      this._events.delete(name);\n      document.removeEventListener(name, this._delegateEventHandler, passiveCapturingEventOptions$1);\n    }\n  }\n}\n\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n  enterDuration: 225,\n  exitDuration: 150\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options used to bind a passive capturing event. */\nconst passiveCapturingEventOptions = /*#__PURE__*/normalizePassiveListenerOptions({\n  passive: true,\n  capture: true\n});\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n  static {\n    this._eventManager = /*#__PURE__*/new RippleEventManager();\n  }\n  constructor(_target, _ngZone, elementOrElementRef, _platform) {\n    this._target = _target;\n    this._ngZone = _ngZone;\n    this._platform = _platform;\n    /** Whether the pointer is currently down or not. */\n    this._isPointerDown = false;\n    /**\n     * Map of currently active ripple references.\n     * The ripple reference is mapped to its element event listeners.\n     * The reason why `| null` is used is that event listeners are added only\n     * when the condition is truthy (see the `_startFadeOutTransition` method).\n     */\n    this._activeRipples = new Map();\n    /** Whether pointer-up event listeners have been registered. */\n    this._pointerUpEventsRegistered = false;\n    // Only do anything if we're on the browser.\n    if (_platform.isBrowser) {\n      this._containerElement = coerceElement(elementOrElementRef);\n    }\n  }\n  /**\n   * Fades in a ripple at the given coordinates.\n   * @param x Coordinate within the element, along the X axis at which to start the ripple.\n   * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n   * @param config Extra ripple options.\n   */\n  fadeInRipple(x, y, config = {}) {\n    const containerRect = this._containerRect = this._containerRect || this._containerElement.getBoundingClientRect();\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...config.animation\n    };\n    if (config.centered) {\n      x = containerRect.left + containerRect.width / 2;\n      y = containerRect.top + containerRect.height / 2;\n    }\n    const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n    const offsetX = x - containerRect.left;\n    const offsetY = y - containerRect.top;\n    const enterDuration = animationConfig.enterDuration;\n    const ripple = document.createElement('div');\n    ripple.classList.add('mat-ripple-element');\n    ripple.style.left = `${offsetX - radius}px`;\n    ripple.style.top = `${offsetY - radius}px`;\n    ripple.style.height = `${radius * 2}px`;\n    ripple.style.width = `${radius * 2}px`;\n    // If a custom color has been specified, set it as inline style. If no color is\n    // set, the default color will be applied through the ripple theme styles.\n    if (config.color != null) {\n      ripple.style.backgroundColor = config.color;\n    }\n    ripple.style.transitionDuration = `${enterDuration}ms`;\n    this._containerElement.appendChild(ripple);\n    // By default the browser does not recalculate the styles of dynamically created\n    // ripple elements. This is critical to ensure that the `scale` animates properly.\n    // We enforce a style recalculation by calling `getComputedStyle` and *accessing* a property.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    const computedStyles = window.getComputedStyle(ripple);\n    const userTransitionProperty = computedStyles.transitionProperty;\n    const userTransitionDuration = computedStyles.transitionDuration;\n    // Note: We detect whether animation is forcibly disabled through CSS (e.g. through\n    // `transition: none` or `display: none`). This is technically unexpected since animations are\n    // controlled through the animation config, but this exists for backwards compatibility. This\n    // logic does not need to be super accurate since it covers some edge cases which can be easily\n    // avoided by users.\n    const animationForciblyDisabledThroughCss = userTransitionProperty === 'none' ||\n    // Note: The canonical unit for serialized CSS `<time>` properties is seconds. Additionally\n    // some browsers expand the duration for every property (in our case `opacity` and `transform`).\n    userTransitionDuration === '0s' || userTransitionDuration === '0s, 0s' ||\n    // If the container is 0x0, it's likely `display: none`.\n    containerRect.width === 0 && containerRect.height === 0;\n    // Exposed reference to the ripple that will be returned.\n    const rippleRef = new RippleRef(this, ripple, config, animationForciblyDisabledThroughCss);\n    // Start the enter animation by setting the transform/scale to 100%. The animation will\n    // execute as part of this statement because we forced a style recalculation before.\n    // Note: We use a 3d transform here in order to avoid an issue in Safari where\n    // the ripples aren't clipped when inside the shadow DOM (see #24028).\n    ripple.style.transform = 'scale3d(1, 1, 1)';\n    rippleRef.state = RippleState.FADING_IN;\n    if (!config.persistent) {\n      this._mostRecentTransientRipple = rippleRef;\n    }\n    let eventListeners = null;\n    // Do not register the `transition` event listener if fade-in and fade-out duration\n    // are set to zero. The events won't fire anyway and we can save resources here.\n    if (!animationForciblyDisabledThroughCss && (enterDuration || animationConfig.exitDuration)) {\n      this._ngZone.runOutsideAngular(() => {\n        const onTransitionEnd = () => this._finishRippleTransition(rippleRef);\n        const onTransitionCancel = () => this._destroyRipple(rippleRef);\n        ripple.addEventListener('transitionend', onTransitionEnd);\n        // If the transition is cancelled (e.g. due to DOM removal), we destroy the ripple\n        // directly as otherwise we would keep it part of the ripple container forever.\n        // https://www.w3.org/TR/css-transitions-1/#:~:text=no%20longer%20in%20the%20document.\n        ripple.addEventListener('transitioncancel', onTransitionCancel);\n        eventListeners = {\n          onTransitionEnd,\n          onTransitionCancel\n        };\n      });\n    }\n    // Add the ripple reference to the list of all active ripples.\n    this._activeRipples.set(rippleRef, eventListeners);\n    // In case there is no fade-in transition duration, we need to manually call the transition\n    // end listener because `transitionend` doesn't fire if there is no transition.\n    if (animationForciblyDisabledThroughCss || !enterDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n    return rippleRef;\n  }\n  /** Fades out a ripple reference. */\n  fadeOutRipple(rippleRef) {\n    // For ripples already fading out or hidden, this should be a noop.\n    if (rippleRef.state === RippleState.FADING_OUT || rippleRef.state === RippleState.HIDDEN) {\n      return;\n    }\n    const rippleEl = rippleRef.element;\n    const animationConfig = {\n      ...defaultRippleAnimationConfig,\n      ...rippleRef.config.animation\n    };\n    // This starts the fade-out transition and will fire the transition end listener that\n    // removes the ripple element from the DOM.\n    rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n    rippleEl.style.opacity = '0';\n    rippleRef.state = RippleState.FADING_OUT;\n    // In case there is no fade-out transition duration, we need to manually call the\n    // transition end listener because `transitionend` doesn't fire if there is no transition.\n    if (rippleRef._animationForciblyDisabledThroughCss || !animationConfig.exitDuration) {\n      this._finishRippleTransition(rippleRef);\n    }\n  }\n  /** Fades out all currently active ripples. */\n  fadeOutAll() {\n    this._getActiveRipples().forEach(ripple => ripple.fadeOut());\n  }\n  /** Fades out all currently active non-persistent ripples. */\n  fadeOutAllNonPersistent() {\n    this._getActiveRipples().forEach(ripple => {\n      if (!ripple.config.persistent) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  /** Sets up the trigger event listeners */\n  setupTriggerEvents(elementOrElementRef) {\n    const element = coerceElement(elementOrElementRef);\n    if (!this._platform.isBrowser || !element || element === this._triggerElement) {\n      return;\n    }\n    // Remove all previously registered event listeners from the trigger element.\n    this._removeTriggerEvents();\n    this._triggerElement = element;\n    // Use event delegation for the trigger events since they're\n    // set up during creation and are performance-sensitive.\n    pointerDownEvents.forEach(type => {\n      RippleRenderer._eventManager.addHandler(this._ngZone, type, element, this);\n    });\n  }\n  /**\n   * Handles all registered events.\n   * @docs-private\n   */\n  handleEvent(event) {\n    if (event.type === 'mousedown') {\n      this._onMousedown(event);\n    } else if (event.type === 'touchstart') {\n      this._onTouchStart(event);\n    } else {\n      this._onPointerUp();\n    }\n    // If pointer-up events haven't been registered yet, do so now.\n    // We do this on-demand in order to reduce the total number of event listeners\n    // registered by the ripples, which speeds up the rendering time for large UIs.\n    if (!this._pointerUpEventsRegistered) {\n      // The events for hiding the ripple are bound directly on the trigger, because:\n      // 1. Some of them occur frequently (e.g. `mouseleave`) and any advantage we get from\n      // delegation will be diminished by having to look through all the data structures often.\n      // 2. They aren't as performance-sensitive, because they're bound only after the user\n      // has interacted with an element.\n      this._ngZone.runOutsideAngular(() => {\n        pointerUpEvents.forEach(type => {\n          this._triggerElement.addEventListener(type, this, passiveCapturingEventOptions);\n        });\n      });\n      this._pointerUpEventsRegistered = true;\n    }\n  }\n  /** Method that will be called if the fade-in or fade-in transition completed. */\n  _finishRippleTransition(rippleRef) {\n    if (rippleRef.state === RippleState.FADING_IN) {\n      this._startFadeOutTransition(rippleRef);\n    } else if (rippleRef.state === RippleState.FADING_OUT) {\n      this._destroyRipple(rippleRef);\n    }\n  }\n  /**\n   * Starts the fade-out transition of the given ripple if it's not persistent and the pointer\n   * is not held down anymore.\n   */\n  _startFadeOutTransition(rippleRef) {\n    const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n    const {\n      persistent\n    } = rippleRef.config;\n    rippleRef.state = RippleState.VISIBLE;\n    // When the timer runs out while the user has kept their pointer down, we want to\n    // keep only the persistent ripples and the latest transient ripple. We do this,\n    // because we don't want stacked transient ripples to appear after their enter\n    // animation has finished.\n    if (!persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n      rippleRef.fadeOut();\n    }\n  }\n  /** Destroys the given ripple by removing it from the DOM and updating its state. */\n  _destroyRipple(rippleRef) {\n    const eventListeners = this._activeRipples.get(rippleRef) ?? null;\n    this._activeRipples.delete(rippleRef);\n    // Clear out the cached bounding rect if we have no more ripples.\n    if (!this._activeRipples.size) {\n      this._containerRect = null;\n    }\n    // If the current ref is the most recent transient ripple, unset it\n    // avoid memory leaks.\n    if (rippleRef === this._mostRecentTransientRipple) {\n      this._mostRecentTransientRipple = null;\n    }\n    rippleRef.state = RippleState.HIDDEN;\n    if (eventListeners !== null) {\n      rippleRef.element.removeEventListener('transitionend', eventListeners.onTransitionEnd);\n      rippleRef.element.removeEventListener('transitioncancel', eventListeners.onTransitionCancel);\n    }\n    rippleRef.element.remove();\n  }\n  /** Function being called whenever the trigger is being pressed using mouse. */\n  _onMousedown(event) {\n    // Screen readers will fire fake mouse events for space/enter. Skip launching a\n    // ripple in this case for consistency with the non-screen-reader experience.\n    const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n    const isSyntheticEvent = this._lastTouchStartEvent && Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n    if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n      this._isPointerDown = true;\n      this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n    }\n  }\n  /** Function being called whenever the trigger is being pressed using touch. */\n  _onTouchStart(event) {\n    if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n      // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n      // events will launch a second ripple if we don't ignore mouse events for a specific\n      // time after a touchstart event.\n      this._lastTouchStartEvent = Date.now();\n      this._isPointerDown = true;\n      // Use `changedTouches` so we skip any touches where the user put\n      // their finger down, but used another finger to tap the element again.\n      const touches = event.changedTouches;\n      // According to the typings the touches should always be defined, but in some cases\n      // the browser appears to not assign them in tests which leads to flakes.\n      if (touches) {\n        for (let i = 0; i < touches.length; i++) {\n          this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n        }\n      }\n    }\n  }\n  /** Function being called whenever the trigger is being released. */\n  _onPointerUp() {\n    if (!this._isPointerDown) {\n      return;\n    }\n    this._isPointerDown = false;\n    // Fade-out all ripples that are visible and not persistent.\n    this._getActiveRipples().forEach(ripple => {\n      // By default, only ripples that are completely visible will fade out on pointer release.\n      // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n      const isVisible = ripple.state === RippleState.VISIBLE || ripple.config.terminateOnPointerUp && ripple.state === RippleState.FADING_IN;\n      if (!ripple.config.persistent && isVisible) {\n        ripple.fadeOut();\n      }\n    });\n  }\n  _getActiveRipples() {\n    return Array.from(this._activeRipples.keys());\n  }\n  /** Removes previously registered event listeners from the trigger element. */\n  _removeTriggerEvents() {\n    const trigger = this._triggerElement;\n    if (trigger) {\n      pointerDownEvents.forEach(type => RippleRenderer._eventManager.removeHandler(type, trigger, this));\n      if (this._pointerUpEventsRegistered) {\n        pointerUpEvents.forEach(type => trigger.removeEventListener(type, this, passiveCapturingEventOptions));\n      }\n    }\n  }\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n  const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n  const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n  return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = /*#__PURE__*/new InjectionToken('mat-ripple-global-options');\nlet MatRipple = /*#__PURE__*/(() => {\n  class MatRipple {\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(value) {\n      if (value) {\n        this.fadeOutAllNonPersistent();\n      }\n      this._disabled = value;\n      this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n      return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n      this._trigger = trigger;\n      this._setupTriggerEventsIfEnabled();\n    }\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n      this._elementRef = _elementRef;\n      this._animationMode = _animationMode;\n      /**\n       * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n       * will be the distance from the center of the ripple to the furthest corner of the host element's\n       * bounding rectangle.\n       */\n      this.radius = 0;\n      this._disabled = false;\n      /** @docs-private Whether ripple directive is initialized and the input bindings are set. */\n      this._isInitialized = false;\n      this._globalOptions = globalOptions || {};\n      this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    ngOnInit() {\n      this._isInitialized = true;\n      this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n      this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n      this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n      this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n      return {\n        centered: this.centered,\n        radius: this.radius,\n        color: this.color,\n        animation: {\n          ...this._globalOptions.animation,\n          ...(this._animationMode === 'NoopAnimations' ? {\n            enterDuration: 0,\n            exitDuration: 0\n          } : {}),\n          ...this.animation\n        },\n        terminateOnPointerUp: this._globalOptions.terminateOnPointerUp\n      };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n      return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n      if (!this.disabled && this._isInitialized) {\n        this._rippleRenderer.setupTriggerEvents(this.trigger);\n      }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n      if (typeof configOrX === 'number') {\n        return this._rippleRenderer.fadeInRipple(configOrX, y, {\n          ...this.rippleConfig,\n          ...config\n        });\n      } else {\n        return this._rippleRenderer.fadeInRipple(0, 0, {\n          ...this.rippleConfig,\n          ...configOrX\n        });\n      }\n    }\n    static {\n      this.ɵfac = function MatRipple_Factory(t) {\n        return new (t || MatRipple)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1$1.Platform), i0.ɵɵdirectiveInject(MAT_RIPPLE_GLOBAL_OPTIONS, 8), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatRipple,\n        selectors: [[\"\", \"mat-ripple\", \"\"], [\"\", \"matRipple\", \"\"]],\n        hostAttrs: [1, \"mat-ripple\"],\n        hostVars: 2,\n        hostBindings: function MatRipple_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-ripple-unbounded\", ctx.unbounded);\n          }\n        },\n        inputs: {\n          color: [i0.ɵɵInputFlags.None, \"matRippleColor\", \"color\"],\n          unbounded: [i0.ɵɵInputFlags.None, \"matRippleUnbounded\", \"unbounded\"],\n          centered: [i0.ɵɵInputFlags.None, \"matRippleCentered\", \"centered\"],\n          radius: [i0.ɵɵInputFlags.None, \"matRippleRadius\", \"radius\"],\n          animation: [i0.ɵɵInputFlags.None, \"matRippleAnimation\", \"animation\"],\n          disabled: [i0.ɵɵInputFlags.None, \"matRippleDisabled\", \"disabled\"],\n          trigger: [i0.ɵɵInputFlags.None, \"matRippleTrigger\", \"trigger\"]\n        },\n        exportAs: [\"matRipple\"],\n        standalone: true\n      });\n    }\n  }\n  return MatRipple;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatRippleModule = /*#__PURE__*/(() => {\n  class MatRippleModule {\n    static {\n      this.ɵfac = function MatRippleModule_Factory(t) {\n        return new (t || MatRippleModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatRippleModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatRippleModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nlet MatPseudoCheckbox = /*#__PURE__*/(() => {\n  class MatPseudoCheckbox {\n    constructor(_animationMode) {\n      this._animationMode = _animationMode;\n      /** Display state of the checkbox. */\n      this.state = 'unchecked';\n      /** Whether the checkbox is disabled. */\n      this.disabled = false;\n      /**\n       * Appearance of the pseudo checkbox. Default appearance of 'full' renders a checkmark/mixedmark\n       * indicator inside a square box. 'minimal' appearance only renders the checkmark/mixedmark.\n       */\n      this.appearance = 'full';\n    }\n    static {\n      this.ɵfac = function MatPseudoCheckbox_Factory(t) {\n        return new (t || MatPseudoCheckbox)(i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatPseudoCheckbox,\n        selectors: [[\"mat-pseudo-checkbox\"]],\n        hostAttrs: [1, \"mat-pseudo-checkbox\"],\n        hostVars: 12,\n        hostBindings: function MatPseudoCheckbox_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mat-pseudo-checkbox-indeterminate\", ctx.state === \"indeterminate\")(\"mat-pseudo-checkbox-checked\", ctx.state === \"checked\")(\"mat-pseudo-checkbox-disabled\", ctx.disabled)(\"mat-pseudo-checkbox-minimal\", ctx.appearance === \"minimal\")(\"mat-pseudo-checkbox-full\", ctx.appearance === \"full\")(\"_mat-animation-noopable\", ctx._animationMode === \"NoopAnimations\");\n          }\n        },\n        inputs: {\n          state: \"state\",\n          disabled: \"disabled\",\n          appearance: \"appearance\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        decls: 0,\n        vars: 0,\n        template: function MatPseudoCheckbox_Template(rf, ctx) {},\n        styles: [\".mat-pseudo-checkbox{border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox._mat-animation-noopable{transition:none !important;animation:none !important}.mat-pseudo-checkbox._mat-animation-noopable::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{left:1px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{left:1px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-minimal-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-minimal-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox-full{border-color:var(--mat-full-pseudo-checkbox-unselected-icon-color);border-width:2px;border-style:solid}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-disabled{border-color:var(--mat-full-pseudo-checkbox-disabled-unselected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate{background-color:var(--mat-full-pseudo-checkbox-selected-icon-color);border-color:rgba(0,0,0,0)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{color:var(--mat-full-pseudo-checkbox-selected-checkmark-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled{background-color:var(--mat-full-pseudo-checkbox-disabled-selected-icon-color)}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked.mat-pseudo-checkbox-disabled::after,.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate.mat-pseudo-checkbox-disabled::after{color:var(--mat-full-pseudo-checkbox-disabled-selected-checkmark-color)}.mat-pseudo-checkbox{width:18px;height:18px}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-checked::after{width:14px;height:6px;transform-origin:center;top:-4.2426406871px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-minimal.mat-pseudo-checkbox-indeterminate::after{top:8px;width:16px}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-checked::after{width:10px;height:4px;transform-origin:center;top:-2.8284271247px;left:0;bottom:0;right:0;margin:auto}.mat-pseudo-checkbox-full.mat-pseudo-checkbox-indeterminate::after{top:6px;width:12px}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatPseudoCheckbox;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatPseudoCheckboxModule = /*#__PURE__*/(() => {\n  class MatPseudoCheckboxModule {\n    static {\n      this.ɵfac = function MatPseudoCheckboxModule_Factory(t) {\n        return new (t || MatPseudoCheckboxModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatPseudoCheckboxModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatCommonModule]\n      });\n    }\n  }\n  return MatPseudoCheckboxModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = /*#__PURE__*/new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = /*#__PURE__*/new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nlet MatOptgroup = /*#__PURE__*/(() => {\n  class MatOptgroup {\n    constructor(parent) {\n      /** whether the option group is disabled. */\n      this.disabled = false;\n      /** Unique id for the underlying label. */\n      this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n      this._inert = parent?.inertGroups ?? false;\n    }\n    static {\n      this.ɵfac = function MatOptgroup_Factory(t) {\n        return new (t || MatOptgroup)(i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatOptgroup,\n        selectors: [[\"mat-optgroup\"]],\n        hostAttrs: [1, \"mat-mdc-optgroup\"],\n        hostVars: 3,\n        hostBindings: function MatOptgroup_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵattribute(\"role\", ctx._inert ? null : \"group\")(\"aria-disabled\", ctx._inert ? null : ctx.disabled.toString())(\"aria-labelledby\", ctx._inert ? null : ctx._labelId);\n          }\n        },\n        inputs: {\n          label: \"label\",\n          disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        exportAs: [\"matOptgroup\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([{\n          provide: MAT_OPTGROUP,\n          useExisting: MatOptgroup\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 5,\n        vars: 4,\n        consts: [[\"role\", \"presentation\", 1, \"mat-mdc-optgroup-label\", 3, \"id\"], [1, \"mdc-list-item__primary-text\"]],\n        template: function MatOptgroup_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c0);\n            i0.ɵɵelementStart(0, \"span\", 0)(1, \"span\", 1);\n            i0.ɵɵtext(2);\n            i0.ɵɵprojection(3);\n            i0.ɵɵelementEnd()();\n            i0.ɵɵprojection(4, 1);\n          }\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-list-item--disabled\", ctx.disabled);\n            i0.ɵɵproperty(\"id\", ctx._labelId);\n            i0.ɵɵadvance(2);\n            i0.ɵɵtextInterpolate1(\"\", ctx.label, \" \");\n          }\n        },\n        styles: [\".mat-mdc-optgroup{color:var(--mat-optgroup-label-text-color);font-family:var(--mat-optgroup-label-text-font);line-height:var(--mat-optgroup-label-text-line-height);font-size:var(--mat-optgroup-label-text-size);letter-spacing:var(--mat-optgroup-label-text-tracking);font-weight:var(--mat-optgroup-label-text-weight)}.mat-mdc-optgroup-label{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;min-height:48px}.mat-mdc-optgroup-label:focus{outline:none}[dir=rtl] .mat-mdc-optgroup-label,.mat-mdc-optgroup-label[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-optgroup-label.mdc-list-item--disabled{opacity:.38}.mat-mdc-optgroup-label .mdc-list-item__primary-text{font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;white-space:normal}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatOptgroup;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n  constructor( /** Reference to the option that emitted the event. */\n  source, /** Whether the change in the option's value was a result of a user action. */\n  isUserInput = false) {\n    this.source = source;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * Single option inside of a `<mat-select>` element.\n */\nlet MatOption = /*#__PURE__*/(() => {\n  class MatOption {\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n      return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n      return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n      return this.group && this.group.disabled || this._disabled;\n    }\n    set disabled(value) {\n      this._disabled = value;\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n      return !!(this._parent && this._parent.disableRipple);\n    }\n    /** Whether to display checkmark for single-selection. */\n    get hideSingleSelectionIndicator() {\n      return !!(this._parent && this._parent.hideSingleSelectionIndicator);\n    }\n    constructor(_element, _changeDetectorRef, _parent, group) {\n      this._element = _element;\n      this._changeDetectorRef = _changeDetectorRef;\n      this._parent = _parent;\n      this.group = group;\n      this._selected = false;\n      this._active = false;\n      this._disabled = false;\n      this._mostRecentViewValue = '';\n      /** The unique ID of the option. */\n      this.id = `mat-option-${_uniqueIdCounter++}`;\n      /** Event emitted when the option is selected or deselected. */\n      // tslint:disable-next-line:no-output-on-prefix\n      this.onSelectionChange = new EventEmitter();\n      /** Emits when the state of the option changes and any parents have to be notified. */\n      this._stateChanges = new Subject();\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n      return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n      // TODO(kara): Add input property alternative for node envs.\n      return (this._text?.nativeElement.textContent || '').trim();\n    }\n    /** Selects the option. */\n    select(emitEvent = true) {\n      if (!this._selected) {\n        this._selected = true;\n        this._changeDetectorRef.markForCheck();\n        if (emitEvent) {\n          this._emitSelectionChangeEvent();\n        }\n      }\n    }\n    /** Deselects the option. */\n    deselect(emitEvent = true) {\n      if (this._selected) {\n        this._selected = false;\n        this._changeDetectorRef.markForCheck();\n        if (emitEvent) {\n          this._emitSelectionChangeEvent();\n        }\n      }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n      // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n      // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n      const element = this._getHostElement();\n      if (typeof element.focus === 'function') {\n        element.focus(options);\n      }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n      if (!this._active) {\n        this._active = true;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n      if (this._active) {\n        this._active = false;\n        this._changeDetectorRef.markForCheck();\n      }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n      return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n      if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n        this._selectViaInteraction();\n        // Prevent the page from scrolling down and form submits.\n        event.preventDefault();\n      }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n      if (!this.disabled) {\n        this._selected = this.multiple ? !this._selected : true;\n        this._changeDetectorRef.markForCheck();\n        this._emitSelectionChangeEvent(true);\n      }\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    // This method is only used by `MatLegacyOption`. Keeping it here to avoid breaking the types.\n    // That's because `MatLegacyOption` use `MatOption` type in a few places such as\n    // `MatOptionSelectionChange`. It is safe to delete this when `MatLegacyOption` is deleted.\n    _getTabIndex() {\n      return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n      return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n      // Since parent components could be using the option's label to display the selected values\n      // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n      // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n      // relatively cheap, however we still limit them only to selected options in order to avoid\n      // hitting the DOM too often.\n      if (this._selected) {\n        const viewValue = this.viewValue;\n        if (viewValue !== this._mostRecentViewValue) {\n          if (this._mostRecentViewValue) {\n            this._stateChanges.next();\n          }\n          this._mostRecentViewValue = viewValue;\n        }\n      }\n    }\n    ngOnDestroy() {\n      this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n      this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n    static {\n      this.ɵfac = function MatOption_Factory(t) {\n        return new (t || MatOption)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MAT_OPTION_PARENT_COMPONENT, 8), i0.ɵɵdirectiveInject(MAT_OPTGROUP, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatOption,\n        selectors: [[\"mat-option\"]],\n        viewQuery: function MatOption_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c2, 7);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._text = _t.first);\n          }\n        },\n        hostAttrs: [\"role\", \"option\", 1, \"mat-mdc-option\", \"mdc-list-item\"],\n        hostVars: 11,\n        hostBindings: function MatOption_HostBindings(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵlistener(\"click\", function MatOption_click_HostBindingHandler() {\n              return ctx._selectViaInteraction();\n            })(\"keydown\", function MatOption_keydown_HostBindingHandler($event) {\n              return ctx._handleKeydown($event);\n            });\n          }\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"aria-selected\", ctx.selected)(\"aria-disabled\", ctx.disabled.toString());\n            i0.ɵɵclassProp(\"mdc-list-item--selected\", ctx.selected)(\"mat-mdc-option-multiple\", ctx.multiple)(\"mat-mdc-option-active\", ctx.active)(\"mdc-list-item--disabled\", ctx.disabled);\n          }\n        },\n        inputs: {\n          value: \"value\",\n          id: \"id\",\n          disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute]\n        },\n        outputs: {\n          onSelectionChange: \"onSelectionChange\"\n        },\n        exportAs: [\"matOption\"],\n        standalone: true,\n        features: [i0.ɵɵInputTransformsFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c4,\n        decls: 8,\n        vars: 5,\n        consts: [[\"class\", \"mat-mdc-option-pseudo-checkbox\", \"aria-hidden\", \"true\", 3, \"disabled\", \"state\"], [1, \"mdc-list-item__primary-text\"], [\"text\", \"\"], [\"class\", \"mat-mdc-option-pseudo-checkbox\", \"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 3, \"disabled\"], [\"class\", \"cdk-visually-hidden\"], [\"aria-hidden\", \"true\", \"mat-ripple\", \"\", 1, \"mat-mdc-option-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\", \"state\"], [\"state\", \"checked\", \"aria-hidden\", \"true\", \"appearance\", \"minimal\", 1, \"mat-mdc-option-pseudo-checkbox\", 3, \"disabled\"], [1, \"cdk-visually-hidden\"]],\n        template: function MatOption_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef(_c3);\n            i0.ɵɵtemplate(0, MatOption_Conditional_0_Template, 1, 2, \"mat-pseudo-checkbox\", 0);\n            i0.ɵɵprojection(1);\n            i0.ɵɵelementStart(2, \"span\", 1, 2);\n            i0.ɵɵprojection(4, 1);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(5, MatOption_Conditional_5_Template, 1, 1, \"mat-pseudo-checkbox\", 3)(6, MatOption_Conditional_6_Template, 2, 1, \"span\", 4);\n            i0.ɵɵelement(7, \"div\", 5);\n          }\n          if (rf & 2) {\n            i0.ɵɵconditional(0, ctx.multiple ? 0 : -1);\n            i0.ɵɵadvance(5);\n            i0.ɵɵconditional(5, !ctx.multiple && ctx.selected && !ctx.hideSingleSelectionIndicator ? 5 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(6, ctx.group && ctx.group._inert ? 6 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"matRippleTrigger\", ctx._getHostElement())(\"matRippleDisabled\", ctx.disabled || ctx.disableRipple);\n          }\n        },\n        dependencies: [MatPseudoCheckbox, MatRipple],\n        styles: [\".mat-mdc-option{display:flex;position:relative;align-items:center;justify-content:flex-start;overflow:hidden;padding:0;padding-left:16px;padding-right:16px;-webkit-user-select:none;user-select:none;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased;cursor:pointer;-webkit-tap-highlight-color:rgba(0,0,0,0);color:var(--mat-option-label-text-color);font-family:var(--mat-option-label-text-font);line-height:var(--mat-option-label-text-line-height);font-size:var(--mat-option-label-text-size);letter-spacing:var(--mat-option-label-text-tracking);font-weight:var(--mat-option-label-text-weight);min-height:48px}.mat-mdc-option:focus{outline:none}[dir=rtl] .mat-mdc-option,.mat-mdc-option[dir=rtl]{padding-left:16px;padding-right:16px}.mat-mdc-option:hover:not(.mdc-list-item--disabled){background-color:var(--mat-option-hover-state-layer-color)}.mat-mdc-option:focus.mdc-list-item,.mat-mdc-option.mat-mdc-option-active.mdc-list-item{background-color:var(--mat-option-focus-state-layer-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled) .mdc-list-item__primary-text{color:var(--mat-option-selected-state-label-text-color)}.mat-mdc-option.mdc-list-item--selected:not(.mdc-list-item--disabled):not(.mat-mdc-option-multiple){background-color:var(--mat-option-selected-state-layer-color)}.mat-mdc-option.mdc-list-item{align-items:center;background:rgba(0,0,0,0)}.mat-mdc-option.mdc-list-item--disabled{cursor:default;pointer-events:none}.mat-mdc-option.mdc-list-item--disabled .mat-mdc-option-pseudo-checkbox,.mat-mdc-option.mdc-list-item--disabled .mdc-list-item__primary-text,.mat-mdc-option.mdc-list-item--disabled>mat-icon{opacity:.38}.mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:32px}[dir=rtl] .mat-mdc-optgroup .mat-mdc-option:not(.mat-mdc-option-multiple){padding-left:16px;padding-right:32px}.mat-mdc-option .mat-icon,.mat-mdc-option .mat-pseudo-checkbox-full{margin-right:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-icon,[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-full{margin-right:0;margin-left:16px}.mat-mdc-option .mat-pseudo-checkbox-minimal{margin-left:16px;flex-shrink:0}[dir=rtl] .mat-mdc-option .mat-pseudo-checkbox-minimal{margin-right:16px;margin-left:0}.mat-mdc-option .mat-mdc-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-mdc-option .mdc-list-item__primary-text{white-space:normal;font-size:inherit;font-weight:inherit;letter-spacing:inherit;line-height:inherit;font-family:inherit;text-decoration:inherit;text-transform:inherit;margin-right:auto}[dir=rtl] .mat-mdc-option .mdc-list-item__primary-text{margin-right:0;margin-left:auto}.cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{content:\\\"\\\";position:absolute;top:50%;right:16px;transform:translateY(-50%);width:10px;height:0;border-bottom:solid 10px;border-radius:10px}[dir=rtl] .cdk-high-contrast-active .mat-mdc-option.mdc-list-item--selected:not(.mat-mdc-option-multiple)::after{right:auto;left:16px}.mat-mdc-option-multiple{--mdc-list-list-item-selected-container-color:var(--mdc-list-list-item-container-color, transparent)}.mat-mdc-option-active .mat-mdc-focus-indicator::before{content:\\\"\\\"}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatOption;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n  if (optionGroups.length) {\n    let optionsArray = options.toArray();\n    let groups = optionGroups.toArray();\n    let groupCounter = 0;\n    for (let i = 0; i < optionIndex + 1; i++) {\n      if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n        groupCounter++;\n      }\n    }\n    return groupCounter;\n  }\n  return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n  if (optionOffset < currentScrollPosition) {\n    return optionOffset;\n  }\n  if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n    return Math.max(0, optionOffset - panelHeight + optionHeight);\n  }\n  return currentScrollPosition;\n}\nlet MatOptionModule = /*#__PURE__*/(() => {\n  class MatOptionModule {\n    static {\n      this.ɵfac = function MatOptionModule_Factory(t) {\n        return new (t || MatOptionModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatOptionModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatRippleModule, MatCommonModule, MatPseudoCheckboxModule]\n      });\n    }\n  }\n  return MatOptionModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/** The options for the MatRippleLoader's event listeners. */\nconst eventListenerOptions = {\n  capture: true\n};\n/** The events that should trigger the initialization of the ripple. */\nconst rippleInteractionEvents = ['focus', 'click', 'mouseenter', 'touchstart'];\n/** The attribute attached to a component whose ripple has not yet been initialized. */\nconst matRippleUninitialized = 'mat-ripple-loader-uninitialized';\n/** Additional classes that should be added to the ripple when it is rendered. */\nconst matRippleClassName = 'mat-ripple-loader-class-name';\n/** Whether the ripple should be centered. */\nconst matRippleCentered = 'mat-ripple-loader-centered';\n/** Whether the ripple should be disabled. */\nconst matRippleDisabled = 'mat-ripple-loader-disabled';\n/**\n * Handles attaching ripples on demand.\n *\n * This service allows us to avoid eagerly creating & attaching MatRipples.\n * It works by creating & attaching a ripple only when a component is first interacted with.\n *\n * @docs-private\n */\nlet MatRippleLoader = /*#__PURE__*/(() => {\n  class MatRippleLoader {\n    constructor() {\n      this._document = inject(DOCUMENT, {\n        optional: true\n      });\n      this._animationMode = inject(ANIMATION_MODULE_TYPE, {\n        optional: true\n      });\n      this._globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n        optional: true\n      });\n      this._platform = inject(Platform);\n      this._ngZone = inject(NgZone);\n      this._hosts = new Map();\n      /** Handles creating and attaching component internals when a component it is initially interacted with. */\n      this._onInteraction = event => {\n        if (!(event.target instanceof HTMLElement)) {\n          return;\n        }\n        const eventTarget = event.target;\n        // TODO(wagnermaciel): Consider batching these events to improve runtime performance.\n        const element = eventTarget.closest(`[${matRippleUninitialized}]`);\n        if (element) {\n          this._createRipple(element);\n        }\n      };\n      this._ngZone.runOutsideAngular(() => {\n        for (const event of rippleInteractionEvents) {\n          this._document?.addEventListener(event, this._onInteraction, eventListenerOptions);\n        }\n      });\n    }\n    ngOnDestroy() {\n      const hosts = this._hosts.keys();\n      for (const host of hosts) {\n        this.destroyRipple(host);\n      }\n      for (const event of rippleInteractionEvents) {\n        this._document?.removeEventListener(event, this._onInteraction, eventListenerOptions);\n      }\n    }\n    /**\n     * Configures the ripple that will be rendered by the ripple loader.\n     *\n     * Stores the given information about how the ripple should be configured on the host\n     * element so that it can later be retrived & used when the ripple is actually created.\n     */\n    configureRipple(host, config) {\n      // Indicates that the ripple has not yet been rendered for this component.\n      host.setAttribute(matRippleUninitialized, '');\n      // Store the additional class name(s) that should be added to the ripple element.\n      if (config.className || !host.hasAttribute(matRippleClassName)) {\n        host.setAttribute(matRippleClassName, config.className || '');\n      }\n      // Store whether the ripple should be centered.\n      if (config.centered) {\n        host.setAttribute(matRippleCentered, '');\n      }\n      if (config.disabled) {\n        host.setAttribute(matRippleDisabled, '');\n      }\n    }\n    /** Returns the ripple instance for the given host element. */\n    getRipple(host) {\n      const ripple = this._hosts.get(host);\n      return ripple || this._createRipple(host);\n    }\n    /** Sets the disabled state on the ripple instance corresponding to the given host element. */\n    setDisabled(host, disabled) {\n      const ripple = this._hosts.get(host);\n      // If the ripple has already been instantiated, just disable it.\n      if (ripple) {\n        ripple.disabled = disabled;\n        return;\n      }\n      // Otherwise, set an attribute so we know what the\n      // disabled state should be when the ripple is initialized.\n      if (disabled) {\n        host.setAttribute(matRippleDisabled, '');\n      } else {\n        host.removeAttribute(matRippleDisabled);\n      }\n    }\n    /** Creates a MatRipple and appends it to the given element. */\n    _createRipple(host) {\n      if (!this._document) {\n        return;\n      }\n      const existingRipple = this._hosts.get(host);\n      if (existingRipple) {\n        return existingRipple;\n      }\n      // Create the ripple element.\n      host.querySelector('.mat-ripple')?.remove();\n      const rippleEl = this._document.createElement('span');\n      rippleEl.classList.add('mat-ripple', host.getAttribute(matRippleClassName));\n      host.append(rippleEl);\n      // Create the MatRipple.\n      const ripple = new MatRipple(new ElementRef(rippleEl), this._ngZone, this._platform, this._globalRippleOptions ? this._globalRippleOptions : undefined, this._animationMode ? this._animationMode : undefined);\n      ripple._isInitialized = true;\n      ripple.trigger = host;\n      ripple.centered = host.hasAttribute(matRippleCentered);\n      ripple.disabled = host.hasAttribute(matRippleDisabled);\n      this.attachRipple(host, ripple);\n      return ripple;\n    }\n    attachRipple(host, ripple) {\n      host.removeAttribute(matRippleUninitialized);\n      this._hosts.set(host, ripple);\n    }\n    destroyRipple(host) {\n      const ripple = this._hosts.get(host);\n      if (ripple) {\n        // Since this directive is created manually, it needs to be destroyed manually too.\n        // tslint:disable-next-line:no-lifecycle-invocation\n        ripple.ngOnDestroy();\n        this._hosts.delete(host);\n      }\n    }\n    static {\n      this.ɵfac = function MatRippleLoader_Factory(t) {\n        return new (t || MatRippleLoader)();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: MatRippleLoader,\n        factory: MatRippleLoader.ɵfac,\n        providedIn: 'root'\n      });\n    }\n  }\n  return MatRippleLoader;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Internal shared component used as a container in form field controls.\n * Not to be confused with `mat-form-field` which MDC calls a \"text field\".\n * @docs-private\n */\nlet _MatInternalFormField = /*#__PURE__*/(() => {\n  class _MatInternalFormField {\n    static {\n      this.ɵfac = function _MatInternalFormField_Factory(t) {\n        return new (t || _MatInternalFormField)();\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: _MatInternalFormField,\n        selectors: [[\"div\", \"mat-internal-form-field\", \"\"]],\n        hostAttrs: [1, \"mdc-form-field\", \"mat-internal-form-field\"],\n        hostVars: 2,\n        hostBindings: function _MatInternalFormField_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵclassProp(\"mdc-form-field--align-end\", ctx.labelPosition === \"before\");\n          }\n        },\n        inputs: {\n          labelPosition: \"labelPosition\"\n        },\n        standalone: true,\n        features: [i0.ɵɵStandaloneFeature],\n        attrs: _c5,\n        ngContentSelectors: _c6,\n        decls: 1,\n        vars: 0,\n        template: function _MatInternalFormField_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵprojection(0);\n          }\n        },\n        styles: [\".mdc-form-field{display:inline-flex;align-items:center;vertical-align:middle}.mdc-form-field[hidden]{display:none}.mdc-form-field>label{margin-left:0;margin-right:auto;padding-left:4px;padding-right:0;order:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{margin-left:auto;margin-right:0}[dir=rtl] .mdc-form-field>label,.mdc-form-field>label[dir=rtl]{padding-left:0;padding-right:4px}.mdc-form-field--nowrap>label{text-overflow:ellipsis;overflow:hidden;white-space:nowrap}.mdc-form-field--align-end>label{margin-left:auto;margin-right:0;padding-left:0;padding-right:4px;order:-1}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{margin-left:0;margin-right:auto}[dir=rtl] .mdc-form-field--align-end>label,.mdc-form-field--align-end>label[dir=rtl]{padding-left:4px;padding-right:0}.mdc-form-field--space-between{justify-content:space-between}.mdc-form-field--space-between>label{margin:0}[dir=rtl] .mdc-form-field--space-between>label,.mdc-form-field--space-between>label[dir=rtl]{margin:0}.mdc-form-field{font-family:var(--mdc-form-field-label-text-font);line-height:var(--mdc-form-field-label-text-line-height);font-size:var(--mdc-form-field-label-text-size);font-weight:var(--mdc-form-field-label-text-weight);letter-spacing:var(--mdc-form-field-label-text-tracking);color:var(--mdc-form-field-label-text-color)}.mat-internal-form-field{-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:antialiased}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return _MatInternalFormField;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleLoader, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, RippleState, ShowOnDirtyErrorStateMatcher, VERSION, _ErrorStateTracker, _MatInternalFormField, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, provideNativeDateAdapter, setLines };\n","import * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, ANIMATION_MODULE_TYPE, booleanAttribute, numberAttribute, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i1 from '@angular/cdk/a11y';\nimport { MatRipple, _MatInternalFormField, MatCommonModule } from '@angular/material/core';\n\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst _c0 = [\"switch\"];\nfunction MatSlideToggle_Conditional_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 13);\n    i0.ɵɵelement(2, \"path\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"svg\", 15);\n    i0.ɵɵelement(4, \"path\", 16);\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c1 = [\"*\"];\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = /*#__PURE__*/new InjectionToken('mat-slide-toggle-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    disableToggleValue: false,\n    hideIcon: false\n  })\n});\n\n/**\n * @deprecated Will stop being exported.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSlideToggle),\n  multi: true\n};\n/** Change event object emitted by a slide toggle. */\nclass MatSlideToggleChange {\n  constructor( /** The source slide toggle of the event. */\n  source, /** The new `checked` value of the slide toggle. */\n  checked) {\n    this.source = source;\n    this.checked = checked;\n  }\n}\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\nlet MatSlideToggle = /*#__PURE__*/(() => {\n  class MatSlideToggle {\n    _createChangeEvent(isChecked) {\n      return new MatSlideToggleChange(this, isChecked);\n    }\n    /** Returns the unique id for the visual hidden button. */\n    get buttonId() {\n      return `${this.id || this._uniqueId}-button`;\n    }\n    /** Focuses the slide-toggle. */\n    focus() {\n      this._switchElement.nativeElement.focus();\n    }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n      return this._checked;\n    }\n    set checked(value) {\n      this._checked = value;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n      return `${this.id || this._uniqueId}-input`;\n    }\n    constructor(_elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n      this._elementRef = _elementRef;\n      this._focusMonitor = _focusMonitor;\n      this._changeDetectorRef = _changeDetectorRef;\n      this.defaults = defaults;\n      this._onChange = _ => {};\n      this._onTouched = () => {};\n      this._validatorOnChange = () => {};\n      this._checked = false;\n      /** Name value will be applied to the input element if present. */\n      this.name = null;\n      /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n      this.labelPosition = 'after';\n      /** Used to set the aria-label attribute on the underlying input element. */\n      this.ariaLabel = null;\n      /** Used to set the aria-labelledby attribute on the underlying input element. */\n      this.ariaLabelledby = null;\n      /** Whether the slide toggle is disabled. */\n      this.disabled = false;\n      /** Whether the slide toggle has a ripple. */\n      this.disableRipple = false;\n      /** Tabindex of slide toggle. */\n      this.tabIndex = 0;\n      /** An event will be dispatched each time the slide-toggle changes its value. */\n      this.change = new EventEmitter();\n      /**\n       * An event will be dispatched each time the slide-toggle input is toggled.\n       * This event is always emitted when the user toggles the slide toggle, but this does not mean\n       * the slide toggle's value has changed.\n       */\n      this.toggleChange = new EventEmitter();\n      this.tabIndex = parseInt(tabIndex) || 0;\n      this.color = defaults.color || 'accent';\n      this._noopAnimations = animationMode === 'NoopAnimations';\n      this.id = this._uniqueId = `mat-mdc-slide-toggle-${++nextUniqueId}`;\n      this.hideIcon = defaults.hideIcon ?? false;\n      this._labelId = this._uniqueId + '-label';\n    }\n    ngAfterContentInit() {\n      this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n        if (focusOrigin === 'keyboard' || focusOrigin === 'program') {\n          this._focused = true;\n          this._changeDetectorRef.markForCheck();\n        } else if (!focusOrigin) {\n          // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n          // Angular does not expect events to be raised during change detection, so any state\n          // change (such as a form control's ng-touched) will cause a changed-after-checked error.\n          // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n          // telling the form control it has been touched until the next tick.\n          Promise.resolve().then(() => {\n            this._focused = false;\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n          });\n        }\n      });\n    }\n    ngOnChanges(changes) {\n      if (changes['required']) {\n        this._validatorOnChange();\n      }\n    }\n    ngOnDestroy() {\n      this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n      this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n      this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n      this._onTouched = fn;\n    }\n    /** Implemented as a part of Validator. */\n    validate(control) {\n      return this.required && control.value !== true ? {\n        'required': true\n      } : null;\n    }\n    /** Implemented as a part of Validator. */\n    registerOnValidatorChange(fn) {\n      this._validatorOnChange = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n      this.disabled = isDisabled;\n      this._changeDetectorRef.markForCheck();\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n      this.checked = !this.checked;\n      this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n      this._onChange(this.checked);\n      this.change.emit(this._createChangeEvent(this.checked));\n    }\n    /** Method being called whenever the underlying button is clicked. */\n    _handleClick() {\n      this.toggleChange.emit();\n      if (!this.defaults.disableToggleValue) {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n      }\n    }\n    _getAriaLabelledBy() {\n      if (this.ariaLabelledby) {\n        return this.ariaLabelledby;\n      }\n      // Even though we have a `label` element with a `for` pointing to the button, we need the\n      // `aria-labelledby`, because the button gets flagged as not having a label by tools like axe.\n      return this.ariaLabel ? null : this._labelId;\n    }\n    static {\n      this.ɵfac = function MatSlideToggle_Factory(t) {\n        return new (t || MatSlideToggle)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i1.FocusMonitor), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵinjectAttribute('tabindex'), i0.ɵɵdirectiveInject(MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS), i0.ɵɵdirectiveInject(ANIMATION_MODULE_TYPE, 8));\n      };\n    }\n    static {\n      this.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n        type: MatSlideToggle,\n        selectors: [[\"mat-slide-toggle\"]],\n        viewQuery: function MatSlideToggle_Query(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵviewQuery(_c0, 5);\n          }\n          if (rf & 2) {\n            let _t;\n            i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._switchElement = _t.first);\n          }\n        },\n        hostAttrs: [1, \"mat-mdc-slide-toggle\"],\n        hostVars: 13,\n        hostBindings: function MatSlideToggle_HostBindings(rf, ctx) {\n          if (rf & 2) {\n            i0.ɵɵhostProperty(\"id\", ctx.id);\n            i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"name\", null)(\"aria-labelledby\", null);\n            i0.ɵɵclassMap(ctx.color ? \"mat-\" + ctx.color : \"\");\n            i0.ɵɵclassProp(\"mat-mdc-slide-toggle-focused\", ctx._focused)(\"mat-mdc-slide-toggle-checked\", ctx.checked)(\"_mat-animation-noopable\", ctx._noopAnimations);\n          }\n        },\n        inputs: {\n          name: \"name\",\n          id: \"id\",\n          labelPosition: \"labelPosition\",\n          ariaLabel: [i0.ɵɵInputFlags.None, \"aria-label\", \"ariaLabel\"],\n          ariaLabelledby: [i0.ɵɵInputFlags.None, \"aria-labelledby\", \"ariaLabelledby\"],\n          ariaDescribedby: [i0.ɵɵInputFlags.None, \"aria-describedby\", \"ariaDescribedby\"],\n          required: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"required\", \"required\", booleanAttribute],\n          color: \"color\",\n          disabled: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disabled\", \"disabled\", booleanAttribute],\n          disableRipple: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"disableRipple\", \"disableRipple\", booleanAttribute],\n          tabIndex: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)],\n          checked: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"checked\", \"checked\", booleanAttribute],\n          hideIcon: [i0.ɵɵInputFlags.HasDecoratorInputTransform, \"hideIcon\", \"hideIcon\", booleanAttribute]\n        },\n        outputs: {\n          change: \"change\",\n          toggleChange: \"toggleChange\"\n        },\n        exportAs: [\"matSlideToggle\"],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, {\n          provide: NG_VALIDATORS,\n          useExisting: MatSlideToggle,\n          multi: true\n        }]), i0.ɵɵInputTransformsFeature, i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n        ngContentSelectors: _c1,\n        decls: 13,\n        vars: 24,\n        consts: [[\"mat-internal-form-field\", \"\", 3, \"labelPosition\"], [\"role\", \"switch\", \"type\", \"button\", 1, \"mdc-switch\", 3, \"tabIndex\", \"disabled\", \"click\"], [\"switch\", \"\"], [1, \"mdc-switch__track\"], [1, \"mdc-switch__handle-track\"], [1, \"mdc-switch__handle\"], [1, \"mdc-switch__shadow\"], [1, \"mdc-elevation-overlay\"], [1, \"mdc-switch__ripple\"], [\"mat-ripple\", \"\", 1, \"mat-mdc-slide-toggle-ripple\", \"mat-mdc-focus-indicator\", 3, \"matRippleTrigger\", \"matRippleDisabled\", \"matRippleCentered\"], [\"class\", \"mdc-switch__icons\"], [1, \"mdc-label\", 3, \"for\", \"click\"], [1, \"mdc-switch__icons\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--on\"], [\"d\", \"M19.69,5.23L8.96,15.96l-4.23-4.23L2.96,13.5l6,6L21.46,7L19.69,5.23z\"], [\"viewBox\", \"0 0 24 24\", \"aria-hidden\", \"true\", 1, \"mdc-switch__icon\", \"mdc-switch__icon--off\"], [\"d\", \"M20 13H4v-2h16v2z\"]],\n        template: function MatSlideToggle_Template(rf, ctx) {\n          if (rf & 1) {\n            i0.ɵɵprojectionDef();\n            i0.ɵɵelementStart(0, \"div\", 0)(1, \"button\", 1, 2);\n            i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_button_click_1_listener() {\n              return ctx._handleClick();\n            });\n            i0.ɵɵelement(3, \"div\", 3);\n            i0.ɵɵelementStart(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6);\n            i0.ɵɵelement(7, \"div\", 7);\n            i0.ɵɵelementEnd();\n            i0.ɵɵelementStart(8, \"div\", 8);\n            i0.ɵɵelement(9, \"div\", 9);\n            i0.ɵɵelementEnd();\n            i0.ɵɵtemplate(10, MatSlideToggle_Conditional_10_Template, 5, 0, \"div\", 10);\n            i0.ɵɵelementEnd()()();\n            i0.ɵɵelementStart(11, \"label\", 11);\n            i0.ɵɵlistener(\"click\", function MatSlideToggle_Template_label_click_11_listener($event) {\n              return $event.stopPropagation();\n            });\n            i0.ɵɵprojection(12);\n            i0.ɵɵelementEnd()();\n          }\n          if (rf & 2) {\n            const _r0 = i0.ɵɵreference(2);\n            i0.ɵɵproperty(\"labelPosition\", ctx.labelPosition);\n            i0.ɵɵadvance();\n            i0.ɵɵclassProp(\"mdc-switch--selected\", ctx.checked)(\"mdc-switch--unselected\", !ctx.checked)(\"mdc-switch--checked\", ctx.checked)(\"mdc-switch--disabled\", ctx.disabled);\n            i0.ɵɵproperty(\"tabIndex\", ctx.disabled ? -1 : ctx.tabIndex)(\"disabled\", ctx.disabled);\n            i0.ɵɵattribute(\"id\", ctx.buttonId)(\"name\", ctx.name)(\"aria-label\", ctx.ariaLabel)(\"aria-labelledby\", ctx._getAriaLabelledBy())(\"aria-describedby\", ctx.ariaDescribedby)(\"aria-required\", ctx.required || null)(\"aria-checked\", ctx.checked);\n            i0.ɵɵadvance(8);\n            i0.ɵɵproperty(\"matRippleTrigger\", _r0)(\"matRippleDisabled\", ctx.disableRipple || ctx.disabled)(\"matRippleCentered\", true);\n            i0.ɵɵadvance();\n            i0.ɵɵconditional(10, !ctx.hideIcon ? 10 : -1);\n            i0.ɵɵadvance();\n            i0.ɵɵproperty(\"for\", ctx.buttonId);\n            i0.ɵɵattribute(\"id\", ctx._labelId);\n          }\n        },\n        dependencies: [MatRipple, _MatInternalFormField],\n        styles: [\".mdc-elevation-overlay{position:absolute;border-radius:inherit;pointer-events:none;opacity:var(--mdc-elevation-overlay-opacity);transition:opacity 280ms cubic-bezier(0.4, 0, 0.2, 1);background-color:var(--mdc-elevation-overlay-color)}.mdc-switch{align-items:center;background:none;border:none;cursor:pointer;display:inline-flex;flex-shrink:0;margin:0;outline:none;overflow:visible;padding:0;position:relative}.mdc-switch[hidden]{display:none}.mdc-switch:disabled{cursor:default;pointer-events:none}.mdc-switch__track{overflow:hidden;position:relative;width:100%}.mdc-switch__track::before,.mdc-switch__track::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;width:100%}@media screen and (forced-colors: active){.mdc-switch__track::before,.mdc-switch__track::after{border-color:currentColor}}.mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(-100%)}[dir=rtl] .mdc-switch__track::after,.mdc-switch__track[dir=rtl]::after{transform:translateX(100%)}.mdc-switch--selected .mdc-switch__track::before{transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.6, 1);transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__track::before,.mdc-switch--selected .mdc-switch__track[dir=rtl]::before{transform:translateX(-100%)}.mdc-switch--selected .mdc-switch__track::after{transition:transform 75ms 0ms cubic-bezier(0, 0, 0.2, 1);transform:translateX(0)}.mdc-switch__handle-track{height:100%;pointer-events:none;position:absolute;top:0;transition:transform 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);left:0;right:auto;transform:translateX(0)}[dir=rtl] .mdc-switch__handle-track,.mdc-switch__handle-track[dir=rtl]{left:auto;right:0}.mdc-switch--selected .mdc-switch__handle-track{transform:translateX(100%)}[dir=rtl] .mdc-switch--selected .mdc-switch__handle-track,.mdc-switch--selected .mdc-switch__handle-track[dir=rtl]{transform:translateX(-100%)}.mdc-switch__handle{display:flex;pointer-events:auto;position:absolute;top:50%;transform:translateY(-50%);left:0;right:auto}[dir=rtl] .mdc-switch__handle,.mdc-switch__handle[dir=rtl]{left:auto;right:0}.mdc-switch__handle::before,.mdc-switch__handle::after{border:1px solid rgba(0,0,0,0);border-radius:inherit;box-sizing:border-box;content:\\\"\\\";width:100%;height:100%;left:0;position:absolute;top:0;transition:background-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1),border-color 75ms 0ms cubic-bezier(0.4, 0, 0.2, 1);z-index:-1}@media screen and (forced-colors: active){.mdc-switch__handle::before,.mdc-switch__handle::after{border-color:currentColor}}.mdc-switch__shadow{border-radius:inherit;bottom:0;left:0;position:absolute;right:0;top:0}.mdc-elevation-overlay{bottom:0;left:0;right:0;top:0}.mdc-switch__ripple{left:50%;position:absolute;top:50%;transform:translate(-50%, -50%);z-index:-1}.mdc-switch:disabled .mdc-switch__ripple{display:none}.mdc-switch__icons{height:100%;position:relative;width:100%;z-index:1}.mdc-switch__icon{bottom:0;left:0;margin:auto;position:absolute;right:0;top:0;opacity:0;transition:opacity 30ms 0ms cubic-bezier(0.4, 0, 1, 1)}.mdc-switch--selected .mdc-switch__icon--on,.mdc-switch--unselected .mdc-switch__icon--off{opacity:1;transition:opacity 45ms 30ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle .mdc-switch--disabled+label{color:var(--mdc-switch-disabled-label-text-color)}.mdc-switch{width:var(--mdc-switch-track-width)}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-selected-handle-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-hover-handle-color)}.mdc-switch.mdc-switch--selected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-selected-focus-handle-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-selected-pressed-handle-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-selected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__handle::after{background:var(--mdc-switch-unselected-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-hover-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:focus:not(:active) .mdc-switch__handle::after{background:var(--mdc-switch-unselected-focus-handle-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__handle::after{background:var(--mdc-switch-unselected-pressed-handle-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__handle::after{background:var(--mdc-switch-disabled-unselected-handle-color)}.mdc-switch .mdc-switch__handle::before{background:var(--mdc-switch-handle-surface-color)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation)}.mdc-switch .mdc-switch__focus-ring-wrapper,.mdc-switch .mdc-switch__handle{height:var(--mdc-switch-handle-height)}.mdc-switch .mdc-switch__handle{border-radius:var(--mdc-switch-handle-shape)}.mdc-switch .mdc-switch__handle{width:var(--mdc-switch-handle-width)}.mdc-switch .mdc-switch__handle-track{width:calc(100% - var(--mdc-switch-handle-width))}.mdc-switch.mdc-switch--selected:enabled .mdc-switch__icon{fill:var(--mdc-switch-selected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-selected-icon-color)}.mdc-switch.mdc-switch--unselected:enabled .mdc-switch__icon{fill:var(--mdc-switch-unselected-icon-color)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icon{fill:var(--mdc-switch-disabled-unselected-icon-color)}.mdc-switch.mdc-switch--selected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-selected-icon-opacity)}.mdc-switch.mdc-switch--unselected:disabled .mdc-switch__icons{opacity:var(--mdc-switch-disabled-unselected-icon-opacity)}.mdc-switch.mdc-switch--selected .mdc-switch__icon{width:var(--mdc-switch-selected-icon-size);height:var(--mdc-switch-selected-icon-size)}.mdc-switch.mdc-switch--unselected .mdc-switch__icon{width:var(--mdc-switch-unselected-icon-size);height:var(--mdc-switch-unselected-icon-size)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-hover-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-focus-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-selected-pressed-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus) .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-hover-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-focus-state-layer-color)}.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:active .mdc-switch__ripple::after{background-color:var(--mdc-switch-unselected-pressed-state-layer-color)}.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-selected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--selected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-selected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--selected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--selected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-selected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus):hover .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:hover:not(:focus).mdc-ripple-surface--hover .mdc-switch__ripple::before{opacity:var(--mdc-switch-unselected-hover-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:focus.mdc-ripple-upgraded--background-focused .mdc-switch__ripple::before,.mdc-switch.mdc-switch--unselected:enabled:focus:not(.mdc-ripple-upgraded):focus .mdc-switch__ripple::before{transition-duration:75ms;opacity:var(--mdc-switch-unselected-focus-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded) .mdc-switch__ripple::after{transition:opacity 150ms linear}.mdc-switch.mdc-switch--unselected:enabled:active:not(.mdc-ripple-upgraded):active .mdc-switch__ripple::after{transition-duration:75ms;opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch.mdc-switch--unselected:enabled:active.mdc-ripple-upgraded{--mdc-ripple-fg-opacity:var(--mdc-switch-unselected-pressed-state-layer-opacity)}.mdc-switch .mdc-switch__ripple{height:var(--mdc-switch-state-layer-size);width:var(--mdc-switch-state-layer-size)}.mdc-switch .mdc-switch__track{height:var(--mdc-switch-track-height)}.mdc-switch:disabled .mdc-switch__track{opacity:var(--mdc-switch-disabled-track-opacity)}.mdc-switch:enabled .mdc-switch__track::after{background:var(--mdc-switch-selected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::after{background:var(--mdc-switch-selected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::after{background:var(--mdc-switch-selected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::after{background:var(--mdc-switch-disabled-selected-track-color)}.mdc-switch:enabled .mdc-switch__track::before{background:var(--mdc-switch-unselected-track-color)}.mdc-switch:enabled:hover:not(:focus):not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-hover-track-color)}.mdc-switch:enabled:focus:not(:active) .mdc-switch__track::before{background:var(--mdc-switch-unselected-focus-track-color)}.mdc-switch:enabled:active .mdc-switch__track::before{background:var(--mdc-switch-unselected-pressed-track-color)}.mdc-switch:disabled .mdc-switch__track::before{background:var(--mdc-switch-disabled-unselected-track-color)}.mdc-switch .mdc-switch__track{border-radius:var(--mdc-switch-track-shape)}.mdc-switch:enabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-handle-elevation-shadow)}.mdc-switch:disabled .mdc-switch__shadow{box-shadow:var(--mdc-switch-disabled-handle-elevation-shadow)}.mat-mdc-slide-toggle{display:inline-block;-webkit-tap-highlight-color:rgba(0,0,0,0);outline:0}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple,.mat-mdc-slide-toggle .mdc-switch__ripple::after{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:50%;pointer-events:none}.mat-mdc-slide-toggle .mat-mdc-slide-toggle-ripple:not(:empty),.mat-mdc-slide-toggle .mdc-switch__ripple::after:not(:empty){transform:translateZ(0)}.mat-mdc-slide-toggle .mdc-switch__ripple::after{content:\\\"\\\";opacity:0}.mat-mdc-slide-toggle .mdc-switch:hover .mdc-switch__ripple::after{opacity:.04;transition:opacity 75ms 0ms cubic-bezier(0, 0, 0.2, 1)}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mdc-switch .mdc-switch__ripple::after{opacity:.12}.mat-mdc-slide-toggle.mat-mdc-slide-toggle-focused .mat-mdc-focus-indicator::before{content:\\\"\\\"}.mat-mdc-slide-toggle .mat-ripple-element{opacity:.12}.mat-mdc-slide-toggle .mat-mdc-focus-indicator::before{border-radius:50%}.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle-track,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-elevation-overlay,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__icon,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__handle::after,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::before,.mat-mdc-slide-toggle._mat-animation-noopable .mdc-switch__track::after{transition:none}.mat-mdc-slide-toggle .mdc-switch:enabled+.mdc-label{cursor:pointer}.mdc-switch__handle{transition:width 75ms cubic-bezier(0.4, 0, 0.2, 1),height 75ms cubic-bezier(0.4, 0, 0.2, 1),margin 75ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-switch--selected .mdc-switch__track::before{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mdc-switch--selected .mdc-switch__track::after{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::before{opacity:var(--mat-switch-visible-track-opacity);transition:var(--mat-switch-visible-track-transition)}.mdc-switch--unselected .mdc-switch__track::after{opacity:var(--mat-switch-hidden-track-opacity);transition:var(--mat-switch-hidden-track-transition)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{width:var(--mat-switch-unselected-handle-size);height:var(--mat-switch-unselected-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{width:var(--mat-switch-selected-handle-size);height:var(--mat-switch-selected-handle-size)}.mat-mdc-slide-toggle .mdc-switch__handle:has(.mdc-switch__icons){width:var(--mat-switch-with-icon-handle-size);height:var(--mat-switch-with-icon-handle-size)}.mat-mdc-slide-toggle:active .mdc-switch:not(.mdc-switch--disabled) .mdc-switch__handle{width:var(--mat-switch-pressed-handle-size);height:var(--mat-switch-pressed-handle-size)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle{margin:var(--mat-switch-selected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--selected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-selected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle{margin:var(--mat-switch-unselected-handle-horizontal-margin)}.mat-mdc-slide-toggle .mdc-switch--unselected .mdc-switch__handle:has(.mdc-switch__icons){margin:var(--mat-switch-unselected-with-icon-handle-horizontal-margin)}.mat-mdc-slide-toggle:active .mdc-switch--selected:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-selected-pressed-handle-horizontal-margin)}.mat-mdc-slide-toggle:active .mdc-switch--unselected:not(.mdc-switch--disabled) .mdc-switch__handle{margin:var(--mat-switch-unselected-pressed-handle-horizontal-margin)}.mdc-switch__track::after,.mdc-switch__track::before{border-width:var(--mat-switch-track-outline-width);border-color:var(--mat-switch-track-outline-color)}.mdc-switch--selected .mdc-switch__track::after,.mdc-switch--selected .mdc-switch__track::before{border-width:var(--mat-switch-selected-track-outline-width)}.mdc-switch--disabled .mdc-switch__track::after,.mdc-switch--disabled .mdc-switch__track::before{border-width:var(--mat-switch-disabled-unselected-track-outline-width);border-color:var(--mat-switch-disabled-unselected-track-outline-color)}.mdc-switch--disabled.mdc-switch--selected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-selected-handle-opacity)}.mdc-switch--disabled.mdc-switch--unselected .mdc-switch__handle::after{opacity:var(--mat-switch-disabled-unselected-handle-opacity)}\"],\n        encapsulation: 2,\n        changeDetection: 0\n      });\n    }\n  }\n  return MatSlideToggle;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n  provide: NG_VALIDATORS,\n  useExisting: /*#__PURE__*/forwardRef(() => MatSlideToggleRequiredValidator),\n  multi: true\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n *\n * @deprecated No longer used, `MatCheckbox` implements required validation directly.\n * @breaking-change 19.0.0\n */\nlet MatSlideToggleRequiredValidator = /*#__PURE__*/(() => {\n  class MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n    static {\n      this.ɵfac = /* @__PURE__ */(() => {\n        let ɵMatSlideToggleRequiredValidator_BaseFactory;\n        return function MatSlideToggleRequiredValidator_Factory(t) {\n          return (ɵMatSlideToggleRequiredValidator_BaseFactory || (ɵMatSlideToggleRequiredValidator_BaseFactory = i0.ɵɵgetInheritedFactory(MatSlideToggleRequiredValidator)))(t || MatSlideToggleRequiredValidator);\n        };\n      })();\n    }\n    static {\n      this.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n        type: MatSlideToggleRequiredValidator,\n        selectors: [[\"mat-slide-toggle\", \"required\", \"\", \"formControlName\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"formControl\", \"\"], [\"mat-slide-toggle\", \"required\", \"\", \"ngModel\", \"\"]],\n        standalone: true,\n        features: [i0.ɵɵProvidersFeature([MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR]), i0.ɵɵInheritDefinitionFeature]\n      });\n    }\n  }\n  return MatSlideToggleRequiredValidator;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * @deprecated No longer used, `MatSlideToggle` implements required validation directly.\n * @breaking-change 19.0.0\n */\nlet _MatSlideToggleRequiredValidatorModule = /*#__PURE__*/(() => {\n  class _MatSlideToggleRequiredValidatorModule {\n    static {\n      this.ɵfac = function _MatSlideToggleRequiredValidatorModule_Factory(t) {\n        return new (t || _MatSlideToggleRequiredValidatorModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: _MatSlideToggleRequiredValidatorModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({});\n    }\n  }\n  return _MatSlideToggleRequiredValidatorModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MatSlideToggleModule = /*#__PURE__*/(() => {\n  class MatSlideToggleModule {\n    static {\n      this.ɵfac = function MatSlideToggleModule_Factory(t) {\n        return new (t || MatSlideToggleModule)();\n      };\n    }\n    static {\n      this.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n        type: MatSlideToggleModule\n      });\n    }\n    static {\n      this.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n        imports: [MatSlideToggle, MatCommonModule, MatCommonModule]\n      });\n    }\n  }\n  return MatSlideToggleModule;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n","import {\r\n  Component,\r\n  EventEmitter,\r\n  Input,\r\n  OnInit,\r\n  Output,\r\n  signal,\r\n  WritableSignal,\r\n} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-message-add',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './message-add.component.html',\r\n  styleUrl: './message-add.component.css',\r\n})\r\nexport class MessageAddComponent implements OnInit{\r\n  public title: WritableSignal<string> = signal('');\r\n  @Input() set inputTitle(title: string) {\r\n    this.title.set(title);\r\n  }\r\n\r\n  public description: WritableSignal<string> = signal('');\r\n  @Input() set inputDescription(description:string){\r\n    this.description.set(description);\r\n  }\r\n\r\n  @Output() showMessage:EventEmitter<boolean> = new EventEmitter<boolean>();\r\n\r\n  ngOnInit(): void {\r\n      this.onShowMessage();\r\n  }\r\n\r\n  onShowMessage(){\r\n    setTimeout(() => this.showMessage.emit(false), 4000)\r\n  }\r\n}\r\n","@if(showMessage){\r\n<dialog class=\"message__container\">\r\n    <div class=\"message__content\">\r\n        <h4 class=\"message__text\">\r\n            <span class=\"message__title\">{{title()}}</span>\r\n            @if(description()){\r\n            {{description()}}\r\n            }\r\n        </h4>\r\n        <span class=\"progress-bar\"></span>\r\n    </div>\r\n</dialog>\r\n}","import { Component,  OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { ProductService } from '../../services/product.service';\r\nimport { IPorduct } from '../../models/IPoduct.interface';\r\nimport { FreeShippingComponent } from '../../components/free-shipping/free-shipping.component';\r\n\r\nimport {\r\n  FontAwesomeModule,\r\n  FaIconLibrary,\r\n} from '@fortawesome/angular-fontawesome';\r\nimport {\r\n  faHeart as fasHeart,\r\n  faCartShopping as fasCart,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { faHeart as farHeart } from '@fortawesome/free-regular-svg-icons';\r\n\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { ProductCartService } from '../../services/product-cart.service';\r\nimport { ButtonActionComponent } from '../../components/button-action/button-action.component';\r\nimport { ProductQuantityComponent } from '../../components/product-quantity/product-quantity.component';\r\nimport { QuantityCartService } from '../../services/quantity-cart.service';\r\nimport { MessageAddComponent } from '../../components/message-add/message-add.component';\r\n\r\n@Component({\r\n  selector: 'app-product',\r\n  standalone: true,\r\n  imports: [\r\n    FreeShippingComponent,\r\n    ButtonActionComponent,\r\n    FontAwesomeModule,\r\n    CommonModule,\r\n    MatSlideToggleModule,\r\n    ProductQuantityComponent,\r\n    MessageAddComponent\r\n  ],\r\n  templateUrl: './product.component.html',\r\n  styleUrls: ['./product.component.css', './product.responsive.component.css'],\r\n})\r\nexport class ProductComponent implements OnInit {\r\n  public produto!: IPorduct | undefined;\r\n  id: string | null = null;\r\n  amount: number = 1;\r\n  isFavorite: boolean = false;\r\n  productForm!: FormGroup;\r\n  showMessage: boolean = false;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private produtoService: ProductService,\r\n    private faIcons: FaIconLibrary,\r\n    private fb: FormBuilder,\r\n    private productCartService: ProductCartService,\r\n    private quantityCartService: QuantityCartService\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.faIcons.addIcons(farHeart, fasHeart, fasCart);\r\n    this.route.paramMap.subscribe((params) => (this.id = params.get('id')));\r\n    this.getProduto();\r\n\r\n    this.productForm = this.fb.group({\r\n      quantity: 1,\r\n      price: 0,\r\n      favorite: false,\r\n      addCart: false,\r\n    });\r\n  }\r\n\r\n  getProduto() {\r\n      this.produto = this.produtoService.getProduct(Number(this.id));\r\n  }\r\n\r\n  onToggleValue(value:number){\r\n      // console.log(value);\r\n    \r\n  }\r\n\r\n  onToggleFavorite(): void {\r\n    this.isFavorite = !this.isFavorite;\r\n  }\r\n\r\n  addToCart(){\r\n    const product = {\r\n      ...this.produto!,\r\n      quantityProducts: this.productCartService.getQuantityProducts(this.produto!.id)\r\n    }        \r\n    this.productCartService?.setProductCart(product);\r\n    this.updatedProductInCart();\r\n    this.showMessage = true;\r\n  }\r\n  \r\n  onShowMessage(isShowMessage: boolean){\r\n    this.showMessage = isShowMessage;\r\n  }\r\n\r\n  updatedProductInCart(){\r\n    this.quantityCartService.updatedQuantityInCart();\r\n    this.productCartService.updatedPriceTotal();\r\n  }\r\n\r\n}\r\n","@defer {\r\n    <form class=\"product__container\">\r\n        <div class=\"product__content__img\">\r\n            <img class=\"product__image\" [src]=\"produto?.imgProduct\" [alt]=\"produto?.description\">\r\n        </div>\r\n        <div class=\"product__content\">\r\n            <h2 class=\"product__title\">{{produto?.description}}</h2>\r\n            <div class=\"shipping-stock\">\r\n                <app-free-shipping />\r\n                <p class=\"product-stock\">Quantidades restantes: <span class=\"stock-highlight\">{{produto?.quantityInStock}}</span></p>\r\n            </div>\r\n            <div class=\"product__price-amount\">\r\n                <div class=\"price__content\">\r\n                    <span class=\"before-price\">{{produto?.priceBefore | currency:'BRL'}}</span>\r\n                    <h3 class=\"current-price\">{{produto?.price | currency:  'BRL'}}</h3>\r\n                </div>\r\n                <app-product-quantity (quantityOuput)=\"onToggleValue($event)\" [inputShowText]=\"true\" />\r\n            </div>\r\n            <div class=\"product__buy-cart\">\r\n                <div class=\"buy-favorite\">\r\n                    <app-button-action inputBtnActionTitle=\"Comprar\" class=\"app-btn-action\" />\r\n                    <button type=\"button\" (click)=\"onToggleFavorite()\" class=\"btn-favorite\">\r\n                        @if (isFavorite) {\r\n                            <fa-icon class=\"favorite\" [icon]=\"['fas', 'heart']\" [ngStyle]=\"{'color': '#ed1010'}\" />\r\n                        }\r\n                        @else {\r\n                            <fa-icon class=\"favorite\" [icon]=\"['far','heart']\" [ngStyle]=\"{'color': 'var(--secondary-color)'}\"></fa-icon>\r\n                        }\r\n                    </button>\r\n                </div>\r\n                <button type=\"button\" class=\"add-cart\" (click)=\"addToCart()\">\r\n                    <span class=\"cart-title\">Adicionar ao carinho </span>\r\n                    <fa-icon class=\"cart-icon\" [icon]=\"['fas','cart-shopping']\"></fa-icon>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n}\r\n@if(showMessage){\r\n    <app-message-add \r\n        (showMessage)=\"onShowMessage($event)\"\r\n        [inputTitle]=\"produto?.description || ''\" \r\n        inputDescription=\"foi adicionado ao seu carrinho\" \r\n    />\r\n}\r\n\r\n","import { Component, Output, EventEmitter, WritableSignal, signal, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-message-delete',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './message-delete.component.html',\r\n  styleUrl: './message-delete.component.css'\r\n})\r\nexport class MessageDeleteComponent {\r\n\r\n  @Output() isDeleteMessage: EventEmitter<boolean> = new EventEmitter<boolean>();\r\n  @Output() closeMessage: EventEmitter<boolean> = new EventEmitter<boolean>()\r\n  \r\n  public itemTitle:WritableSignal<string> = signal('');\r\n  @Input() set inputItemTitle(title: string){\r\n    this.itemTitle.set(title);\r\n  }\r\n\r\n\r\n  onDeleteMessage(){\r\n    //Butão para deletar o item\r\n    this.isDeleteMessage.emit();\r\n  }\r\n\r\n  onCloseMessage(){\r\n    //botão de fechar    \r\n    this.closeMessage.emit(false)\r\n  }\r\n}\r\n","<dialog class=\"message-delete\">\r\n    <div class=\"message-delete__container\">\r\n        <div class=\"message-delete__content\">\r\n            <p>Deseja Deletar o item:\r\n                <span class=\"message-delete__title\">\r\n                    {{itemTitle()}}\r\n                </span>\r\n            </p>\r\n            <button type=\"button\" class=\"message-delete__btn\" (click)=\"onDeleteMessage()\">Sim</button>\r\n             <button type=\"button\" (click)=\"onCloseMessage()\" class=\"message-delete__close\">X</button>\r\n        </div>\r\n    </div>\r\n</dialog>","import {\r\n  Component,\r\n  Input,\r\n  Output,\r\n  signal,\r\n  EventEmitter,\r\n  WritableSignal,\r\n  OnInit,\r\n} from '@angular/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { faTrashCan } from '@fortawesome/free-solid-svg-icons';\r\nimport { ProductQuantityComponent } from '../product-quantity/product-quantity.component';\r\nimport { IPorduct } from '../../models/IPoduct.interface';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ProductCartService } from '../../services/product-cart.service';\r\nimport { QuantityCartService } from '../../services/quantity-cart.service';\r\nimport { MessageDeleteComponent } from '../message-delete/message-delete.component';\r\nimport { MessageAddComponent } from '../message-add/message-add.component';\r\n\r\n@Component({\r\n  selector: 'app-cart-card',\r\n  standalone: true,\r\n  imports: [\r\n    FontAwesomeModule,\r\n    ProductQuantityComponent,\r\n    CommonModule,\r\n    MessageDeleteComponent,\r\n    MessageAddComponent,\r\n  ],\r\n  templateUrl: './cart-card.component.html',\r\n  styleUrl: './cart-card.component.css',\r\n})\r\nexport class CartCardComponent implements OnInit {\r\n  constructor(\r\n    private quantityCartService: QuantityCartService,\r\n    private productCartService: ProductCartService\r\n  ) {}\r\n\r\n  isOpenDialog: boolean = false;\r\n  isDeleteItem: boolean = false;\r\n\r\n  @Output() onChangeDeleteEmit: EventEmitter<boolean> =\r\n    new EventEmitter<boolean>();\r\n  @Output() quantityProductEmit: EventEmitter<number> =\r\n    new EventEmitter<number>();\r\n\r\n  trashIcon = faTrashCan;\r\n  productVoid = {\r\n    id: 0,\r\n    imgProduct: '',\r\n    description: '',\r\n    quantityInStock: 0,\r\n    price: 0,\r\n    priceBefore: 0,\r\n    category: '',\r\n    isSale: false\r\n  };\r\n\r\n  ngOnInit(): void {\r\n    this.quantityCartService.updatedQuantityInCart();\r\n  }\r\n\r\n  public product: WritableSignal<IPorduct> = signal(this.productVoid);\r\n  @Input() set inputProduct(product: IPorduct) {\r\n    this.product.set(product);\r\n  }\r\n\r\n  onToggleValue(value: number) {\r\n    this.updatedCart();\r\n    this.quantityProductEmit.emit(value);\r\n  }\r\n\r\n  updatedCart() {\r\n    this.quantityCartService.updatedQuantityInCart();\r\n    this.productCartService.updatedPriceTotal();\r\n  }\r\n\r\n  openMessage() {\r\n    this.isOpenDialog = true;   \r\n  }\r\n  \r\n  onToggleDelete(id: number) {\r\n    this.quantityCartService.deleteProductInCart(id);\r\n    this.updatedCart();\r\n    this.isOpenDialog = false;\r\n    this.onChangeDeleteEmit.emit(true);\r\n  }\r\n  onCloseMessage(isClose: boolean) {\r\n    this.isOpenDialog = isClose;\r\n  }\r\n\r\n}\r\n","<div class=\"cart-card__container\">\r\n    <div class=\"cart-card__itens cart-card__img-title\">\r\n        <img [src]=\"product()['imgProduct']\" alt=\"remedio\" class=\"cart-card__product-img\">\r\n        <p class=\"cart-card__product-title\">{{product()['description']}}\r\n        </p>\r\n    </div>\r\n    <div class=\"cart-card__itens\">\r\n        <p class=\"cart-card__price\"> {{product()['price'] | currency: 'BRL'}}</p>\r\n    </div>\r\n    <div class=\"cart-card__itens\">\r\n        <app-product-quantity (quantityOuput)=\"onToggleValue($event)\" [inputId]=\"product()['id']\"/>\r\n    </div>\r\n    <div>\r\n        <button \r\n            id=\"BtnDelete\" \r\n            type=\"button\" \r\n            class=\"card_product-btn-delete\"\r\n            (click)=\"openMessage()\"\r\n        >\r\n            <fa-icon [icon]=\"trashIcon\" class=\"cart-card__icon\"></fa-icon>\r\n            <label class=\"btn-text\" for=\"BtnDelete\">Excluir</label>\r\n        </button>\r\n    </div>\r\n</div>\r\n<i class=\"line\"></i>\r\n\r\n@if (isOpenDialog) {\r\n    <app-message-delete \r\n        [inputItemTitle]=\"product()['description']\" \r\n        (closeMessage)=\"onCloseMessage($event)\"\r\n        (isDeleteMessage)=\"onToggleDelete(product()['id'])\" \r\n    />\r\n}\r\n","import { Component, OnInit, WritableSignal, signal } from '@angular/core';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport {\r\n  faBasketShopping,\r\n  faSackDollar,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { ButtonActionComponent } from '../../components/button-action/button-action.component';\r\nimport { CartCardComponent } from '../../components/cart-card/cart-card.component';\r\nimport { ProductCartService } from '../../services/product-cart.service';\r\nimport { IPorduct } from '../../models/IPoduct.interface';\r\nimport { QuantityCartService } from '../../services/quantity-cart.service';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-cart',\r\n  standalone: true,\r\n  imports: [FontAwesomeModule, ButtonActionComponent, CartCardComponent, CommonModule],\r\n  templateUrl: './cart.component.html',\r\n  styleUrl: './cart.component.css',\r\n})\r\nexport class CartComponent implements OnInit {\r\n  products: IPorduct[] = [];\r\n  quantity: WritableSignal<number> = signal(1);\r\n  priceTotal: WritableSignal<number> = signal(0);\r\n\r\n  icons = {\r\n    basketShooping: faBasketShopping,\r\n    dollar: faSackDollar,\r\n  };\r\n\r\n  constructor(\r\n    private productCartService: ProductCartService,\r\n    private quantityCartService :QuantityCartService\r\n    ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.getCart();\r\n    this.priceTotal.set(this.productCartService.getPriceTotal());\r\n    this.quantity.set(this.quantityCartService.getTotalInCart());\r\n\r\n  }\r\n  \r\n  getCart(){\r\n    this.products = this.productCartService.getCart(); \r\n    this.updatedPriceTotal();\r\n    this.updatedQuantityTotal();\r\n  }\r\n  \r\n  getQuantity(value: number, id: number) {\r\n    this.productCartService.setQuantityProductsById(id, value);\r\n    this.quantityCartService.updatedQuantityInCart();\r\n    this.quantity.update((oldValue:number) => oldValue = this.quantityCartService.getTotalInCart());\r\n    this.updatedPriceTotal();\r\n  }\r\n  \r\n  updatedPriceTotal(){\r\n    this.priceTotal.update(oldValue => oldValue = this.productCartService.getPriceTotal())\r\n    this.productCartService.updatedPriceTotal();    \r\n  }\r\n\r\n  updatedQuantityTotal(){\r\n    this.quantity.update((oldValue:number) => oldValue = this.quantityCartService.getTotalInCart())\r\n  }\r\n  \r\n\r\n}\r\n","<div class=\"cart__container\">\r\n    <div class=\"cart__products-finally\">\r\n        <div class=\"cart__title-content\">\r\n            <h2 class=\"cart__title\">Cesta de compras</h2>\r\n        </div>\r\n        <div class=\"cart__buy-product\">\r\n            <app-button-action inputBtnActionTitle=\"Finalizar compra\" class=\"app-btn-action buy-item\" />\r\n        </div>\r\n    </div>\r\n    <ul class=\"cart__content\">\r\n        <li class=\"cart__content-header\">\r\n            <h4 class=\"description__row-itens\">\r\n                Produto\r\n            </h4>\r\n        </li>\r\n        <li class=\"cart__content-header\">\r\n            <h4 class=\"cart__content-itens\">\r\n                Preço Unit.\r\n            </h4>\r\n        </li>\r\n        <li class=\"cart__content-header\">\r\n            <h4 class=\"cart__content-itens\">\r\n                Quantidade\r\n            </h4>\r\n        </li>\r\n        <li class=\"cart__content-header\">\r\n            <h4 class=\"cart__content-itens\">\r\n                Ação\r\n            </h4>\r\n        </li>\r\n    </ul>\r\n    <ul class=\"cart__product-container\">\r\n        @for (product of products; track $index) {\r\n        <li>\r\n            <app-cart-card \r\n                (quantityProductEmit)=\"getQuantity($event, product['id'])\"\r\n                (onChangeDeleteEmit)=\"getCart()\"\r\n                [inputProduct]=\"product\" \r\n            />\r\n        </li>\r\n        }@empty {\r\n        <h2>Nenhum produto Adicionado ao carrinho</h2>\r\n        }\r\n    </ul>\r\n    <div class=\"basket-shooping-icon\">\r\n        <span>Quantidade de itens: </span>\r\n        <div class=\"icon_quantity\">\r\n            <span class=\"bag-quantity\">{{quantity()}}</span>\r\n            <fa-icon [icon]=\"icons.basketShooping\" class=\"bag-icon\" />\r\n        </div>\r\n    </div>\r\n\r\n    <div class=\"cart__total-buy\">\r\n        <div class=\"cart__price-total\">\r\n            <p>\r\n                Total:\r\n                <!-- <fa-icon [icon]=\"icons.dollar\" /> -->\r\n            </p>\r\n            <p>{{priceTotal() | currency: 'BRL'}}</p>\r\n        </div>\r\n        <app-button-action inputBtnActionTitle=\"Finalizar Compra\" class=\"btn-action-cart\" />\r\n    </div>\r\n</div>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-contact',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './contact.component.html',\r\n  styleUrl: './contact.component.css'\r\n})\r\nexport class ContactComponent {\r\n\r\n}\r\n","<section class=\"contact__container\">\r\n    <h1 class=\"contact__title\">Entre em contato</h1>\r\n    <div class=\"contact__content\">\r\n        <form class=\"contact__form\">\r\n            <div class=\"form-group\">\r\n                <label class=\"form-text\" for=\"name\">\r\n                    <input class=\"form-input\" type=\"text\" id=\"name\">\r\n                    <span class=\"text-label\">Nome:</span>\r\n                </label>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"form-text\" for=\"topic\">\r\n                    <input class=\"form-input\" type=\"text\" id=\"topic\">\r\n                    <span class=\"text-label\">Assunto:</span>\r\n                </label>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"form-text\" for=\"phone\">\r\n                    <input class=\"form-input\" type=\"tel\" id=\"phone\">\r\n                    <span class=\"text-label\">Telefone:</span>\r\n                </label>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"form-text\" for=\"email\">\r\n                    <input class=\"form-input\" type=\"email\" id=\"email\">\r\n                    <span class=\"text-label\">E-mail:</span>\r\n                </label>\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <label class=\"form-text\" for=\"message\"><span class=\"text-label\">Mensagem:</span>\r\n                    <textarea class=\"form-message\" maxlength=\"300\" id=\"message\" placeholder=\"DIgite sua mensagem aqui...\"></textarea>\r\n                </label>\r\n            </div>\r\n        </form>\r\n        <address class=\"contact__address\">\r\n            <iframe class=\"address__map\"\r\n                src=\"https://www.google.com/maps/embed?pb=!1m17!1m12!1m3!1d984.4075041859079!2d-36.613841730387016!3d-9.277312675861817!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m2!1m1!2zOcKwMTYnMzguMyJTIDM2wrAzNic0Ny41Ilc!5e0!3m2!1spt-BR!2sbr!4v1710938083597!5m2!1spt-BR!2sbr\"\r\n                width=\"600\" height=\"450\" style=\"border:0;\" allowfullscreen=\"\" loading=\"lazy\"\r\n                referrerpolicy=\"no-referrer-when-downgrade\"></iframe>\r\n            <p class=\"address__description\">R. Antônio Honório, 1, Rainha Isabel,  Bom Conselho - PE, 55334-000</p>\r\n        </address>\r\n    </div>\r\n</section>","import { Routes } from '@angular/router';\r\nimport { HomeComponent } from './pages/home/home.component';\r\nimport { NotFoundComponent } from './pages/not-found/not-found.component';\r\nimport { ProductComponent } from './pages/product/product.component';\r\nimport { CartComponent } from './pages/cart/cart.component';\r\nimport { ContactComponent } from './pages/contact/contact.component';\r\n\r\nexport const routes: Routes = [\r\n    {\r\n        path: '',   redirectTo: 'product', pathMatch: 'full', \r\n    },\r\n    {\r\n        path: 'cart', component: CartComponent, title: 'Carrinho de compras'\r\n    },\r\n    {\r\n        path: 'product', component: HomeComponent, title: \"Farmacia do Devedor - Home\"\r\n    },\r\n    {\r\n        path: `product/:id`, component: ProductComponent, title: 'Produtos '\r\n    },\r\n    {\r\n        path: 'contact', component: ContactComponent, title: \"Nosso Contatos\"\r\n    },\r\n    {\r\n        path: '**', component: NotFoundComponent, title: \"Página não encontrada\"\r\n    }\r\n];\r\n","/**\n * @license Angular v17.2.2\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { inject, ɵChangeDetectionScheduler, ɵRuntimeError, Injectable, ɵperformanceMarkFeature, makeEnvironmentProviders, RendererFactory2, NgZone, ANIMATION_MODULE_TYPE } from '@angular/core';\nimport { ɵDomRendererFactory2 } from '@angular/platform-browser';\nconst ANIMATION_PREFIX = '@';\nlet AsyncAnimationRendererFactory = /*#__PURE__*/(() => {\n  class AsyncAnimationRendererFactory {\n    /**\n     *\n     * @param moduleImpl allows to provide a mock implmentation (or will load the animation module)\n     */\n    constructor(doc, delegate, zone, animationType, moduleImpl) {\n      this.doc = doc;\n      this.delegate = delegate;\n      this.zone = zone;\n      this.animationType = animationType;\n      this.moduleImpl = moduleImpl;\n      this._rendererFactoryPromise = null;\n      this.scheduler = inject(ɵChangeDetectionScheduler, {\n        optional: true\n      });\n    }\n    /** @nodoc */\n    ngOnDestroy() {\n      // When the root view is removed, the renderer defers the actual work to the\n      // `TransitionAnimationEngine` to do this, and the `TransitionAnimationEngine` doesn't actually\n      // remove the DOM node, but just calls `markElementAsRemoved()`. The actual DOM node is not\n      // removed until `TransitionAnimationEngine` \"flushes\".\n      // Note: we already flush on destroy within the `InjectableAnimationEngine`. The injectable\n      // engine is not provided when async animations are used.\n      this._engine?.flush();\n    }\n    /**\n     * @internal\n     */\n    loadImpl() {\n      const moduleImpl = this.moduleImpl ?? import('@angular/animations/browser');\n      return moduleImpl.catch(e => {\n        throw new ɵRuntimeError(5300 /* RuntimeErrorCode.ANIMATION_RENDERER_ASYNC_LOADING_FAILURE */, (typeof ngDevMode === 'undefined' || ngDevMode) && 'Async loading for animations package was ' + 'enabled, but loading failed. Angular falls back to using regular rendering. ' + 'No animations will be displayed and their styles won\\'t be applied.');\n      }).then(({\n        ɵcreateEngine,\n        ɵAnimationRendererFactory\n      }) => {\n        // We can't create the renderer yet because we might need the hostElement and the type\n        // Both are provided in createRenderer().\n        this._engine = ɵcreateEngine(this.animationType, this.doc, this.scheduler);\n        const rendererFactory = new ɵAnimationRendererFactory(this.delegate, this._engine, this.zone);\n        this.delegate = rendererFactory;\n        return rendererFactory;\n      });\n    }\n    /**\n     * This method is delegating the renderer creation to the factories.\n     * It uses default factory while the animation factory isn't loaded\n     * and will rely on the animation factory once it is loaded.\n     *\n     * Calling this method will trigger as side effect the loading of the animation module\n     * if the renderered component uses animations.\n     */\n    createRenderer(hostElement, rendererType) {\n      const renderer = this.delegate.createRenderer(hostElement, rendererType);\n      if (renderer.ɵtype === 0 /* AnimationRendererType.Regular */) {\n        // The factory is already loaded, this is an animation renderer\n        return renderer;\n      }\n      // We need to prevent the DomRenderer to throw an error because of synthetic properties\n      if (typeof renderer.throwOnSyntheticProps === 'boolean') {\n        renderer.throwOnSyntheticProps = false;\n      }\n      // Using a dynamic renderer to switch the renderer implementation once the module is loaded.\n      const dynamicRenderer = new DynamicDelegationRenderer(renderer);\n      // Kick off the module loading if the component uses animations but the module hasn't been\n      // loaded yet.\n      if (rendererType?.data?.['animation'] && !this._rendererFactoryPromise) {\n        this._rendererFactoryPromise = this.loadImpl();\n      }\n      this._rendererFactoryPromise?.then(animationRendererFactory => {\n        const animationRenderer = animationRendererFactory.createRenderer(hostElement, rendererType);\n        dynamicRenderer.use(animationRenderer);\n      }).catch(e => {\n        // Permanently use regular renderer when loading fails.\n        dynamicRenderer.use(renderer);\n      });\n      return dynamicRenderer;\n    }\n    begin() {\n      this.delegate.begin?.();\n    }\n    end() {\n      this.delegate.end?.();\n    }\n    whenRenderingDone() {\n      return this.delegate.whenRenderingDone?.() ?? Promise.resolve();\n    }\n    static {\n      this.ɵfac = function AsyncAnimationRendererFactory_Factory(t) {\n        i0.ɵɵinvalidFactory();\n      };\n    }\n    static {\n      this.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n        token: AsyncAnimationRendererFactory,\n        factory: AsyncAnimationRendererFactory.ɵfac\n      });\n    }\n  }\n  return AsyncAnimationRendererFactory;\n})();\n/*#__PURE__*/(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * The class allows to dynamicly switch between different renderer implementations\n * by changing the delegate renderer.\n */\nclass DynamicDelegationRenderer {\n  constructor(delegate) {\n    this.delegate = delegate;\n    // List of callbacks that need to be replayed on the animation renderer once its loaded\n    this.replay = [];\n    this.ɵtype = 1 /* AnimationRendererType.Delegated */;\n  }\n  use(impl) {\n    this.delegate = impl;\n    if (this.replay !== null) {\n      // Replay queued actions using the animation renderer to apply\n      // all events and properties collected while loading was in progress.\n      for (const fn of this.replay) {\n        fn(impl);\n      }\n      // Set to `null` to indicate that the queue was processed\n      // and we no longer need to collect events and properties.\n      this.replay = null;\n    }\n  }\n  get data() {\n    return this.delegate.data;\n  }\n  destroy() {\n    this.replay = null;\n    this.delegate.destroy();\n  }\n  createElement(name, namespace) {\n    return this.delegate.createElement(name, namespace);\n  }\n  createComment(value) {\n    return this.delegate.createComment(value);\n  }\n  createText(value) {\n    return this.delegate.createText(value);\n  }\n  get destroyNode() {\n    return this.delegate.destroyNode;\n  }\n  appendChild(parent, newChild) {\n    this.delegate.appendChild(parent, newChild);\n  }\n  insertBefore(parent, newChild, refChild, isMove) {\n    this.delegate.insertBefore(parent, newChild, refChild, isMove);\n  }\n  removeChild(parent, oldChild, isHostElement) {\n    this.delegate.removeChild(parent, oldChild, isHostElement);\n  }\n  selectRootElement(selectorOrNode, preserveContent) {\n    return this.delegate.selectRootElement(selectorOrNode, preserveContent);\n  }\n  parentNode(node) {\n    return this.delegate.parentNode(node);\n  }\n  nextSibling(node) {\n    return this.delegate.nextSibling(node);\n  }\n  setAttribute(el, name, value, namespace) {\n    this.delegate.setAttribute(el, name, value, namespace);\n  }\n  removeAttribute(el, name, namespace) {\n    this.delegate.removeAttribute(el, name, namespace);\n  }\n  addClass(el, name) {\n    this.delegate.addClass(el, name);\n  }\n  removeClass(el, name) {\n    this.delegate.removeClass(el, name);\n  }\n  setStyle(el, style, value, flags) {\n    this.delegate.setStyle(el, style, value, flags);\n  }\n  removeStyle(el, style, flags) {\n    this.delegate.removeStyle(el, style, flags);\n  }\n  setProperty(el, name, value) {\n    // We need to keep track of animation properties set on default renderer\n    // So we can also set them also on the animation renderer\n    if (this.shouldReplay(name)) {\n      this.replay.push(renderer => renderer.setProperty(el, name, value));\n    }\n    this.delegate.setProperty(el, name, value);\n  }\n  setValue(node, value) {\n    this.delegate.setValue(node, value);\n  }\n  listen(target, eventName, callback) {\n    // We need to keep track of animation events registred by the default renderer\n    // So we can also register them against the animation renderer\n    if (this.shouldReplay(eventName)) {\n      this.replay.push(renderer => renderer.listen(target, eventName, callback));\n    }\n    return this.delegate.listen(target, eventName, callback);\n  }\n  shouldReplay(propOrEventName) {\n    //`null` indicates that we no longer need to collect events and properties\n    return this.replay !== null && propOrEventName.startsWith(ANIMATION_PREFIX);\n  }\n}\n\n/**\n * Returns the set of [dependency-injection providers](guide/glossary#provider)\n * to enable animations in an application. See [animations guide](guide/animations)\n * to learn more about animations in Angular.\n *\n * When you use this function instead of the eager `provideAnimations()`, animations won't be\n * renderered until the renderer is loaded.\n *\n * @usageNotes\n *\n * The function is useful when you want to enable animations in an application\n * bootstrapped using the `bootstrapApplication` function. In this scenario there\n * is no need to import the `BrowserAnimationsModule` NgModule at all, just add\n * providers returned by this function to the `providers` list as show below.\n *\n * ```typescript\n * bootstrapApplication(RootComponent, {\n *   providers: [\n *     provideAnimationsAsync()\n *   ]\n * });\n * ```\n *\n * @param type pass `'noop'` as argument to disable animations.\n *\n * @publicApi\n * @developerPreview\n */\nfunction provideAnimationsAsync(type = 'animations') {\n  ɵperformanceMarkFeature('NgAsyncAnimations');\n  return makeEnvironmentProviders([{\n    provide: RendererFactory2,\n    useFactory: (doc, renderer, zone) => {\n      return new AsyncAnimationRendererFactory(doc, renderer, zone, type);\n    },\n    deps: [DOCUMENT, ɵDomRendererFactory2, NgZone]\n  }, {\n    provide: ANIMATION_MODULE_TYPE,\n    useValue: type === 'noop' ? 'NoopAnimations' : 'BrowserAnimations'\n  }]);\n}\n\n/**\n * @module\n * @description\n * Entry point for all animation APIs of the animation browser package.\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\n\n// This file is not used to build this module. It is only used during editing\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { provideAnimationsAsync, AsyncAnimationRendererFactory as ɵAsyncAnimationRendererFactory };\n","import { ApplicationConfig } from '@angular/core';\r\nimport { provideRouter } from '@angular/router';\r\nimport { provideAnimations } from '@angular/platform-browser/animations'\r\n\r\nimport { routes } from './app.routes';\r\nimport { provideHttpClient, withFetch } from '@angular/common/http';\r\nimport { provideAnimationsAsync } from '@angular/platform-browser/animations/async';\r\n\r\nexport const appConfig: ApplicationConfig = {\r\n  providers: [\r\n    provideRouter(routes), provideAnimations(),\r\n    provideHttpClient(withFetch()), provideAnimationsAsync()\r\n  ]\r\n};\r\n","class ObjectUtils {\n  static isArray(value, empty = true) {\n    return Array.isArray(value) && (empty || value.length !== 0);\n  }\n  static isObject(value, empty = true) {\n    return value instanceof Object && value.constructor === Object && (empty || Object.keys(value).length !== 0);\n  }\n  static equals(obj1, obj2, field) {\n    if (field) return this.resolveFieldData(obj1, field) === this.resolveFieldData(obj2, field);else return this.equalsByValue(obj1, obj2);\n  }\n  static equalsByValue(obj1, obj2) {\n    if (obj1 === obj2) return true;\n    if (obj1 && obj2 && typeof obj1 == 'object' && typeof obj2 == 'object') {\n      var arrA = Array.isArray(obj1),\n        arrB = Array.isArray(obj2),\n        i,\n        length,\n        key;\n      if (arrA && arrB) {\n        length = obj1.length;\n        if (length != obj2.length) return false;\n        for (i = length; i-- !== 0;) if (!this.equalsByValue(obj1[i], obj2[i])) return false;\n        return true;\n      }\n      if (arrA != arrB) return false;\n      var dateA = this.isDate(obj1),\n        dateB = this.isDate(obj2);\n      if (dateA != dateB) return false;\n      if (dateA && dateB) return obj1.getTime() == obj2.getTime();\n      var regexpA = obj1 instanceof RegExp,\n        regexpB = obj2 instanceof RegExp;\n      if (regexpA != regexpB) return false;\n      if (regexpA && regexpB) return obj1.toString() == obj2.toString();\n      var keys = Object.keys(obj1);\n      length = keys.length;\n      if (length !== Object.keys(obj2).length) return false;\n      for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(obj2, keys[i])) return false;\n      for (i = length; i-- !== 0;) {\n        key = keys[i];\n        if (!this.equalsByValue(obj1[key], obj2[key])) return false;\n      }\n      return true;\n    }\n    return obj1 !== obj1 && obj2 !== obj2;\n  }\n  static resolveFieldData(data, field) {\n    if (data && field) {\n      if (this.isFunction(field)) {\n        return field(data);\n      } else if (field.indexOf('.') == -1) {\n        return data[field];\n      } else {\n        let fields = field.split('.');\n        let value = data;\n        for (let i = 0, len = fields.length; i < len; ++i) {\n          if (value == null) {\n            return null;\n          }\n          value = value[fields[i]];\n        }\n        return value;\n      }\n    } else {\n      return null;\n    }\n  }\n  static isFunction(obj) {\n    return !!(obj && obj.constructor && obj.call && obj.apply);\n  }\n  static reorderArray(value, from, to) {\n    let target;\n    if (value && from !== to) {\n      if (to >= value.length) {\n        to %= value.length;\n        from %= value.length;\n      }\n      value.splice(to, 0, value.splice(from, 1)[0]);\n    }\n  }\n  static insertIntoOrderedArray(item, index, arr, sourceArr) {\n    if (arr.length > 0) {\n      let injected = false;\n      for (let i = 0; i < arr.length; i++) {\n        let currentItemIndex = this.findIndexInList(arr[i], sourceArr);\n        if (currentItemIndex > index) {\n          arr.splice(i, 0, item);\n          injected = true;\n          break;\n        }\n      }\n      if (!injected) {\n        arr.push(item);\n      }\n    } else {\n      arr.push(item);\n    }\n  }\n  static findIndexInList(item, list) {\n    let index = -1;\n    if (list) {\n      for (let i = 0; i < list.length; i++) {\n        if (list[i] == item) {\n          index = i;\n          break;\n        }\n      }\n    }\n    return index;\n  }\n  static contains(value, list) {\n    if (value != null && list && list.length) {\n      for (let val of list) {\n        if (this.equals(value, val)) return true;\n      }\n    }\n    return false;\n  }\n  static removeAccents(str) {\n    if (str) {\n      str = str.normalize('NFKD').replace(/\\p{Diacritic}/gu, '');\n    }\n    return str;\n  }\n  static isDate(input) {\n    return Object.prototype.toString.call(input) === '[object Date]';\n  }\n  static isEmpty(value) {\n    return value === null || value === undefined || value === '' || Array.isArray(value) && value.length === 0 || !this.isDate(value) && typeof value === 'object' && Object.keys(value).length === 0;\n  }\n  static isNotEmpty(value) {\n    return !this.isEmpty(value);\n  }\n  static compare(value1, value2, locale, order = 1) {\n    let result = -1;\n    const emptyValue1 = this.isEmpty(value1);\n    const emptyValue2 = this.isEmpty(value2);\n    if (emptyValue1 && emptyValue2) result = 0;else if (emptyValue1) result = order;else if (emptyValue2) result = -order;else if (typeof value1 === 'string' && typeof value2 === 'string') result = value1.localeCompare(value2, locale, {\n      numeric: true\n    });else result = value1 < value2 ? -1 : value1 > value2 ? 1 : 0;\n    return result;\n  }\n  static sort(value1, value2, order = 1, locale, nullSortOrder = 1) {\n    const result = ObjectUtils.compare(value1, value2, locale, order);\n    let finalSortOrder = order;\n    // nullSortOrder == 1 means Excel like sort nulls at bottom\n    if (ObjectUtils.isEmpty(value1) || ObjectUtils.isEmpty(value2)) {\n      finalSortOrder = nullSortOrder === 1 ? order : nullSortOrder;\n    }\n    return finalSortOrder * result;\n  }\n  static merge(obj1, obj2) {\n    if (obj1 == undefined && obj2 == undefined) {\n      return undefined;\n    } else if ((obj1 == undefined || typeof obj1 === 'object') && (obj2 == undefined || typeof obj2 === 'object')) {\n      return {\n        ...(obj1 || {}),\n        ...(obj2 || {})\n      };\n    } else if ((obj1 == undefined || typeof obj1 === 'string') && (obj2 == undefined || typeof obj2 === 'string')) {\n      return [obj1 || '', obj2 || ''].join(' ');\n    }\n    return obj2 || obj1;\n  }\n  static isPrintableCharacter(char = '') {\n    return this.isNotEmpty(char) && char.length === 1 && char.match(/\\S| /);\n  }\n  static getItemValue(obj, ...params) {\n    return this.isFunction(obj) ? obj(...params) : obj;\n  }\n  static findLastIndex(arr, callback) {\n    let index = -1;\n    if (this.isNotEmpty(arr)) {\n      try {\n        index = arr.findLastIndex(callback);\n      } catch {\n        index = arr.lastIndexOf([...arr].reverse().find(callback));\n      }\n    }\n    return index;\n  }\n  static findLast(arr, callback) {\n    let item;\n    if (this.isNotEmpty(arr)) {\n      try {\n        item = arr.findLast(callback);\n      } catch {\n        item = [...arr].reverse().find(callback);\n      }\n    }\n    return item;\n  }\n  static deepEquals(a, b) {\n    if (a === b) return true;\n    if (a && b && typeof a == 'object' && typeof b == 'object') {\n      var arrA = Array.isArray(a),\n        arrB = Array.isArray(b),\n        i,\n        length,\n        key;\n      if (arrA && arrB) {\n        length = a.length;\n        if (length != b.length) return false;\n        for (i = length; i-- !== 0;) if (!this.deepEquals(a[i], b[i])) return false;\n        return true;\n      }\n      if (arrA != arrB) return false;\n      var dateA = a instanceof Date,\n        dateB = b instanceof Date;\n      if (dateA != dateB) return false;\n      if (dateA && dateB) return a.getTime() == b.getTime();\n      var regexpA = a instanceof RegExp,\n        regexpB = b instanceof RegExp;\n      if (regexpA != regexpB) return false;\n      if (regexpA && regexpB) return a.toString() == b.toString();\n      var keys = Object.keys(a);\n      length = keys.length;\n      if (length !== Object.keys(b).length) return false;\n      for (i = length; i-- !== 0;) if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n      for (i = length; i-- !== 0;) {\n        key = keys[i];\n        if (!this.deepEquals(a[key], b[key])) return false;\n      }\n      return true;\n    }\n    return a !== a && b !== b;\n  }\n}\nvar lastId = 0;\nfunction UniqueComponentId(prefix = 'pn_id_') {\n  lastId++;\n  return `${prefix}${lastId}`;\n}\nfunction ZIndexUtils() {\n  let zIndexes = [];\n  const generateZIndex = (key, baseZIndex) => {\n    let lastZIndex = zIndexes.length > 0 ? zIndexes[zIndexes.length - 1] : {\n      key,\n      value: baseZIndex\n    };\n    let newZIndex = lastZIndex.value + (lastZIndex.key === key ? 0 : baseZIndex) + 2;\n    zIndexes.push({\n      key,\n      value: newZIndex\n    });\n    return newZIndex;\n  };\n  const revertZIndex = zIndex => {\n    zIndexes = zIndexes.filter(obj => obj.value !== zIndex);\n  };\n  const getCurrentZIndex = () => {\n    return zIndexes.length > 0 ? zIndexes[zIndexes.length - 1].value : 0;\n  };\n  const getZIndex = el => {\n    return el ? parseInt(el.style.zIndex, 10) || 0 : 0;\n  };\n  return {\n    get: getZIndex,\n    set: (key, el, baseZIndex) => {\n      if (el) {\n        el.style.zIndex = String(generateZIndex(key, baseZIndex));\n      }\n    },\n    clear: el => {\n      if (el) {\n        revertZIndex(getZIndex(el));\n        el.style.zIndex = '';\n      }\n    },\n    getCurrent: () => getCurrentZIndex()\n  };\n}\nvar zindexutils = ZIndexUtils();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ObjectUtils, UniqueComponentId, zindexutils as ZIndexUtils };\n","import * as i0 from '@angular/core';\nimport { Injectable, Component, Directive, Input, NgModule } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { ObjectUtils } from 'primeng/utils';\nimport { CommonModule } from '@angular/common';\n\n/**\n * Type of the confirm event.\n */\nconst _c0 = [\"*\"];\nvar ConfirmEventType = /*#__PURE__*/function (ConfirmEventType) {\n  ConfirmEventType[ConfirmEventType[\"ACCEPT\"] = 0] = \"ACCEPT\";\n  ConfirmEventType[ConfirmEventType[\"REJECT\"] = 1] = \"REJECT\";\n  ConfirmEventType[ConfirmEventType[\"CANCEL\"] = 2] = \"CANCEL\";\n  return ConfirmEventType;\n}(ConfirmEventType || {});\n/**\n * Methods used in confirmation service.\n * @group Service\n */\nlet ConfirmationService = /*#__PURE__*/(() => {\n  class ConfirmationService {\n    requireConfirmationSource = new Subject();\n    acceptConfirmationSource = new Subject();\n    requireConfirmation$ = this.requireConfirmationSource.asObservable();\n    accept = this.acceptConfirmationSource.asObservable();\n    /**\n     * Callback to invoke on confirm.\n     * @param {Confirmation} confirmation - Represents a confirmation dialog configuration.\n     * @group Method\n     */\n    confirm(confirmation) {\n      this.requireConfirmationSource.next(confirmation);\n      return this;\n    }\n    /**\n     * Closes the dialog.\n     * @group Method\n     */\n    close() {\n      this.requireConfirmationSource.next(null);\n      return this;\n    }\n    /**\n     * Accepts the dialog.\n     * @group Method\n     */\n    onAccept() {\n      this.acceptConfirmationSource.next(null);\n    }\n    static ɵfac = function ConfirmationService_Factory(t) {\n      return new (t || ConfirmationService)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ConfirmationService,\n      factory: ConfirmationService.ɵfac\n    });\n  }\n  return ConfirmationService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ContextMenuService = /*#__PURE__*/(() => {\n  class ContextMenuService {\n    activeItemKeyChange = new Subject();\n    activeItemKeyChange$ = this.activeItemKeyChange.asObservable();\n    activeItemKey;\n    changeKey(key) {\n      this.activeItemKey = key;\n      this.activeItemKeyChange.next(this.activeItemKey);\n    }\n    reset() {\n      this.activeItemKey = null;\n      this.activeItemKeyChange.next(this.activeItemKey);\n    }\n    static ɵfac = function ContextMenuService_Factory(t) {\n      return new (t || ContextMenuService)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: ContextMenuService,\n      factory: ContextMenuService.ɵfac\n    });\n  }\n  return ContextMenuService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FilterMatchMode = /*#__PURE__*/(() => {\n  class FilterMatchMode {\n    static STARTS_WITH = 'startsWith';\n    static CONTAINS = 'contains';\n    static NOT_CONTAINS = 'notContains';\n    static ENDS_WITH = 'endsWith';\n    static EQUALS = 'equals';\n    static NOT_EQUALS = 'notEquals';\n    static IN = 'in';\n    static LESS_THAN = 'lt';\n    static LESS_THAN_OR_EQUAL_TO = 'lte';\n    static GREATER_THAN = 'gt';\n    static GREATER_THAN_OR_EQUAL_TO = 'gte';\n    static BETWEEN = 'between';\n    static IS = 'is';\n    static IS_NOT = 'isNot';\n    static BEFORE = 'before';\n    static AFTER = 'after';\n    static DATE_IS = 'dateIs';\n    static DATE_IS_NOT = 'dateIsNot';\n    static DATE_BEFORE = 'dateBefore';\n    static DATE_AFTER = 'dateAfter';\n  }\n  return FilterMatchMode;\n})();\nlet FilterOperator = /*#__PURE__*/(() => {\n  class FilterOperator {\n    static AND = 'and';\n    static OR = 'or';\n  }\n  return FilterOperator;\n})();\nlet FilterService = /*#__PURE__*/(() => {\n  class FilterService {\n    filter(value, fields, filterValue, filterMatchMode, filterLocale) {\n      let filteredItems = [];\n      if (value) {\n        for (let item of value) {\n          for (let field of fields) {\n            let fieldValue = ObjectUtils.resolveFieldData(item, field);\n            if (this.filters[filterMatchMode](fieldValue, filterValue, filterLocale)) {\n              filteredItems.push(item);\n              break;\n            }\n          }\n        }\n      }\n      return filteredItems;\n    }\n    filters = {\n      startsWith: (value, filter, filterLocale) => {\n        if (filter === undefined || filter === null || filter.trim() === '') {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        let filterValue = ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n        let stringValue = ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n        return stringValue.slice(0, filterValue.length) === filterValue;\n      },\n      contains: (value, filter, filterLocale) => {\n        if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        let filterValue = ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n        let stringValue = ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n        return stringValue.indexOf(filterValue) !== -1;\n      },\n      notContains: (value, filter, filterLocale) => {\n        if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        let filterValue = ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n        let stringValue = ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n        return stringValue.indexOf(filterValue) === -1;\n      },\n      endsWith: (value, filter, filterLocale) => {\n        if (filter === undefined || filter === null || filter.trim() === '') {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        let filterValue = ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n        let stringValue = ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale);\n        return stringValue.indexOf(filterValue, stringValue.length - filterValue.length) !== -1;\n      },\n      equals: (value, filter, filterLocale) => {\n        if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        if (value.getTime && filter.getTime) return value.getTime() === filter.getTime();else return ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale) == ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n      },\n      notEquals: (value, filter, filterLocale) => {\n        if (filter === undefined || filter === null || typeof filter === 'string' && filter.trim() === '') {\n          return false;\n        }\n        if (value === undefined || value === null) {\n          return true;\n        }\n        if (value.getTime && filter.getTime) return value.getTime() !== filter.getTime();else return ObjectUtils.removeAccents(value.toString()).toLocaleLowerCase(filterLocale) != ObjectUtils.removeAccents(filter.toString()).toLocaleLowerCase(filterLocale);\n      },\n      in: (value, filter) => {\n        if (filter === undefined || filter === null || filter.length === 0) {\n          return true;\n        }\n        for (let i = 0; i < filter.length; i++) {\n          if (ObjectUtils.equals(value, filter[i])) {\n            return true;\n          }\n        }\n        return false;\n      },\n      between: (value, filter) => {\n        if (filter == null || filter[0] == null || filter[1] == null) {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        if (value.getTime) return filter[0].getTime() <= value.getTime() && value.getTime() <= filter[1].getTime();else return filter[0] <= value && value <= filter[1];\n      },\n      lt: (value, filter, filterLocale) => {\n        if (filter === undefined || filter === null) {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        if (value.getTime && filter.getTime) return value.getTime() < filter.getTime();else return value < filter;\n      },\n      lte: (value, filter, filterLocale) => {\n        if (filter === undefined || filter === null) {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        if (value.getTime && filter.getTime) return value.getTime() <= filter.getTime();else return value <= filter;\n      },\n      gt: (value, filter, filterLocale) => {\n        if (filter === undefined || filter === null) {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        if (value.getTime && filter.getTime) return value.getTime() > filter.getTime();else return value > filter;\n      },\n      gte: (value, filter, filterLocale) => {\n        if (filter === undefined || filter === null) {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        if (value.getTime && filter.getTime) return value.getTime() >= filter.getTime();else return value >= filter;\n      },\n      is: (value, filter, filterLocale) => {\n        return this.filters.equals(value, filter, filterLocale);\n      },\n      isNot: (value, filter, filterLocale) => {\n        return this.filters.notEquals(value, filter, filterLocale);\n      },\n      before: (value, filter, filterLocale) => {\n        return this.filters.lt(value, filter, filterLocale);\n      },\n      after: (value, filter, filterLocale) => {\n        return this.filters.gt(value, filter, filterLocale);\n      },\n      dateIs: (value, filter) => {\n        if (filter === undefined || filter === null) {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        return value.toDateString() === filter.toDateString();\n      },\n      dateIsNot: (value, filter) => {\n        if (filter === undefined || filter === null) {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        return value.toDateString() !== filter.toDateString();\n      },\n      dateBefore: (value, filter) => {\n        if (filter === undefined || filter === null) {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        return value.getTime() < filter.getTime();\n      },\n      dateAfter: (value, filter) => {\n        if (filter === undefined || filter === null) {\n          return true;\n        }\n        if (value === undefined || value === null) {\n          return false;\n        }\n        return value.getTime() > filter.getTime();\n      }\n    };\n    register(rule, fn) {\n      this.filters[rule] = fn;\n    }\n    static ɵfac = function FilterService_Factory(t) {\n      return new (t || FilterService)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: FilterService,\n      factory: FilterService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return FilterService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Message service used in messages and toast components.\n * @group Service\n */\nlet MessageService = /*#__PURE__*/(() => {\n  class MessageService {\n    messageSource = new Subject();\n    clearSource = new Subject();\n    messageObserver = this.messageSource.asObservable();\n    clearObserver = this.clearSource.asObservable();\n    /**\n     * Inserts single message.\n     * @param {Message} message - Message to be added.\n     * @group Method\n     */\n    add(message) {\n      if (message) {\n        this.messageSource.next(message);\n      }\n    }\n    /**\n     * Insterts new messages.\n     * @param {Message[]} messages - Messages to be added.\n     * @group Method\n     */\n    addAll(messages) {\n      if (messages && messages.length) {\n        this.messageSource.next(messages);\n      }\n    }\n    /**\n     * Clears the message with the given key.\n     * @param {string} key - Key of the message to be cleared.\n     * @group Method\n     */\n    clear(key) {\n      this.clearSource.next(key || null);\n    }\n    static ɵfac = function MessageService_Factory(t) {\n      return new (t || MessageService)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MessageService,\n      factory: MessageService.ɵfac\n    });\n  }\n  return MessageService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet OverlayService = /*#__PURE__*/(() => {\n  class OverlayService {\n    clickSource = new Subject();\n    clickObservable = this.clickSource.asObservable();\n    add(event) {\n      if (event) {\n        this.clickSource.next(event);\n      }\n    }\n    static ɵfac = function OverlayService_Factory(t) {\n      return new (t || OverlayService)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: OverlayService,\n      factory: OverlayService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return OverlayService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PrimeIcons = /*#__PURE__*/(() => {\n  class PrimeIcons {\n    static ALIGN_CENTER = 'pi pi-align-center';\n    static ALIGN_JUSTIFY = 'pi pi-align-justify';\n    static ALIGN_LEFT = 'pi pi-align-left';\n    static ALIGN_RIGHT = 'pi pi-align-right';\n    static AMAZON = 'pi pi-amazon';\n    static ANDROID = 'pi pi-android';\n    static ANGLE_DOUBLE_DOWN = 'pi pi-angle-double-down';\n    static ANGLE_DOUBLE_LEFT = 'pi pi-angle-double-left';\n    static ANGLE_DOUBLE_RIGHT = 'pi pi-angle-double-right';\n    static ANGLE_DOUBLE_UP = 'pi pi-angle-double-up';\n    static ANGLE_DOWN = 'pi pi-angle-down';\n    static ANGLE_LEFT = 'pi pi-angle-left';\n    static ANGLE_RIGHT = 'pi pi-angle-right';\n    static ANGLE_UP = 'pi pi-angle-up';\n    static APPLE = 'pi pi-apple';\n    static ARROWS_ALT = 'pi pi-arrows-alt';\n    static ARROW_CIRCLE_DOWN = 'pi pi-arrow-circle-down';\n    static ARROW_CIRCLE_LEFT = 'pi pi-arrow-circle-left';\n    static ARROW_CIRCLE_RIGHT = 'pi pi-arrow-circle-right';\n    static ARROW_CIRCLE_UP = 'pi pi-arrow-circle-up';\n    static ARROW_DOWN = 'pi pi-arrow-down';\n    static ARROW_DOWN_LEFT = 'pi pi-arrow-down-left';\n    static ARROW_DOWN_RIGHT = 'pi pi-arrow-down-right';\n    static ARROW_LEFT = 'pi pi-arrow-left';\n    static ARROW_RIGHT_ARROW_LEFT = 'pi pi-arrow-right-arrow-left';\n    static ARROW_RIGHT = 'pi pi-arrow-right';\n    static ARROW_UP = 'pi pi-arrow-up';\n    static ARROW_UP_LEFT = 'pi pi-arrow-up-left';\n    static ARROW_UP_RIGHT = 'pi pi-arrow-up-right';\n    static ARROW_H = 'pi pi-arrows-h';\n    static ARROW_V = 'pi pi-arrows-v';\n    static AT = 'pi pi-at';\n    static BACKWARD = 'pi pi-backward';\n    static BAN = 'pi pi-ban';\n    static BARS = 'pi pi-bars';\n    static BELL = 'pi pi-bell';\n    static BITCOIN = 'pi pi-bitcoin';\n    static BOLT = 'pi pi-bolt';\n    static BOOK = 'pi pi-book';\n    static BOOKMARK = 'pi pi-bookmark';\n    static BOOKMARK_FILL = 'pi pi-bookmark-fill';\n    static BOX = 'pi pi-box';\n    static BRIEFCASE = 'pi pi-briefcase';\n    static BUILDING = 'pi pi-building';\n    static CALCULATOR = 'pi pi-calculator';\n    static CALENDAR = 'pi pi-calendar';\n    static CALENDAR_MINUS = 'pi pi-calendar-minus';\n    static CALENDAR_PLUS = 'pi pi-calendar-plus';\n    static CALENDAR_TIMES = 'pi pi-calendar-times';\n    static CAMERA = 'pi pi-camera';\n    static CAR = 'pi pi-car';\n    static CARET_DOWN = 'pi pi-caret-down';\n    static CARET_LEFT = 'pi pi-caret-left';\n    static CARET_RIGHT = 'pi pi-caret-right';\n    static CARET_UP = 'pi pi-caret-up';\n    static CART_PLUS = 'pi pi-cart-plus';\n    static CHART_BAR = 'pi pi-chart-bar';\n    static CHART_LINE = 'pi pi-chart-line';\n    static CHART_PIE = 'pi pi-chart-pie';\n    static CHECK = 'pi pi-check';\n    static CHECK_CIRCLE = 'pi pi-check-circle';\n    static CHECK_SQUARE = 'pi pi-check-square';\n    static CHEVRON_CIRCLE_DOWN = 'pi pi-chevron-circle-down';\n    static CHEVRON_CIRCLE_LEFT = 'pi pi-chevron-circle-left';\n    static CHEVRON_CIRCLE_RIGHT = 'pi pi-chevron-circle-right';\n    static CHEVRON_CIRCLE_UP = 'pi pi-chevron-circle-up';\n    static CHEVRON_DOWN = 'pi pi-chevron-down';\n    static CHEVRON_LEFT = 'pi pi-chevron-left';\n    static CHEVRON_RIGHT = 'pi pi-chevron-right';\n    static CHEVRON_UP = 'pi pi-chevron-up';\n    static CIRCLE = 'pi pi-circle';\n    static CIRCLE_FILL = 'pi pi-circle-fill';\n    static CLOCK = 'pi pi-clock';\n    static CLONE = 'pi pi-clone';\n    static CLOUD = 'pi pi-cloud';\n    static CLOUD_DOWNLOAD = 'pi pi-cloud-download';\n    static CLOUD_UPLOAD = 'pi pi-cloud-upload';\n    static CODE = 'pi pi-code';\n    static COG = 'pi pi-cog';\n    static COMMENT = 'pi pi-comment';\n    static COMMENTS = 'pi pi-comments';\n    static COMPASS = 'pi pi-compass';\n    static COPY = 'pi pi-copy';\n    static CREDIT_CARD = 'pi pi-credit-card';\n    static DATABASE = 'pi pi-database';\n    static DESKTOP = 'pi pi-desktop';\n    static DELETE_LEFT = 'pi pi-delete-left';\n    static DIRECTIONS = 'pi pi-directions';\n    static DIRECTIONS_ALT = 'pi pi-directions-alt';\n    static DISCORD = 'pi pi-discord';\n    static DOLLAR = 'pi pi-dollar';\n    static DOWNLOAD = 'pi pi-download';\n    static EJECT = 'pi pi-eject';\n    static ELLIPSIS_H = 'pi pi-ellipsis-h';\n    static ELLIPSIS_V = 'pi pi-ellipsis-v';\n    static ENVELOPE = 'pi pi-envelope';\n    static ERASER = 'pi pi-eraser';\n    static EURO = 'pi pi-euro';\n    static EXCLAMATION_CIRCLE = 'pi pi-exclamation-circle';\n    static EXCLAMATION_TRIANGLE = 'pi pi-exclamation-triangle';\n    static EXTERNAL_LINK = 'pi pi-external-link';\n    static EYE = 'pi pi-eye';\n    static EYE_SLASH = 'pi pi-eye-slash';\n    static FACEBOOK = 'pi pi-facebook';\n    static FAST_BACKWARD = 'pi pi-fast-backward';\n    static FAST_FORWARD = 'pi pi-fast-forward';\n    static FILE = 'pi pi-file';\n    static FILE_EDIT = 'pi pi-file-edit';\n    static FILE_IMPORT = 'pi pi-file-import';\n    static FILE_PDF = 'pi pi-file-pdf';\n    static FILE_EXCEL = 'pi pi-file-excel';\n    static FILE_EXPORT = 'pi pi-file-export';\n    static FILE_WORD = 'pi pi-file-word';\n    static FILTER = 'pi pi-filter';\n    static FILTER_FILL = 'pi pi-filter-fill';\n    static FILTER_SLASH = 'pi pi-filter-slash';\n    static FLAG = 'pi pi-flag';\n    static FLAG_FILL = 'pi pi-flag-fill';\n    static FOLDER = 'pi pi-folder';\n    static FOLDER_OPEN = 'pi pi-folder-open';\n    static FORWARD = 'pi pi-forward';\n    static GIFT = 'pi pi-gift';\n    static GITHUB = 'pi pi-github';\n    static GLOBE = 'pi pi-globe';\n    static GOOGLE = 'pi pi-google';\n    static HASHTAG = 'pi pi-hashtag';\n    static HEART = 'pi pi-heart';\n    static HEART_FILL = 'pi pi-heart-fill';\n    static HISTORY = 'pi pi-history';\n    static HOME = 'pi pi-home';\n    static HOURGLASS = 'pi pi-hourglass';\n    static ID_CARD = 'pi pi-id-card';\n    static IMAGE = 'pi pi-image';\n    static IMAGES = 'pi pi-images';\n    static INBOX = 'pi pi-inbox';\n    static INFO = 'pi pi-info';\n    static INFO_CIRCLE = 'pi pi-info-circle';\n    static INSTAGRAM = 'pi pi-instagram';\n    static KEY = 'pi pi-key';\n    static LANGUAGE = 'pi pi-language';\n    static LINK = 'pi pi-link';\n    static LINKEDIN = 'pi pi-linkedin';\n    static LIST = 'pi pi-list';\n    static LOCK = 'pi pi-lock';\n    static LOCK_OPEN = 'pi pi-lock-open';\n    static MAP = 'pi pi-map';\n    static MAP_MARKER = 'pi pi-map-marker';\n    static MEGAPHONE = 'pi pi-megaphone';\n    static MICROPHONE = 'pi pi-microphone';\n    static MICROSOFT = 'pi pi-microsoft';\n    static MINUS = 'pi pi-minus';\n    static MINUS_CIRCLE = 'pi pi-minus-circle';\n    static MOBILE = 'pi pi-mobile';\n    static MONEY_BILL = 'pi pi-money-bill';\n    static MOON = 'pi pi-moon';\n    static PALETTE = 'pi pi-palette';\n    static PAPERCLIP = 'pi pi-paperclip';\n    static PAUSE = 'pi pi-pause';\n    static PAYPAL = 'pi pi-paypal';\n    static PENCIL = 'pi pi-pencil';\n    static PERCENTAGE = 'pi pi-percentage';\n    static PHONE = 'pi pi-phone';\n    static PLAY = 'pi pi-play';\n    static PLUS = 'pi pi-plus';\n    static PLUS_CIRCLE = 'pi pi-plus-circle';\n    static POUND = 'pi pi-pound';\n    static POWER_OFF = 'pi pi-power-off';\n    static PRIME = 'pi pi-prime';\n    static PRINT = 'pi pi-print';\n    static QRCODE = 'pi pi-qrcode';\n    static QUESTION = 'pi pi-question';\n    static QUESTION_CIRCLE = 'pi pi-question-circle';\n    static REDDIT = 'pi pi-reddit';\n    static REFRESH = 'pi pi-refresh';\n    static REPLAY = 'pi pi-replay';\n    static REPLY = 'pi pi-reply';\n    static SAVE = 'pi pi-save';\n    static SEARCH = 'pi pi-search';\n    static SEARCH_MINUS = 'pi pi-search-minus';\n    static SEARCH_PLUS = 'pi pi-search-plus';\n    static SEND = 'pi pi-send';\n    static SERVER = 'pi pi-server';\n    static SHARE_ALT = 'pi pi-share-alt';\n    static SHIELD = 'pi pi-shield';\n    static SHOPPING_BAG = 'pi pi-shopping-bag';\n    static SHOPPING_CART = 'pi pi-shopping-cart';\n    static SIGN_IN = 'pi pi-sign-in';\n    static SIGN_OUT = 'pi pi-sign-out';\n    static SITEMAP = 'pi pi-sitemap';\n    static SLACK = 'pi pi-slack';\n    static SLIDERS_H = 'pi pi-sliders-h';\n    static SLIDERS_V = 'pi pi-sliders-v';\n    static SORT = 'pi pi-sort';\n    static SORT_ALPHA_DOWN = 'pi pi-sort-alpha-down';\n    static SORT_ALPHA_ALT_DOWN = 'pi pi-sort-alpha-alt-down';\n    static SORT_ALPHA_UP = 'pi pi-sort-alpha-up';\n    static SORT_ALPHA_ALT_UP = 'pi pi-sort-alpha-alt-up';\n    static SORT_ALT = 'pi pi-sort-alt';\n    static SORT_ALT_SLASH = 'pi pi-sort-slash';\n    static SORT_AMOUNT_DOWN = 'pi pi-sort-amount-down';\n    static SORT_AMOUNT_DOWN_ALT = 'pi pi-sort-amount-down-alt';\n    static SORT_AMOUNT_UP = 'pi pi-sort-amount-up';\n    static SORT_AMOUNT_UP_ALT = 'pi pi-sort-amount-up-alt';\n    static SORT_DOWN = 'pi pi-sort-down';\n    static SORT_NUMERIC_DOWN = 'pi pi-sort-numeric-down';\n    static SORT_NUMERIC_ALT_DOWN = 'pi pi-sort-numeric-alt-down';\n    static SORT_NUMERIC_UP = 'pi pi-sort-numeric-up';\n    static SORT_NUMERIC_ALT_UP = 'pi pi-sort-numeric-alt-up';\n    static SORT_UP = 'pi pi-sort-up';\n    static SPINNER = 'pi pi-spinner';\n    static STAR = 'pi pi-star';\n    static STAR_FILL = 'pi pi-star-fill';\n    static STEP_BACKWARD = 'pi pi-step-backward';\n    static STEP_BACKWARD_ALT = 'pi pi-step-backward-alt';\n    static STEP_FORWARD = 'pi pi-step-forward';\n    static STEP_FORWARD_ALT = 'pi pi-step-forward-alt';\n    static STOP = 'pi pi-stop';\n    static STOP_CIRCLE = 'pi pi-stop-circle';\n    static STOPWATCH = 'pi pi-stopwatch';\n    static SUN = 'pi pi-sun';\n    static SYNC = 'pi pi-sync';\n    static TABLE = 'pi pi-table';\n    static TABLET = 'pi pi-tablet';\n    static TAG = 'pi pi-tag';\n    static TAGS = 'pi pi-tags';\n    static TELEGRAM = 'pi pi-telegram';\n    static TH_LARGE = 'pi pi-th-large';\n    static THUMBS_DOWN = 'pi pi-thumbs-down';\n    static THUMBS_DOWN_FILL = 'pi pi-thumbs-down-fill';\n    static THUMBS_UP = 'pi pi-thumbs-up';\n    static THUMBS_UP_FILL = 'pi pi-thumbs-up-fill';\n    static TICKET = 'pi pi-ticket';\n    static TIMES = 'pi pi-times';\n    static TIMES_CIRCLE = 'pi pi-times-circle';\n    static TRASH = 'pi pi-trash';\n    static TRUCK = 'pi pi-truck';\n    static TWITTER = 'pi pi-twitter';\n    static UNDO = 'pi pi-undo';\n    static UNLOCK = 'pi pi-unlock';\n    static UPLOAD = 'pi pi-upload';\n    static USER = 'pi pi-user';\n    static USER_EDIT = 'pi pi-user-edit';\n    static USER_MINUS = 'pi pi-user-minus';\n    static USER_PLUS = 'pi pi-user-plus';\n    static USERS = 'pi pi-users';\n    static VERIFIED = 'pi pi-verified';\n    static VIDEO = 'pi pi-video';\n    static VIMEO = 'pi pi-vimeo';\n    static VOLUME_DOWN = 'pi pi-volume-down';\n    static VOLUME_OFF = 'pi pi-volume-off';\n    static VOLUME_UP = 'pi pi-volume-up';\n    static WALLET = 'pi pi-wallet';\n    static WHATSAPP = 'pi pi-whatsapp';\n    static WIFI = 'pi pi-wifi';\n    static WINDOW_MAXIMIZE = 'pi pi-window-maximize';\n    static WINDOW_MINIMIZE = 'pi pi-window-minimize';\n    static WRENCH = 'pi pi-wrench';\n    static YOUTUBE = 'pi pi-youtube';\n  }\n  return PrimeIcons;\n})();\nlet PrimeNGConfig = /*#__PURE__*/(() => {\n  class PrimeNGConfig {\n    ripple = false;\n    inputStyle = 'outlined';\n    overlayOptions = {};\n    filterMatchModeOptions = {\n      text: [FilterMatchMode.STARTS_WITH, FilterMatchMode.CONTAINS, FilterMatchMode.NOT_CONTAINS, FilterMatchMode.ENDS_WITH, FilterMatchMode.EQUALS, FilterMatchMode.NOT_EQUALS],\n      numeric: [FilterMatchMode.EQUALS, FilterMatchMode.NOT_EQUALS, FilterMatchMode.LESS_THAN, FilterMatchMode.LESS_THAN_OR_EQUAL_TO, FilterMatchMode.GREATER_THAN, FilterMatchMode.GREATER_THAN_OR_EQUAL_TO],\n      date: [FilterMatchMode.DATE_IS, FilterMatchMode.DATE_IS_NOT, FilterMatchMode.DATE_BEFORE, FilterMatchMode.DATE_AFTER]\n    };\n    translation = {\n      startsWith: 'Starts with',\n      contains: 'Contains',\n      notContains: 'Not contains',\n      endsWith: 'Ends with',\n      equals: 'Equals',\n      notEquals: 'Not equals',\n      noFilter: 'No Filter',\n      lt: 'Less than',\n      lte: 'Less than or equal to',\n      gt: 'Greater than',\n      gte: 'Greater than or equal to',\n      is: 'Is',\n      isNot: 'Is not',\n      before: 'Before',\n      after: 'After',\n      dateIs: 'Date is',\n      dateIsNot: 'Date is not',\n      dateBefore: 'Date is before',\n      dateAfter: 'Date is after',\n      clear: 'Clear',\n      apply: 'Apply',\n      matchAll: 'Match All',\n      matchAny: 'Match Any',\n      addRule: 'Add Rule',\n      removeRule: 'Remove Rule',\n      accept: 'Yes',\n      reject: 'No',\n      choose: 'Choose',\n      upload: 'Upload',\n      cancel: 'Cancel',\n      pending: 'Pending',\n      fileSizeTypes: ['B', 'KB', 'MB', 'GB', 'TB', 'PB', 'EB', 'ZB', 'YB'],\n      dayNames: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday'],\n      dayNamesShort: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n      dayNamesMin: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n      monthNames: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],\n      monthNamesShort: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n      chooseYear: 'Choose Year',\n      chooseMonth: 'Choose Month',\n      chooseDate: 'Choose Date',\n      prevDecade: 'Previous Decade',\n      nextDecade: 'Next Decade',\n      prevYear: 'Previous Year',\n      nextYear: 'Next Year',\n      prevMonth: 'Previous Month',\n      nextMonth: 'Next Month',\n      prevHour: 'Previous Hour',\n      nextHour: 'Next Hour',\n      prevMinute: 'Previous Minute',\n      nextMinute: 'Next Minute',\n      prevSecond: 'Previous Second',\n      nextSecond: 'Next Second',\n      am: 'am',\n      pm: 'pm',\n      dateFormat: 'mm/dd/yy',\n      firstDayOfWeek: 0,\n      today: 'Today',\n      weekHeader: 'Wk',\n      weak: 'Weak',\n      medium: 'Medium',\n      strong: 'Strong',\n      passwordPrompt: 'Enter a password',\n      emptyMessage: 'No results found',\n      searchMessage: '{0} results are available',\n      selectionMessage: '{0} items selected',\n      emptySelectionMessage: 'No selected item',\n      emptySearchMessage: 'No results found',\n      emptyFilterMessage: 'No results found',\n      aria: {\n        trueLabel: 'True',\n        falseLabel: 'False',\n        nullLabel: 'Not Selected',\n        star: '1 star',\n        stars: '{star} stars',\n        selectAll: 'All items selected',\n        unselectAll: 'All items unselected',\n        close: 'Close',\n        previous: 'Previous',\n        next: 'Next',\n        navigation: 'Navigation',\n        scrollTop: 'Scroll Top',\n        moveTop: 'Move Top',\n        moveUp: 'Move Up',\n        moveDown: 'Move Down',\n        moveBottom: 'Move Bottom',\n        moveToTarget: 'Move to Target',\n        moveToSource: 'Move to Source',\n        moveAllToTarget: 'Move All to Target',\n        moveAllToSource: 'Move All to Source',\n        pageLabel: '{page}',\n        firstPageLabel: 'First Page',\n        lastPageLabel: 'Last Page',\n        nextPageLabel: 'Next Page',\n        prevPageLabel: 'Previous Page',\n        rowsPerPageLabel: 'Rows per page',\n        previousPageLabel: 'Previous Page',\n        jumpToPageDropdownLabel: 'Jump to Page Dropdown',\n        jumpToPageInputLabel: 'Jump to Page Input',\n        selectRow: 'Row Selected',\n        unselectRow: 'Row Unselected',\n        expandRow: 'Row Expanded',\n        collapseRow: 'Row Collapsed',\n        showFilterMenu: 'Show Filter Menu',\n        hideFilterMenu: 'Hide Filter Menu',\n        filterOperator: 'Filter Operator',\n        filterConstraint: 'Filter Constraint',\n        editRow: 'Row Edit',\n        saveEdit: 'Save Edit',\n        cancelEdit: 'Cancel Edit',\n        listView: 'List View',\n        gridView: 'Grid View',\n        slide: 'Slide',\n        slideNumber: '{slideNumber}',\n        zoomImage: 'Zoom Image',\n        zoomIn: 'Zoom In',\n        zoomOut: 'Zoom Out',\n        rotateRight: 'Rotate Right',\n        rotateLeft: 'Rotate Left',\n        listLabel: 'Option List'\n      }\n    };\n    zIndex = {\n      modal: 1100,\n      overlay: 1000,\n      menu: 1000,\n      tooltip: 1100\n    };\n    translationSource = new Subject();\n    translationObserver = this.translationSource.asObservable();\n    getTranslation(key) {\n      return this.translation[key];\n    }\n    setTranslation(value) {\n      this.translation = {\n        ...this.translation,\n        ...value\n      };\n      this.translationSource.next(this.translation);\n    }\n    static ɵfac = function PrimeNGConfig_Factory(t) {\n      return new (t || PrimeNGConfig)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: PrimeNGConfig,\n      factory: PrimeNGConfig.ɵfac,\n      providedIn: 'root'\n    });\n  }\n  return PrimeNGConfig;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet Header = /*#__PURE__*/(() => {\n  class Header {\n    static ɵfac = function Header_Factory(t) {\n      return new (t || Header)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Header,\n      selectors: [[\"p-header\"]],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function Header_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return Header;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet Footer = /*#__PURE__*/(() => {\n  class Footer {\n    static ɵfac = function Footer_Factory(t) {\n      return new (t || Footer)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Footer,\n      selectors: [[\"p-footer\"]],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function Footer_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return Footer;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet PrimeTemplate = /*#__PURE__*/(() => {\n  class PrimeTemplate {\n    template;\n    type;\n    name;\n    constructor(template) {\n      this.template = template;\n    }\n    getType() {\n      return this.name;\n    }\n    static ɵfac = function PrimeTemplate_Factory(t) {\n      return new (t || PrimeTemplate)(i0.ɵɵdirectiveInject(i0.TemplateRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: PrimeTemplate,\n      selectors: [[\"\", \"pTemplate\", \"\"]],\n      inputs: {\n        type: \"type\",\n        name: [i0.ɵɵInputFlags.None, \"pTemplate\", \"name\"]\n      }\n    });\n  }\n  return PrimeTemplate;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet SharedModule = /*#__PURE__*/(() => {\n  class SharedModule {\n    static ɵfac = function SharedModule_Factory(t) {\n      return new (t || SharedModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: SharedModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n  return SharedModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TranslationKeys = /*#__PURE__*/(() => {\n  class TranslationKeys {\n    static STARTS_WITH = 'startsWith';\n    static CONTAINS = 'contains';\n    static NOT_CONTAINS = 'notContains';\n    static ENDS_WITH = 'endsWith';\n    static EQUALS = 'equals';\n    static NOT_EQUALS = 'notEquals';\n    static NO_FILTER = 'noFilter';\n    static LT = 'lt';\n    static LTE = 'lte';\n    static GT = 'gt';\n    static GTE = 'gte';\n    static IS = 'is';\n    static IS_NOT = 'isNot';\n    static BEFORE = 'before';\n    static AFTER = 'after';\n    static CLEAR = 'clear';\n    static APPLY = 'apply';\n    static MATCH_ALL = 'matchAll';\n    static MATCH_ANY = 'matchAny';\n    static ADD_RULE = 'addRule';\n    static REMOVE_RULE = 'removeRule';\n    static ACCEPT = 'accept';\n    static REJECT = 'reject';\n    static CHOOSE = 'choose';\n    static UPLOAD = 'upload';\n    static CANCEL = 'cancel';\n    static PENDING = 'pending';\n    static FILE_SIZE_TYPES = 'fileSizeTypes';\n    static DAY_NAMES = 'dayNames';\n    static DAY_NAMES_SHORT = 'dayNamesShort';\n    static DAY_NAMES_MIN = 'dayNamesMin';\n    static MONTH_NAMES = 'monthNames';\n    static MONTH_NAMES_SHORT = 'monthNamesShort';\n    static FIRST_DAY_OF_WEEK = 'firstDayOfWeek';\n    static TODAY = 'today';\n    static WEEK_HEADER = 'weekHeader';\n    static WEAK = 'weak';\n    static MEDIUM = 'medium';\n    static STRONG = 'strong';\n    static PASSWORD_PROMPT = 'passwordPrompt';\n    static EMPTY_MESSAGE = 'emptyMessage';\n    static EMPTY_FILTER_MESSAGE = 'emptyFilterMessage';\n    static SHOW_FILTER_MENU = 'showFilterMenu';\n    static HIDE_FILTER_MENU = 'hideFilterMenu';\n    static SELECTION_MESSAGE = 'selectionMessage';\n    static ARIA = 'aria';\n  }\n  return TranslationKeys;\n})();\nlet TreeDragDropService = /*#__PURE__*/(() => {\n  class TreeDragDropService {\n    dragStartSource = new Subject();\n    dragStopSource = new Subject();\n    dragStart$ = this.dragStartSource.asObservable();\n    dragStop$ = this.dragStopSource.asObservable();\n    startDrag(event) {\n      this.dragStartSource.next(event);\n    }\n    stopDrag(event) {\n      this.dragStopSource.next(event);\n    }\n    static ɵfac = function TreeDragDropService_Factory(t) {\n      return new (t || TreeDragDropService)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: TreeDragDropService,\n      factory: TreeDragDropService.ɵfac\n    });\n  }\n  return TreeDragDropService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ConfirmEventType, ConfirmationService, ContextMenuService, FilterMatchMode, FilterOperator, FilterService, Footer, Header, MessageService, OverlayService, PrimeIcons, PrimeNGConfig, PrimeTemplate, SharedModule, TranslationKeys, TreeDragDropService };\n","import * as i0 from '@angular/core';\nimport { Component, ChangeDetectionStrategy, ViewEncapsulation, Input } from '@angular/core';\nimport { ObjectUtils } from 'primeng/utils';\nconst _c0 = [\"*\"];\nlet BaseIcon = /*#__PURE__*/(() => {\n  class BaseIcon {\n    label;\n    spin = false;\n    styleClass;\n    role;\n    ariaLabel;\n    ariaHidden;\n    ngOnInit() {\n      this.getAttributes();\n    }\n    getAttributes() {\n      const isLabelEmpty = ObjectUtils.isEmpty(this.label);\n      this.role = !isLabelEmpty ? 'img' : undefined;\n      this.ariaLabel = !isLabelEmpty ? this.label : undefined;\n      this.ariaHidden = isLabelEmpty;\n    }\n    getClassNames() {\n      return `p-icon ${this.styleClass ? this.styleClass + ' ' : ''}${this.spin ? 'p-icon-spin' : ''}`;\n    }\n    static ɵfac = function BaseIcon_Factory(t) {\n      return new (t || BaseIcon)();\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: BaseIcon,\n      selectors: [[\"ng-component\"]],\n      hostAttrs: [1, \"p-element\", \"p-icon-wrapper\"],\n      inputs: {\n        label: \"label\",\n        spin: \"spin\",\n        styleClass: \"styleClass\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      ngContentSelectors: _c0,\n      decls: 1,\n      vars: 0,\n      template: function BaseIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵprojection(0);\n        }\n      },\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return BaseIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BaseIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nimport { UniqueComponentId } from 'primeng/utils';\nlet SpinnerIcon = /*#__PURE__*/(() => {\n  class SpinnerIcon extends BaseIcon {\n    pathId;\n    ngOnInit() {\n      this.pathId = 'url(#' + UniqueComponentId() + ')';\n    }\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵSpinnerIcon_BaseFactory;\n      return function SpinnerIcon_Factory(t) {\n        return (ɵSpinnerIcon_BaseFactory || (ɵSpinnerIcon_BaseFactory = i0.ɵɵgetInheritedFactory(SpinnerIcon)))(t || SpinnerIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: SpinnerIcon,\n      selectors: [[\"SpinnerIcon\"]],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 6,\n      vars: 7,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z\", \"fill\", \"currentColor\"], [3, \"id\"], [\"width\", \"14\", \"height\", \"14\", \"fill\", \"white\"]],\n      template: function SpinnerIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0)(1, \"g\");\n          i0.ɵɵelement(2, \"path\", 1);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"defs\")(4, \"clipPath\", 2);\n          i0.ɵɵelement(5, \"rect\", 3);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n          i0.ɵɵadvance();\n          i0.ɵɵattribute(\"clip-path\", ctx.pathId);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"id\", ctx.pathId);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return SpinnerIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { SpinnerIcon };\n","import { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { PLATFORM_ID, Directive, Inject, Optional, NgModule } from '@angular/core';\nimport { DomHandler } from 'primeng/dom';\nimport * as i1 from 'primeng/api';\n\n/**\n * Ripple directive adds ripple effect to the host element.\n * @group Components\n */\nlet Ripple = /*#__PURE__*/(() => {\n  class Ripple {\n    document;\n    platformId;\n    renderer;\n    el;\n    zone;\n    config;\n    constructor(document, platformId, renderer, el, zone, config) {\n      this.document = document;\n      this.platformId = platformId;\n      this.renderer = renderer;\n      this.el = el;\n      this.zone = zone;\n      this.config = config;\n    }\n    animationListener;\n    mouseDownListener;\n    timeout;\n    ngAfterViewInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        if (this.config && this.config.ripple) {\n          this.zone.runOutsideAngular(() => {\n            this.create();\n            this.mouseDownListener = this.renderer.listen(this.el.nativeElement, 'mousedown', this.onMouseDown.bind(this));\n          });\n        }\n      }\n    }\n    onMouseDown(event) {\n      let ink = this.getInk();\n      if (!ink || this.document.defaultView?.getComputedStyle(ink, null).display === 'none') {\n        return;\n      }\n      DomHandler.removeClass(ink, 'p-ink-active');\n      if (!DomHandler.getHeight(ink) && !DomHandler.getWidth(ink)) {\n        let d = Math.max(DomHandler.getOuterWidth(this.el.nativeElement), DomHandler.getOuterHeight(this.el.nativeElement));\n        ink.style.height = d + 'px';\n        ink.style.width = d + 'px';\n      }\n      let offset = DomHandler.getOffset(this.el.nativeElement);\n      let x = event.pageX - offset.left + this.document.body.scrollTop - DomHandler.getWidth(ink) / 2;\n      let y = event.pageY - offset.top + this.document.body.scrollLeft - DomHandler.getHeight(ink) / 2;\n      this.renderer.setStyle(ink, 'top', y + 'px');\n      this.renderer.setStyle(ink, 'left', x + 'px');\n      DomHandler.addClass(ink, 'p-ink-active');\n      this.timeout = setTimeout(() => {\n        let ink = this.getInk();\n        if (ink) {\n          DomHandler.removeClass(ink, 'p-ink-active');\n        }\n      }, 401);\n    }\n    getInk() {\n      const children = this.el.nativeElement.children;\n      for (let i = 0; i < children.length; i++) {\n        if (typeof children[i].className === 'string' && children[i].className.indexOf('p-ink') !== -1) {\n          return children[i];\n        }\n      }\n      return null;\n    }\n    resetInk() {\n      let ink = this.getInk();\n      if (ink) {\n        DomHandler.removeClass(ink, 'p-ink-active');\n      }\n    }\n    onAnimationEnd(event) {\n      if (this.timeout) {\n        clearTimeout(this.timeout);\n      }\n      DomHandler.removeClass(event.currentTarget, 'p-ink-active');\n    }\n    create() {\n      let ink = this.renderer.createElement('span');\n      this.renderer.addClass(ink, 'p-ink');\n      this.renderer.appendChild(this.el.nativeElement, ink);\n      this.renderer.setAttribute(ink, 'aria-hidden', 'true');\n      this.renderer.setAttribute(ink, 'role', 'presentation');\n      if (!this.animationListener) {\n        this.animationListener = this.renderer.listen(ink, 'animationend', this.onAnimationEnd.bind(this));\n      }\n    }\n    remove() {\n      let ink = this.getInk();\n      if (ink) {\n        this.mouseDownListener && this.mouseDownListener();\n        this.animationListener && this.animationListener();\n        this.mouseDownListener = null;\n        this.animationListener = null;\n        DomHandler.removeElement(ink);\n      }\n    }\n    ngOnDestroy() {\n      if (this.config && this.config.ripple) {\n        this.remove();\n      }\n    }\n    static ɵfac = function Ripple_Factory(t) {\n      return new (t || Ripple)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.PrimeNGConfig, 8));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: Ripple,\n      selectors: [[\"\", \"pRipple\", \"\"]],\n      hostAttrs: [1, \"p-ripple\", \"p-element\"]\n    });\n  }\n  return Ripple;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet RippleModule = /*#__PURE__*/(() => {\n  class RippleModule {\n    static ɵfac = function RippleModule_Factory(t) {\n      return new (t || RippleModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: RippleModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n  return RippleModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ripple, RippleModule };\n","import * as i1 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Directive, Inject, Input, EventEmitter, Component, ChangeDetectionStrategy, ViewEncapsulation, Output, ContentChildren, NgModule } from '@angular/core';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { SpinnerIcon } from 'primeng/icons/spinner';\nimport * as i2 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport { ObjectUtils } from 'primeng/utils';\nfunction Button_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Button_ng_container_3_ng_container_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(3);\n    i0.ɵɵclassMap(\"p-button-loading-icon pi-spin \" + ctx_r7.loadingIcon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r7.iconClass());\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"loadingicon\");\n  }\n}\nfunction Button_ng_container_3_ng_container_1_SpinnerIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"SpinnerIcon\", 9);\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"styleClass\", ctx_r8.spinnerIconClass())(\"spin\", true);\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"loadingicon\");\n  }\n}\nfunction Button_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Button_ng_container_3_ng_container_1_span_1_Template, 1, 5, \"span\", 6)(2, Button_ng_container_3_ng_container_1_SpinnerIcon_2_Template, 1, 4, \"SpinnerIcon\", 7);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.loadingIcon);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.loadingIcon);\n  }\n}\nfunction Button_ng_container_3_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Button_ng_container_3_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Button_ng_container_3_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Button_ng_container_3_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 10);\n    i0.ɵɵtemplate(1, Button_ng_container_3_span_2_1_Template, 1, 0, null, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r6.iconClass());\n    i0.ɵɵattribute(\"aria-hidden\", true)(\"data-pc-section\", \"loadingicon\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r6.loadingIconTemplate);\n  }\n}\nfunction Button_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Button_ng_container_3_ng_container_1_Template, 3, 2, \"ng-container\", 2)(2, Button_ng_container_3_span_2_Template, 2, 4, \"span\", 5);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.loadingIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.loadingIconTemplate);\n  }\n}\nfunction Button_ng_container_4_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 8);\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassMap(ctx_r11.icon);\n    i0.ɵɵproperty(\"ngClass\", ctx_r11.iconClass());\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n  }\n}\nfunction Button_ng_container_4_span_2_1_ng_template_0_Template(rf, ctx) {}\nfunction Button_ng_container_4_span_2_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Button_ng_container_4_span_2_1_ng_template_0_Template, 0, 0, \"ng-template\", 12);\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r13.icon);\n  }\n}\nfunction Button_ng_container_4_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtemplate(1, Button_ng_container_4_span_2_1_Template, 1, 1, null, 1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"ngClass\", ctx_r12.iconClass());\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r12.iconTemplate);\n  }\n}\nfunction Button_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, Button_ng_container_4_span_1_Template, 1, 4, \"span\", 6)(2, Button_ng_container_4_span_2_Template, 2, 3, \"span\", 11);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.icon && !ctx_r2.iconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.icon && ctx_r2.iconTemplate);\n  }\n}\nfunction Button_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 13);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"aria-hidden\", ctx_r3.icon && !ctx_r3.label)(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r3.label);\n  }\n}\nfunction Button_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r4.badgeClass);\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.badgeStyleClass());\n    i0.ɵɵattribute(\"data-pc-section\", \"badge\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r4.badge);\n  }\n}\nconst _c0 = [\"*\"];\nconst INTERNAL_BUTTON_CLASSES = {\n  button: 'p-button',\n  component: 'p-component',\n  iconOnly: 'p-button-icon-only',\n  disabled: 'p-disabled',\n  loading: 'p-button-loading',\n  labelOnly: 'p-button-loading-label-only'\n};\n/**\n * Button directive is an extension to button component.\n * @group Components\n */\nlet ButtonDirective = /*#__PURE__*/(() => {\n  class ButtonDirective {\n    el;\n    document;\n    /**\n     * Position of the icon.\n     * @group Props\n     */\n    iconPos = 'left';\n    /**\n     * Uses to pass attributes to the loading icon's DOM element.\n     * @group Props\n     */\n    loadingIcon;\n    /**\n     * Text of the button.\n     * @group Props\n     */\n    get label() {\n      return this._label;\n    }\n    set label(val) {\n      this._label = val;\n      if (this.initialized) {\n        this.updateLabel();\n        this.updateIcon();\n        this.setStyleClass();\n      }\n    }\n    /**\n     * Name of the icon.\n     * @group Props\n     */\n    get icon() {\n      return this._icon;\n    }\n    set icon(val) {\n      this._icon = val;\n      if (this.initialized) {\n        this.updateIcon();\n        this.setStyleClass();\n      }\n    }\n    /**\n     * Whether the button is in loading state.\n     * @group Props\n     */\n    get loading() {\n      return this._loading;\n    }\n    set loading(val) {\n      this._loading = val;\n      if (this.initialized) {\n        this.updateIcon();\n        this.setStyleClass();\n      }\n    }\n    _label;\n    _icon;\n    _loading = false;\n    initialized;\n    get htmlElement() {\n      return this.el.nativeElement;\n    }\n    _internalClasses = Object.values(INTERNAL_BUTTON_CLASSES);\n    spinnerIcon = `<svg width=\"14\" height=\"14\" viewBox=\"0 0 14 14\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" class=\"p-icon-spin\">\n        <g clip-path=\"url(#clip0_417_21408)\">\n            <path\n                d=\"M6.99701 14C5.85441 13.999 4.72939 13.7186 3.72012 13.1832C2.71084 12.6478 1.84795 11.8737 1.20673 10.9284C0.565504 9.98305 0.165424 8.89526 0.041387 7.75989C-0.0826496 6.62453 0.073125 5.47607 0.495122 4.4147C0.917119 3.35333 1.59252 2.4113 2.46241 1.67077C3.33229 0.930247 4.37024 0.413729 5.4857 0.166275C6.60117 -0.0811796 7.76026 -0.0520535 8.86188 0.251112C9.9635 0.554278 10.9742 1.12227 11.8057 1.90555C11.915 2.01493 11.9764 2.16319 11.9764 2.31778C11.9764 2.47236 11.915 2.62062 11.8057 2.73C11.7521 2.78503 11.688 2.82877 11.6171 2.85864C11.5463 2.8885 11.4702 2.90389 11.3933 2.90389C11.3165 2.90389 11.2404 2.8885 11.1695 2.85864C11.0987 2.82877 11.0346 2.78503 10.9809 2.73C9.9998 1.81273 8.73246 1.26138 7.39226 1.16876C6.05206 1.07615 4.72086 1.44794 3.62279 2.22152C2.52471 2.99511 1.72683 4.12325 1.36345 5.41602C1.00008 6.70879 1.09342 8.08723 1.62775 9.31926C2.16209 10.5513 3.10478 11.5617 4.29713 12.1803C5.48947 12.7989 6.85865 12.988 8.17414 12.7157C9.48963 12.4435 10.6711 11.7264 11.5196 10.6854C12.3681 9.64432 12.8319 8.34282 12.8328 7C12.8328 6.84529 12.8943 6.69692 13.0038 6.58752C13.1132 6.47812 13.2616 6.41667 13.4164 6.41667C13.5712 6.41667 13.7196 6.47812 13.8291 6.58752C13.9385 6.69692 14 6.84529 14 7C14 8.85651 13.2622 10.637 11.9489 11.9497C10.6356 13.2625 8.85432 14 6.99701 14Z\"\n                fill=\"currentColor\"\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0_417_21408\">\n                <rect width=\"14\" height=\"14\" fill=\"white\" />\n            </clipPath>\n        </defs>\n    </svg>`;\n    constructor(el, document) {\n      this.el = el;\n      this.document = document;\n    }\n    ngAfterViewInit() {\n      DomHandler.addMultipleClasses(this.htmlElement, this.getStyleClass().join(' '));\n      this.createIcon();\n      this.createLabel();\n      this.initialized = true;\n    }\n    getStyleClass() {\n      const styleClass = [INTERNAL_BUTTON_CLASSES.button, INTERNAL_BUTTON_CLASSES.component];\n      if (this.icon && !this.label && ObjectUtils.isEmpty(this.htmlElement.textContent)) {\n        styleClass.push(INTERNAL_BUTTON_CLASSES.iconOnly);\n      }\n      if (this.loading) {\n        styleClass.push(INTERNAL_BUTTON_CLASSES.disabled, INTERNAL_BUTTON_CLASSES.loading);\n        if (!this.icon && this.label) {\n          styleClass.push(INTERNAL_BUTTON_CLASSES.labelOnly);\n        }\n        if (this.icon && !this.label && !ObjectUtils.isEmpty(this.htmlElement.textContent)) {\n          styleClass.push(INTERNAL_BUTTON_CLASSES.iconOnly);\n        }\n      }\n      return styleClass;\n    }\n    setStyleClass() {\n      const styleClass = this.getStyleClass();\n      this.htmlElement.classList.remove(...this._internalClasses);\n      this.htmlElement.classList.add(...styleClass);\n    }\n    createLabel() {\n      const created = DomHandler.findSingle(this.htmlElement, '.p-button-label');\n      if (!created && this.label) {\n        let labelElement = this.document.createElement('span');\n        if (this.icon && !this.label) {\n          labelElement.setAttribute('aria-hidden', 'true');\n        }\n        labelElement.className = 'p-button-label';\n        labelElement.appendChild(this.document.createTextNode(this.label));\n        this.htmlElement.appendChild(labelElement);\n      }\n    }\n    createIcon() {\n      const created = DomHandler.findSingle(this.htmlElement, '.p-button-icon');\n      if (!created && (this.icon || this.loading)) {\n        let iconElement = this.document.createElement('span');\n        iconElement.className = 'p-button-icon';\n        iconElement.setAttribute('aria-hidden', 'true');\n        let iconPosClass = this.label ? 'p-button-icon-' + this.iconPos : null;\n        if (iconPosClass) {\n          DomHandler.addClass(iconElement, iconPosClass);\n        }\n        let iconClass = this.getIconClass();\n        if (iconClass) {\n          DomHandler.addMultipleClasses(iconElement, iconClass);\n        }\n        if (!this.loadingIcon && this.loading) {\n          iconElement.innerHTML = this.spinnerIcon;\n        }\n        this.htmlElement.insertBefore(iconElement, this.htmlElement.firstChild);\n      }\n    }\n    updateLabel() {\n      let labelElement = DomHandler.findSingle(this.htmlElement, '.p-button-label');\n      if (!this.label) {\n        labelElement && this.htmlElement.removeChild(labelElement);\n        return;\n      }\n      labelElement ? labelElement.textContent = this.label : this.createLabel();\n    }\n    updateIcon() {\n      let iconElement = DomHandler.findSingle(this.htmlElement, '.p-button-icon');\n      let labelElement = DomHandler.findSingle(this.htmlElement, '.p-button-label');\n      if (this.loading && !this.loadingIcon && iconElement) {\n        iconElement.innerHTML = this.spinnerIcon;\n      } else if (iconElement?.innerHTML) {\n        iconElement.innerHTML = '';\n      }\n      if (iconElement) {\n        if (this.iconPos) {\n          iconElement.className = 'p-button-icon ' + (labelElement ? 'p-button-icon-' + this.iconPos : '') + ' ' + this.getIconClass();\n        } else {\n          iconElement.className = 'p-button-icon ' + this.getIconClass();\n        }\n      } else {\n        this.createIcon();\n      }\n    }\n    getIconClass() {\n      return this.loading ? 'p-button-loading-icon ' + (this.loadingIcon ? this.loadingIcon : 'p-icon') : this.icon || 'p-hidden';\n    }\n    ngOnDestroy() {\n      this.initialized = false;\n    }\n    static ɵfac = function ButtonDirective_Factory(t) {\n      return new (t || ButtonDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(DOCUMENT));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: ButtonDirective,\n      selectors: [[\"\", \"pButton\", \"\"]],\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        iconPos: \"iconPos\",\n        loadingIcon: \"loadingIcon\",\n        label: \"label\",\n        icon: \"icon\",\n        loading: \"loading\"\n      }\n    });\n  }\n  return ButtonDirective;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Button is an extension to standard button element with icons and theming.\n * @group Components\n */\nlet Button = /*#__PURE__*/(() => {\n  class Button {\n    el;\n    /**\n     * Type of the button.\n     * @group Props\n     */\n    type = 'button';\n    /**\n     * Position of the icon.\n     * @group Props\n     */\n    iconPos = 'left';\n    /**\n     * Name of the icon.\n     * @group Props\n     */\n    icon;\n    /**\n     * Value of the badge.\n     * @group Props\n     */\n    badge;\n    /**\n     * Uses to pass attributes to the label's DOM element.\n     * @group Props\n     */\n    label;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @group Props\n     */\n    disabled;\n    /**\n     * Whether the button is in loading state.\n     * @group Props\n     */\n    loading = false;\n    /**\n     * Icon to display in loading state.\n     * @group Props\n     */\n    loadingIcon;\n    /**\n     * Add a shadow to indicate elevation.\n     * @group Props\n     */\n    raised = false;\n    /**\n     * Add a circular border radius to the button.\n     * @group Props\n     */\n    rounded = false;\n    /**\n     * Add a textual class to the button without a background initially.\n     * @group Props\n     */\n    text = false;\n    /**\n     * Add a plain textual class to the button without a background initially.\n     * @group Props\n     */\n    plain = false;\n    /**\n     * Defines the style of the button.\n     * @group Props\n     */\n    severity;\n    /**\n     * Add a border class without a background initially.\n     * @group Props\n     */\n    outlined = false;\n    /**\n     *  Add a link style to the button.\n     * @group Props\n     */\n    link = false;\n    /**\n     * Defines the size of the button.\n     * @group Props\n     */\n    size;\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Style class of the badge.\n     * @group Props\n     */\n    badgeClass;\n    /**\n     * Used to define a string that autocomplete attribute the current element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Callback to execute when button is clicked.\n     * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (click).\n     * @param {MouseEvent} event - Mouse event.\n     * @group Emits\n     */\n    onClick = new EventEmitter();\n    /**\n     * Callback to execute when button is focused.\n     * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (focus).\n     * @param {FocusEvent} event - Focus event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to execute when button loses focus.\n     * This event is intended to be used with the <p-button> component. Using a regular <button> element, use (blur).\n     * @param {FocusEvent} event - Focus event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    contentTemplate;\n    loadingIconTemplate;\n    iconTemplate;\n    templates;\n    constructor(el) {\n      this.el = el;\n    }\n    spinnerIconClass() {\n      return Object.entries(this.iconClass()).filter(([, value]) => !!value).reduce((acc, [key]) => acc + ` ${key}`, 'p-button-loading-icon');\n    }\n    iconClass() {\n      return {\n        'p-button-icon': true,\n        'p-button-icon-left': this.iconPos === 'left' && this.label,\n        'p-button-icon-right': this.iconPos === 'right' && this.label,\n        'p-button-icon-top': this.iconPos === 'top' && this.label,\n        'p-button-icon-bottom': this.iconPos === 'bottom' && this.label\n      };\n    }\n    get buttonClass() {\n      return {\n        'p-button p-component': true,\n        'p-button-icon-only': (this.icon || this.iconTemplate || this.loadingIcon || this.loadingIconTemplate) && !this.label,\n        'p-button-vertical': (this.iconPos === 'top' || this.iconPos === 'bottom') && this.label,\n        'p-disabled': this.disabled || this.loading,\n        'p-button-loading': this.loading,\n        'p-button-loading-label-only': this.loading && !this.icon && this.label && !this.loadingIcon && this.iconPos === 'left',\n        'p-button-link': this.link,\n        [`p-button-${this.severity}`]: this.severity,\n        'p-button-raised': this.raised,\n        'p-button-rounded': this.rounded,\n        'p-button-text': this.text,\n        'p-button-outlined': this.outlined,\n        'p-button-sm': this.size === 'small',\n        'p-button-lg': this.size === 'large',\n        'p-button-plain': this.plain,\n        [`${this.styleClass}`]: this.styleClass\n      };\n    }\n    ngAfterContentInit() {\n      this.templates?.forEach(item => {\n        switch (item.getType()) {\n          case 'content':\n            this.contentTemplate = item.template;\n            break;\n          case 'icon':\n            this.iconTemplate = item.template;\n            break;\n          case 'loadingicon':\n            this.loadingIconTemplate = item.template;\n            break;\n          default:\n            this.contentTemplate = item.template;\n            break;\n        }\n      });\n    }\n    badgeStyleClass() {\n      return {\n        'p-badge p-component': true,\n        'p-badge-no-gutter': this.badge && String(this.badge).length === 1\n      };\n    }\n    static ɵfac = function Button_Factory(t) {\n      return new (t || Button)(i0.ɵɵdirectiveInject(i0.ElementRef));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Button,\n      selectors: [[\"p-button\"]],\n      contentQueries: function Button_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      hostAttrs: [1, \"p-element\"],\n      hostVars: 2,\n      hostBindings: function Button_HostBindings(rf, ctx) {\n        if (rf & 2) {\n          i0.ɵɵclassProp(\"p-disabled\", ctx.disabled);\n        }\n      },\n      inputs: {\n        type: \"type\",\n        iconPos: \"iconPos\",\n        icon: \"icon\",\n        badge: \"badge\",\n        label: \"label\",\n        disabled: \"disabled\",\n        loading: \"loading\",\n        loadingIcon: \"loadingIcon\",\n        raised: \"raised\",\n        rounded: \"rounded\",\n        text: \"text\",\n        plain: \"plain\",\n        severity: \"severity\",\n        outlined: \"outlined\",\n        link: \"link\",\n        size: \"size\",\n        style: \"style\",\n        styleClass: \"styleClass\",\n        badgeClass: \"badgeClass\",\n        ariaLabel: \"ariaLabel\"\n      },\n      outputs: {\n        onClick: \"onClick\",\n        onFocus: \"onFocus\",\n        onBlur: \"onBlur\"\n      },\n      ngContentSelectors: _c0,\n      decls: 7,\n      vars: 12,\n      consts: [[\"pRipple\", \"\", 3, \"ngStyle\", \"disabled\", \"ngClass\", \"click\", \"focus\", \"blur\"], [4, \"ngTemplateOutlet\"], [4, \"ngIf\"], [\"class\", \"p-button-label\", 4, \"ngIf\"], [3, \"ngClass\", \"class\", 4, \"ngIf\"], [\"class\", \"p-button-loading-icon\", 3, \"ngClass\", 4, \"ngIf\"], [3, \"class\", \"ngClass\", 4, \"ngIf\"], [3, \"styleClass\", \"spin\", 4, \"ngIf\"], [3, \"ngClass\"], [3, \"styleClass\", \"spin\"], [1, \"p-button-loading-icon\", 3, \"ngClass\"], [3, \"ngClass\", 4, \"ngIf\"], [3, \"ngIf\"], [1, \"p-button-label\"]],\n      template: function Button_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"button\", 0);\n          i0.ɵɵlistener(\"click\", function Button_Template_button_click_0_listener($event) {\n            return ctx.onClick.emit($event);\n          })(\"focus\", function Button_Template_button_focus_0_listener($event) {\n            return ctx.onFocus.emit($event);\n          })(\"blur\", function Button_Template_button_blur_0_listener($event) {\n            return ctx.onBlur.emit($event);\n          });\n          i0.ɵɵprojection(1);\n          i0.ɵɵtemplate(2, Button_ng_container_2_Template, 1, 0, \"ng-container\", 1)(3, Button_ng_container_3_Template, 3, 2, \"ng-container\", 2)(4, Button_ng_container_4_Template, 3, 2, \"ng-container\", 2)(5, Button_span_5_Template, 2, 3, \"span\", 3)(6, Button_span_6_Template, 2, 5, \"span\", 4);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"disabled\", ctx.disabled || ctx.loading)(\"ngClass\", ctx.buttonClass);\n          i0.ɵɵattribute(\"type\", ctx.type)(\"aria-label\", ctx.ariaLabel)(\"data-pc-name\", \"button\")(\"data-pc-section\", \"root\");\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngTemplateOutlet\", ctx.contentTemplate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.loading);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate && ctx.label);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", !ctx.contentTemplate && ctx.badge);\n        }\n      },\n      dependencies: () => [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.Ripple, SpinnerIcon],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return Button;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet ButtonModule = /*#__PURE__*/(() => {\n  class ButtonModule {\n    static ɵfac = function ButtonModule_Factory(t) {\n      return new (t || ButtonModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: ButtonModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, RippleModule, SharedModule, SpinnerIcon, SharedModule]\n    });\n  }\n  return ButtonModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Button, ButtonDirective, ButtonModule };\n","import {\r\n  Component,\r\n  signal,\r\n  WritableSignal,\r\n  ChangeDetectionStrategy,\r\n} from '@angular/core';\r\nimport { RouterLink, RouterLinkActive } from '@angular/router';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport {\r\n  IconDefinition,\r\n  faBasketShopping,\r\n} from '@fortawesome/free-solid-svg-icons';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  standalone: true,\r\n  imports: [RouterLink, RouterLinkActive, FontAwesomeModule, CommonModule],\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css', './navbar.responsive.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class NavbarComponent {\r\n  faBasketShopping: IconDefinition = faBasketShopping;\r\n\r\n  // public bagPrice: WritableSignal<number> = signal(0);\r\n  // public quantityInBag = signal(0);\r\n}\r\n","<nav class=\"navbar__container\">\r\n    <div class=\"navbar__show-menu\">\r\n        <input type=\"checkbox\" name=\"show-menu\" id=\"showMenu\" class=\"chbox-menu\">\r\n        <label for=\"showMenu\" class=\"navbar__menu-hamburger\">\r\n            <span class=\"hamburger-lines\"></span>\r\n            <span class=\"hamburger-lines\"></span>\r\n            <span class=\"hamburger-lines\"></span>\r\n        </label>\r\n    </div>\r\n    <ul class=\"navbar__menu\">\r\n        <li class=\"menu-item\">\r\n            <a \r\n                routerLink=\"/product\" routerLinkActive=\"actived\" \r\n                [routerLinkActiveOptions]=\"{exact:true}\" \r\n                class=\"menu-link\">Produtos\r\n            </a>\r\n        </li>\r\n        <i class=\"separator\"></i>\r\n        <li class=\"menu-item\">\r\n            <a routerLink=\"/cart\" routerLinkActive=\"actived\" class=\"menu-link\">\r\n                <div class=\"bag__content\">\r\n                <span class=\"quantity-bag\" id=\"quantityInBag\">0</span>\r\n                    <fa-icon class=\"bag-shopping\" [icon]=\"faBasketShopping\">\r\n                    </fa-icon>\r\n                </div>\r\n                <span class=\"bag-price\" id=\"bagPriceTotal\"></span>\r\n            </a>\r\n        </li>\r\n        <li class=\"menu-item\">\r\n            <a \r\n                routerLink=\"/contact\"  \r\n                class=\"menu-link\"\r\n                routerLinkActive=\"actived\"\r\n            >\r\n                Contato   \r\n            </a>\r\n        </li>\r\n    </ul>\r\n</nav>\r\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nlet AngleDownIcon = /*#__PURE__*/(() => {\n  class AngleDownIcon extends BaseIcon {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵAngleDownIcon_BaseFactory;\n      return function AngleDownIcon_Factory(t) {\n        return (ɵAngleDownIcon_BaseFactory || (ɵAngleDownIcon_BaseFactory = i0.ɵɵgetInheritedFactory(AngleDownIcon)))(t || AngleDownIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: AngleDownIcon,\n      selectors: [[\"AngleDownIcon\"]],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 5,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M3.58659 4.5007C3.68513 4.50023 3.78277 4.51945 3.87379 4.55723C3.9648 4.59501 4.04735 4.65058 4.11659 4.7207L7.11659 7.7207L10.1166 4.7207C10.2619 4.65055 10.4259 4.62911 10.5843 4.65956C10.7427 4.69002 10.8871 4.77074 10.996 4.88976C11.1049 5.00877 11.1726 5.15973 11.1889 5.32022C11.2052 5.48072 11.1693 5.6422 11.0866 5.7807L7.58659 9.2807C7.44597 9.42115 7.25534 9.50004 7.05659 9.50004C6.85784 9.50004 6.66722 9.42115 6.52659 9.2807L3.02659 5.7807C2.88614 5.64007 2.80725 5.44945 2.80725 5.2507C2.80725 5.05195 2.88614 4.86132 3.02659 4.7207C3.09932 4.64685 3.18675 4.58911 3.28322 4.55121C3.37969 4.51331 3.48305 4.4961 3.58659 4.5007Z\", \"fill\", \"currentColor\"]],\n      template: function AngleDownIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0);\n          i0.ɵɵelement(1, \"path\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return AngleDownIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngleDownIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nlet AngleRightIcon = /*#__PURE__*/(() => {\n  class AngleRightIcon extends BaseIcon {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵAngleRightIcon_BaseFactory;\n      return function AngleRightIcon_Factory(t) {\n        return (ɵAngleRightIcon_BaseFactory || (ɵAngleRightIcon_BaseFactory = i0.ɵɵgetInheritedFactory(AngleRightIcon)))(t || AngleRightIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: AngleRightIcon,\n      selectors: [[\"AngleRightIcon\"]],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 5,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"d\", \"M5.25 11.1728C5.14929 11.1694 5.05033 11.1455 4.9592 11.1025C4.86806 11.0595 4.78666 10.9984 4.72 10.9228C4.57955 10.7822 4.50066 10.5916 4.50066 10.3928C4.50066 10.1941 4.57955 10.0035 4.72 9.86283L7.72 6.86283L4.72 3.86283C4.66067 3.71882 4.64765 3.55991 4.68275 3.40816C4.71785 3.25642 4.79932 3.11936 4.91585 3.01602C5.03238 2.91268 5.17819 2.84819 5.33305 2.83149C5.4879 2.81479 5.64411 2.84671 5.78 2.92283L9.28 6.42283C9.42045 6.56346 9.49934 6.75408 9.49934 6.95283C9.49934 7.15158 9.42045 7.34221 9.28 7.48283L5.78 10.9228C5.71333 10.9984 5.63193 11.0595 5.5408 11.1025C5.44966 11.1455 5.35071 11.1694 5.25 11.1728Z\", \"fill\", \"currentColor\"]],\n      template: function AngleRightIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0);\n          i0.ɵɵelement(1, \"path\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return AngleRightIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngleRightIcon };\n","import * as i0 from '@angular/core';\nimport { Component } from '@angular/core';\nimport { BaseIcon } from 'primeng/baseicon';\nlet BarsIcon = /*#__PURE__*/(() => {\n  class BarsIcon extends BaseIcon {\n    static ɵfac = /* @__PURE__ */(() => {\n      let ɵBarsIcon_BaseFactory;\n      return function BarsIcon_Factory(t) {\n        return (ɵBarsIcon_BaseFactory || (ɵBarsIcon_BaseFactory = i0.ɵɵgetInheritedFactory(BarsIcon)))(t || BarsIcon);\n      };\n    })();\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: BarsIcon,\n      selectors: [[\"BarsIcon\"]],\n      standalone: true,\n      features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 5,\n      consts: [[\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 14 14\", \"fill\", \"none\", \"xmlns\", \"http://www.w3.org/2000/svg\"], [\"fill-rule\", \"evenodd\", \"clip-rule\", \"evenodd\", \"d\", \"M13.3226 3.6129H0.677419C0.497757 3.6129 0.325452 3.54152 0.198411 3.41448C0.0713707 3.28744 0 3.11514 0 2.93548C0 2.75581 0.0713707 2.58351 0.198411 2.45647C0.325452 2.32943 0.497757 2.25806 0.677419 2.25806H13.3226C13.5022 2.25806 13.6745 2.32943 13.8016 2.45647C13.9286 2.58351 14 2.75581 14 2.93548C14 3.11514 13.9286 3.28744 13.8016 3.41448C13.6745 3.54152 13.5022 3.6129 13.3226 3.6129ZM13.3226 7.67741H0.677419C0.497757 7.67741 0.325452 7.60604 0.198411 7.479C0.0713707 7.35196 0 7.17965 0 6.99999C0 6.82033 0.0713707 6.64802 0.198411 6.52098C0.325452 6.39394 0.497757 6.32257 0.677419 6.32257H13.3226C13.5022 6.32257 13.6745 6.39394 13.8016 6.52098C13.9286 6.64802 14 6.82033 14 6.99999C14 7.17965 13.9286 7.35196 13.8016 7.479C13.6745 7.60604 13.5022 7.67741 13.3226 7.67741ZM0.677419 11.7419H13.3226C13.5022 11.7419 13.6745 11.6706 13.8016 11.5435C13.9286 11.4165 14 11.2442 14 11.0645C14 10.8848 13.9286 10.7125 13.8016 10.5855C13.6745 10.4585 13.5022 10.3871 13.3226 10.3871H0.677419C0.497757 10.3871 0.325452 10.4585 0.198411 10.5855C0.0713707 10.7125 0 10.8848 0 11.0645C0 11.2442 0.0713707 11.4165 0.198411 11.5435C0.325452 11.6706 0.497757 11.7419 0.677419 11.7419Z\", \"fill\", \"currentColor\"]],\n      template: function BarsIcon_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵnamespaceSVG();\n          i0.ɵɵelementStart(0, \"svg\", 0);\n          i0.ɵɵelement(1, \"path\", 1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵclassMap(ctx.getClassNames());\n          i0.ɵɵattribute(\"aria-label\", ctx.ariaLabel)(\"aria-hidden\", ctx.ariaHidden)(\"role\", ctx.role);\n        }\n      },\n      encapsulation: 2\n    });\n  }\n  return BarsIcon;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BarsIcon };\n","import { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { TemplateRef, PLATFORM_ID, Directive, Inject, Input, HostListener, NgModule } from '@angular/core';\nimport { DomHandler, ConnectedOverlayScrollHandler } from 'primeng/dom';\nimport { UniqueComponentId, ZIndexUtils } from 'primeng/utils';\nimport * as i1 from 'primeng/api';\n\n/**\n * Tooltip directive provides advisory information for a component.\n * @group Components\n */\nlet Tooltip = /*#__PURE__*/(() => {\n  class Tooltip {\n    platformId;\n    el;\n    zone;\n    config;\n    renderer;\n    viewContainer;\n    /**\n     * Position of the tooltip.\n     * @group Props\n     */\n    tooltipPosition;\n    /**\n     * Event to show the tooltip.\n     * @group Props\n     */\n    tooltipEvent = 'hover';\n    /**\n     *  Target element to attach the overlay, valid values are \"body\", \"target\" or a local ng-F variable of another element (note: use binding with brackets for template variables, e.g. [appendTo]=\"mydiv\" for a div element having #mydiv as variable name).\n     * @group Props\n     */\n    appendTo;\n    /**\n     * Type of CSS position.\n     * @group Props\n     */\n    positionStyle;\n    /**\n     * Style class of the tooltip.\n     * @group Props\n     */\n    tooltipStyleClass;\n    /**\n     * Whether the z-index should be managed automatically to always go on top or have a fixed value.\n     * @group Props\n     */\n    tooltipZIndex;\n    /**\n     * By default the tooltip contents are rendered as text. Set to false to support html tags in the content.\n     * @group Props\n     */\n    escape = true;\n    /**\n     * Delay to show the tooltip in milliseconds.\n     * @group Props\n     */\n    showDelay;\n    /**\n     * Delay to hide the tooltip in milliseconds.\n     * @group Props\n     */\n    hideDelay;\n    /**\n     * Time to wait in milliseconds to hide the tooltip even it is active.\n     * @group Props\n     */\n    life;\n    /**\n     * Specifies the additional vertical offset of the tooltip from its default position.\n     * @group Props\n     */\n    positionTop;\n    /**\n     * Specifies the additional horizontal offset of the tooltip from its default position.\n     * @group Props\n     */\n    positionLeft;\n    /**\n     * Whether to hide tooltip when hovering over tooltip content.\n     * @group Props\n     */\n    autoHide = true;\n    /**\n     * Automatically adjusts the element position when there is not enough space on the selected position.\n     * @group Props\n     */\n    fitContent = true;\n    /**\n     * Whether to hide tooltip on escape key press.\n     * @group Props\n     */\n    hideOnEscape = true;\n    /**\n     * Content of the tooltip.\n     * @group Props\n     */\n    content;\n    /**\n     * When present, it specifies that the component should be disabled.\n     * @defaultValue false\n     * @group Props\n     */\n    get disabled() {\n      return this._disabled;\n    }\n    set disabled(val) {\n      this._disabled = val;\n      this.deactivate();\n    }\n    /**\n     * Specifies the tooltip configuration options for the component.\n     * @group Props\n     */\n    tooltipOptions;\n    _tooltipOptions = {\n      tooltipLabel: null,\n      tooltipPosition: 'right',\n      tooltipEvent: 'hover',\n      appendTo: 'body',\n      positionStyle: null,\n      tooltipStyleClass: null,\n      tooltipZIndex: 'auto',\n      escape: true,\n      disabled: null,\n      showDelay: null,\n      hideDelay: null,\n      positionTop: null,\n      positionLeft: null,\n      life: null,\n      autoHide: true,\n      hideOnEscape: true,\n      id: UniqueComponentId() + '_tooltip'\n    };\n    _disabled;\n    container;\n    styleClass;\n    tooltipText;\n    showTimeout;\n    hideTimeout;\n    active;\n    mouseEnterListener;\n    mouseLeaveListener;\n    containerMouseleaveListener;\n    clickListener;\n    focusListener;\n    blurListener;\n    scrollHandler;\n    resizeListener;\n    constructor(platformId, el, zone, config, renderer, viewContainer) {\n      this.platformId = platformId;\n      this.el = el;\n      this.zone = zone;\n      this.config = config;\n      this.renderer = renderer;\n      this.viewContainer = viewContainer;\n    }\n    ngAfterViewInit() {\n      if (isPlatformBrowser(this.platformId)) {\n        this.zone.runOutsideAngular(() => {\n          if (this.getOption('tooltipEvent') === 'hover') {\n            this.mouseEnterListener = this.onMouseEnter.bind(this);\n            this.mouseLeaveListener = this.onMouseLeave.bind(this);\n            this.clickListener = this.onInputClick.bind(this);\n            this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\n            this.el.nativeElement.addEventListener('click', this.clickListener);\n            this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\n          } else if (this.getOption('tooltipEvent') === 'focus') {\n            this.focusListener = this.onFocus.bind(this);\n            this.blurListener = this.onBlur.bind(this);\n            let target = this.getTarget(this.el.nativeElement);\n            target.addEventListener('focus', this.focusListener);\n            target.addEventListener('blur', this.blurListener);\n          }\n        });\n      }\n    }\n    ngOnChanges(simpleChange) {\n      if (simpleChange.tooltipPosition) {\n        this.setOption({\n          tooltipPosition: simpleChange.tooltipPosition.currentValue\n        });\n      }\n      if (simpleChange.tooltipEvent) {\n        this.setOption({\n          tooltipEvent: simpleChange.tooltipEvent.currentValue\n        });\n      }\n      if (simpleChange.appendTo) {\n        this.setOption({\n          appendTo: simpleChange.appendTo.currentValue\n        });\n      }\n      if (simpleChange.positionStyle) {\n        this.setOption({\n          positionStyle: simpleChange.positionStyle.currentValue\n        });\n      }\n      if (simpleChange.tooltipStyleClass) {\n        this.setOption({\n          tooltipStyleClass: simpleChange.tooltipStyleClass.currentValue\n        });\n      }\n      if (simpleChange.tooltipZIndex) {\n        this.setOption({\n          tooltipZIndex: simpleChange.tooltipZIndex.currentValue\n        });\n      }\n      if (simpleChange.escape) {\n        this.setOption({\n          escape: simpleChange.escape.currentValue\n        });\n      }\n      if (simpleChange.showDelay) {\n        this.setOption({\n          showDelay: simpleChange.showDelay.currentValue\n        });\n      }\n      if (simpleChange.hideDelay) {\n        this.setOption({\n          hideDelay: simpleChange.hideDelay.currentValue\n        });\n      }\n      if (simpleChange.life) {\n        this.setOption({\n          life: simpleChange.life.currentValue\n        });\n      }\n      if (simpleChange.positionTop) {\n        this.setOption({\n          positionTop: simpleChange.positionTop.currentValue\n        });\n      }\n      if (simpleChange.positionLeft) {\n        this.setOption({\n          positionLeft: simpleChange.positionLeft.currentValue\n        });\n      }\n      if (simpleChange.disabled) {\n        this.setOption({\n          disabled: simpleChange.disabled.currentValue\n        });\n      }\n      if (simpleChange.content) {\n        this.setOption({\n          tooltipLabel: simpleChange.content.currentValue\n        });\n        if (this.active) {\n          if (simpleChange.content.currentValue) {\n            if (this.container && this.container.offsetParent) {\n              this.updateText();\n              this.align();\n            } else {\n              this.show();\n            }\n          } else {\n            this.hide();\n          }\n        }\n      }\n      if (simpleChange.autoHide) {\n        this.setOption({\n          autoHide: simpleChange.autoHide.currentValue\n        });\n      }\n      if (simpleChange.id) {\n        this.setOption({\n          id: simpleChange.id.currentValue\n        });\n      }\n      if (simpleChange.tooltipOptions) {\n        this._tooltipOptions = {\n          ...this._tooltipOptions,\n          ...simpleChange.tooltipOptions.currentValue\n        };\n        this.deactivate();\n        if (this.active) {\n          if (this.getOption('tooltipLabel')) {\n            if (this.container && this.container.offsetParent) {\n              this.updateText();\n              this.align();\n            } else {\n              this.show();\n            }\n          } else {\n            this.hide();\n          }\n        }\n      }\n    }\n    isAutoHide() {\n      return this.getOption('autoHide');\n    }\n    onMouseEnter(e) {\n      if (!this.container && !this.showTimeout) {\n        this.activate();\n      }\n    }\n    onMouseLeave(e) {\n      if (!this.isAutoHide()) {\n        const valid = DomHandler.hasClass(e.relatedTarget, 'p-tooltip') || DomHandler.hasClass(e.relatedTarget, 'p-tooltip-text') || DomHandler.hasClass(e.relatedTarget, 'p-tooltip-arrow');\n        !valid && this.deactivate();\n      } else {\n        this.deactivate();\n      }\n    }\n    onFocus(e) {\n      this.activate();\n    }\n    onBlur(e) {\n      this.deactivate();\n    }\n    onInputClick(e) {\n      this.deactivate();\n    }\n    onPressEscape() {\n      if (this.hideOnEscape) {\n        this.deactivate();\n      }\n    }\n    activate() {\n      this.active = true;\n      this.clearHideTimeout();\n      if (this.getOption('showDelay')) this.showTimeout = setTimeout(() => {\n        this.show();\n      }, this.getOption('showDelay'));else this.show();\n      if (this.getOption('life')) {\n        let duration = this.getOption('showDelay') ? this.getOption('life') + this.getOption('showDelay') : this.getOption('life');\n        this.hideTimeout = setTimeout(() => {\n          this.hide();\n        }, duration);\n      }\n    }\n    deactivate() {\n      this.active = false;\n      this.clearShowTimeout();\n      if (this.getOption('hideDelay')) {\n        this.clearHideTimeout(); //life timeout\n        this.hideTimeout = setTimeout(() => {\n          this.hide();\n        }, this.getOption('hideDelay'));\n      } else {\n        this.hide();\n      }\n    }\n    create() {\n      if (this.container) {\n        this.clearHideTimeout();\n        this.remove();\n      }\n      this.container = document.createElement('div');\n      this.container.setAttribute('id', this.getOption('id'));\n      this.container.setAttribute('role', 'tooltip');\n      let tooltipArrow = document.createElement('div');\n      tooltipArrow.className = 'p-tooltip-arrow';\n      this.container.appendChild(tooltipArrow);\n      this.tooltipText = document.createElement('div');\n      this.tooltipText.className = 'p-tooltip-text';\n      this.updateText();\n      if (this.getOption('positionStyle')) {\n        this.container.style.position = this.getOption('positionStyle');\n      }\n      this.container.appendChild(this.tooltipText);\n      if (this.getOption('appendTo') === 'body') document.body.appendChild(this.container);else if (this.getOption('appendTo') === 'target') DomHandler.appendChild(this.container, this.el.nativeElement);else DomHandler.appendChild(this.container, this.getOption('appendTo'));\n      this.container.style.display = 'inline-block';\n      if (this.fitContent) {\n        this.container.style.width = 'fit-content';\n      }\n      if (this.isAutoHide()) {\n        this.container.style.pointerEvents = 'none';\n      } else {\n        this.container.style.pointerEvents = 'unset';\n        this.bindContainerMouseleaveListener();\n      }\n    }\n    bindContainerMouseleaveListener() {\n      if (!this.containerMouseleaveListener) {\n        const targetEl = this.container ?? this.container.nativeElement;\n        this.containerMouseleaveListener = this.renderer.listen(targetEl, 'mouseleave', e => {\n          this.deactivate();\n        });\n      }\n    }\n    unbindContainerMouseleaveListener() {\n      if (this.containerMouseleaveListener) {\n        this.bindContainerMouseleaveListener();\n        this.containerMouseleaveListener = null;\n      }\n    }\n    show() {\n      if (!this.getOption('tooltipLabel') || this.getOption('disabled')) {\n        return;\n      }\n      this.create();\n      this.align();\n      DomHandler.fadeIn(this.container, 250);\n      if (this.getOption('tooltipZIndex') === 'auto') ZIndexUtils.set('tooltip', this.container, this.config.zIndex.tooltip);else this.container.style.zIndex = this.getOption('tooltipZIndex');\n      this.bindDocumentResizeListener();\n      this.bindScrollListener();\n    }\n    hide() {\n      if (this.getOption('tooltipZIndex') === 'auto') {\n        ZIndexUtils.clear(this.container);\n      }\n      this.remove();\n    }\n    updateText() {\n      const content = this.getOption('tooltipLabel');\n      if (content instanceof TemplateRef) {\n        const embeddedViewRef = this.viewContainer.createEmbeddedView(content);\n        embeddedViewRef.detectChanges();\n        embeddedViewRef.rootNodes.forEach(node => this.tooltipText.appendChild(node));\n      } else if (this.getOption('escape')) {\n        this.tooltipText.innerHTML = '';\n        this.tooltipText.appendChild(document.createTextNode(content));\n      } else {\n        this.tooltipText.innerHTML = content;\n      }\n    }\n    align() {\n      let position = this.getOption('tooltipPosition');\n      switch (position) {\n        case 'top':\n          this.alignTop();\n          if (this.isOutOfBounds()) {\n            this.alignBottom();\n            if (this.isOutOfBounds()) {\n              this.alignRight();\n              if (this.isOutOfBounds()) {\n                this.alignLeft();\n              }\n            }\n          }\n          break;\n        case 'bottom':\n          this.alignBottom();\n          if (this.isOutOfBounds()) {\n            this.alignTop();\n            if (this.isOutOfBounds()) {\n              this.alignRight();\n              if (this.isOutOfBounds()) {\n                this.alignLeft();\n              }\n            }\n          }\n          break;\n        case 'left':\n          this.alignLeft();\n          if (this.isOutOfBounds()) {\n            this.alignRight();\n            if (this.isOutOfBounds()) {\n              this.alignTop();\n              if (this.isOutOfBounds()) {\n                this.alignBottom();\n              }\n            }\n          }\n          break;\n        case 'right':\n          this.alignRight();\n          if (this.isOutOfBounds()) {\n            this.alignLeft();\n            if (this.isOutOfBounds()) {\n              this.alignTop();\n              if (this.isOutOfBounds()) {\n                this.alignBottom();\n              }\n            }\n          }\n          break;\n      }\n    }\n    getHostOffset() {\n      if (this.getOption('appendTo') === 'body' || this.getOption('appendTo') === 'target') {\n        let offset = this.el.nativeElement.getBoundingClientRect();\n        let targetLeft = offset.left + DomHandler.getWindowScrollLeft();\n        let targetTop = offset.top + DomHandler.getWindowScrollTop();\n        return {\n          left: targetLeft,\n          top: targetTop\n        };\n      } else {\n        return {\n          left: 0,\n          top: 0\n        };\n      }\n    }\n    alignRight() {\n      this.preAlign('right');\n      let hostOffset = this.getHostOffset();\n      let left = hostOffset.left + DomHandler.getOuterWidth(this.el.nativeElement);\n      let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n      this.container.style.left = left + this.getOption('positionLeft') + 'px';\n      this.container.style.top = top + this.getOption('positionTop') + 'px';\n    }\n    alignLeft() {\n      this.preAlign('left');\n      let hostOffset = this.getHostOffset();\n      let left = hostOffset.left - DomHandler.getOuterWidth(this.container);\n      let top = hostOffset.top + (DomHandler.getOuterHeight(this.el.nativeElement) - DomHandler.getOuterHeight(this.container)) / 2;\n      this.container.style.left = left + this.getOption('positionLeft') + 'px';\n      this.container.style.top = top + this.getOption('positionTop') + 'px';\n    }\n    alignTop() {\n      this.preAlign('top');\n      let hostOffset = this.getHostOffset();\n      let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n      let top = hostOffset.top - DomHandler.getOuterHeight(this.container);\n      this.container.style.left = left + this.getOption('positionLeft') + 'px';\n      this.container.style.top = top + this.getOption('positionTop') + 'px';\n    }\n    alignBottom() {\n      this.preAlign('bottom');\n      let hostOffset = this.getHostOffset();\n      let left = hostOffset.left + (DomHandler.getOuterWidth(this.el.nativeElement) - DomHandler.getOuterWidth(this.container)) / 2;\n      let top = hostOffset.top + DomHandler.getOuterHeight(this.el.nativeElement);\n      this.container.style.left = left + this.getOption('positionLeft') + 'px';\n      this.container.style.top = top + this.getOption('positionTop') + 'px';\n    }\n    setOption(option) {\n      this._tooltipOptions = {\n        ...this._tooltipOptions,\n        ...option\n      };\n    }\n    getOption(option) {\n      return this._tooltipOptions[option];\n    }\n    getTarget(el) {\n      return DomHandler.hasClass(el, 'p-inputwrapper') ? DomHandler.findSingle(el, 'input') : el;\n    }\n    preAlign(position) {\n      this.container.style.left = -999 + 'px';\n      this.container.style.top = -999 + 'px';\n      let defaultClassName = 'p-tooltip p-component p-tooltip-' + position;\n      this.container.className = this.getOption('tooltipStyleClass') ? defaultClassName + ' ' + this.getOption('tooltipStyleClass') : defaultClassName;\n    }\n    isOutOfBounds() {\n      let offset = this.container.getBoundingClientRect();\n      let targetTop = offset.top;\n      let targetLeft = offset.left;\n      let width = DomHandler.getOuterWidth(this.container);\n      let height = DomHandler.getOuterHeight(this.container);\n      let viewport = DomHandler.getViewport();\n      return targetLeft + width > viewport.width || targetLeft < 0 || targetTop < 0 || targetTop + height > viewport.height;\n    }\n    onWindowResize(e) {\n      this.hide();\n    }\n    bindDocumentResizeListener() {\n      this.zone.runOutsideAngular(() => {\n        this.resizeListener = this.onWindowResize.bind(this);\n        window.addEventListener('resize', this.resizeListener);\n      });\n    }\n    unbindDocumentResizeListener() {\n      if (this.resizeListener) {\n        window.removeEventListener('resize', this.resizeListener);\n        this.resizeListener = null;\n      }\n    }\n    bindScrollListener() {\n      if (!this.scrollHandler) {\n        this.scrollHandler = new ConnectedOverlayScrollHandler(this.el.nativeElement, () => {\n          if (this.container) {\n            this.hide();\n          }\n        });\n      }\n      this.scrollHandler.bindScrollListener();\n    }\n    unbindScrollListener() {\n      if (this.scrollHandler) {\n        this.scrollHandler.unbindScrollListener();\n      }\n    }\n    unbindEvents() {\n      if (this.getOption('tooltipEvent') === 'hover') {\n        this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\n        this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\n        this.el.nativeElement.removeEventListener('click', this.clickListener);\n      } else if (this.getOption('tooltipEvent') === 'focus') {\n        let target = this.getTarget(this.el.nativeElement);\n        target.removeEventListener('focus', this.focusListener);\n        target.removeEventListener('blur', this.blurListener);\n      }\n      this.unbindDocumentResizeListener();\n    }\n    remove() {\n      if (this.container && this.container.parentElement) {\n        if (this.getOption('appendTo') === 'body') document.body.removeChild(this.container);else if (this.getOption('appendTo') === 'target') this.el.nativeElement.removeChild(this.container);else DomHandler.removeChild(this.container, this.getOption('appendTo'));\n      }\n      this.unbindDocumentResizeListener();\n      this.unbindScrollListener();\n      this.unbindContainerMouseleaveListener();\n      this.clearTimeouts();\n      this.container = null;\n      this.scrollHandler = null;\n    }\n    clearShowTimeout() {\n      if (this.showTimeout) {\n        clearTimeout(this.showTimeout);\n        this.showTimeout = null;\n      }\n    }\n    clearHideTimeout() {\n      if (this.hideTimeout) {\n        clearTimeout(this.hideTimeout);\n        this.hideTimeout = null;\n      }\n    }\n    clearTimeouts() {\n      this.clearShowTimeout();\n      this.clearHideTimeout();\n    }\n    ngOnDestroy() {\n      this.unbindEvents();\n      if (this.container) {\n        ZIndexUtils.clear(this.container);\n      }\n      this.remove();\n      if (this.scrollHandler) {\n        this.scrollHandler.destroy();\n        this.scrollHandler = null;\n      }\n    }\n    static ɵfac = function Tooltip_Factory(t) {\n      return new (t || Tooltip)(i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone), i0.ɵɵdirectiveInject(i1.PrimeNGConfig), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ViewContainerRef));\n    };\n    static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n      type: Tooltip,\n      selectors: [[\"\", \"pTooltip\", \"\"]],\n      hostAttrs: [1, \"p-element\"],\n      hostBindings: function Tooltip_HostBindings(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵlistener(\"keydown.escape\", function Tooltip_keydown_escape_HostBindingHandler($event) {\n            return ctx.onPressEscape($event);\n          }, false, i0.ɵɵresolveDocument);\n        }\n      },\n      inputs: {\n        tooltipPosition: \"tooltipPosition\",\n        tooltipEvent: \"tooltipEvent\",\n        appendTo: \"appendTo\",\n        positionStyle: \"positionStyle\",\n        tooltipStyleClass: \"tooltipStyleClass\",\n        tooltipZIndex: \"tooltipZIndex\",\n        escape: \"escape\",\n        showDelay: \"showDelay\",\n        hideDelay: \"hideDelay\",\n        life: \"life\",\n        positionTop: \"positionTop\",\n        positionLeft: \"positionLeft\",\n        autoHide: \"autoHide\",\n        fitContent: \"fitContent\",\n        hideOnEscape: \"hideOnEscape\",\n        content: [i0.ɵɵInputFlags.None, \"pTooltip\", \"content\"],\n        disabled: [i0.ɵɵInputFlags.None, \"tooltipDisabled\", \"disabled\"],\n        tooltipOptions: \"tooltipOptions\"\n      },\n      features: [i0.ɵɵNgOnChangesFeature]\n    });\n  }\n  return Tooltip;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet TooltipModule = /*#__PURE__*/(() => {\n  class TooltipModule {\n    static ɵfac = function TooltipModule_Factory(t) {\n      return new (t || TooltipModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: TooltipModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule]\n    });\n  }\n  return TooltipModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Tooltip, TooltipModule };\n","import * as i1 from '@angular/common';\nimport { isPlatformBrowser, DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, ViewEncapsulation, Input, Output, ViewChild, signal, effect, PLATFORM_ID, ChangeDetectionStrategy, Inject, ContentChildren, NgModule } from '@angular/core';\nimport * as i2 from '@angular/router';\nimport { RouterModule } from '@angular/router';\nimport * as i5 from 'primeng/api';\nimport { PrimeTemplate, SharedModule } from 'primeng/api';\nimport { DomHandler } from 'primeng/dom';\nimport { AngleDownIcon } from 'primeng/icons/angledown';\nimport { AngleRightIcon } from 'primeng/icons/angleright';\nimport { BarsIcon } from 'primeng/icons/bars';\nimport * as i3 from 'primeng/ripple';\nimport { RippleModule } from 'primeng/ripple';\nimport * as i4 from 'primeng/tooltip';\nimport { TooltipModule } from 'primeng/tooltip';\nimport { ObjectUtils, UniqueComponentId, ZIndexUtils } from 'primeng/utils';\nimport { Subject, interval } from 'rxjs';\nimport { debounce, filter } from 'rxjs/operators';\nconst _c0 = [\"menubar\"];\nfunction MenubarSub_ng_template_2_li_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"li\", 5);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵstyleMap(ctx_r4.getItemProp(processedItem_r2, \"style\"));\n    i0.ɵɵproperty(\"ngClass\", ctx_r4.getSeparatorItemClass(processedItem_r2));\n    i0.ɵɵattribute(\"id\", ctx_r4.getItemId(processedItem_r2))(\"data-pc-section\", \"separator\");\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 18);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r13.getItemProp(processedItem_r2, \"icon\"))(\"ngStyle\", ctx_r13.getItemProp(processedItem_r2, \"iconStyle\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\")(\"aria-hidden\", true)(\"tabindex\", -1);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.getItemLabel(processedItem_r2), \" \");\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r15.getItemLabel(processedItem_r2), i0.ɵɵsanitizeHtml);\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r17.getItemProp(processedItem_r2, \"badgeStyleClass\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r17.getItemProp(processedItem_r2, \"badge\"));\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_ng_container_1_AngleDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleDownIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-submenu-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"submenuicon\")(\"aria-hidden\", true);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_ng_container_1_AngleRightIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleRightIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-submenu-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"submenuicon\")(\"aria-hidden\", true);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_ng_container_1_AngleDownIcon_1_Template, 1, 3, \"AngleDownIcon\", 23)(2, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_ng_container_1_AngleRightIcon_2_Template, 1, 3, \"AngleRightIcon\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r23.root);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r23.root);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_2_ng_template_0_Template(rf, ctx) {}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"data-pc-section\", \"submenuicon\")(\"aria-hidden\", true);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_ng_container_1_Template, 3, 2, \"ng-container\", 9)(2, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_2_Template, 1, 2, null, 22);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(5);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r18.submenuIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r18.submenuIconTemplate);\n  }\n}\nconst _c1 = a1 => ({\n  \"p-menuitem-link\": true,\n  \"p-disabled\": a1\n});\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 13);\n    i0.ɵɵtemplate(1, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_span_1_Template, 1, 5, \"span\", 14)(2, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_span_2_Template, 2, 2, \"span\", 15)(3, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_template_3_Template, 1, 2, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor)(5, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_span_5_Template, 2, 2, \"span\", 17)(6, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_ng_container_6_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r16 = i0.ɵɵreference(4);\n    const processedItem_r2 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"target\", ctx_r11.getItemProp(processedItem_r2, \"target\"))(\"ngClass\", i0.ɵɵpureFunction1(12, _c1, ctx_r11.getItemProp(processedItem_r2, \"disabled\")));\n    i0.ɵɵattribute(\"href\", ctx_r11.getItemProp(processedItem_r2, \"url\"), i0.ɵɵsanitizeUrl)(\"aria-hidden\", true)(\"data-automationid\", ctx_r11.getItemProp(processedItem_r2, \"automationId\"))(\"data-pc-section\", \"action\")(\"tabindex\", -1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.getItemProp(processedItem_r2, \"icon\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.getItemProp(processedItem_r2, \"escape\"))(\"ngIfElse\", _r16);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.getItemProp(processedItem_r2, \"badge\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.isItemGroup(processedItem_r2));\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 18);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r29 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r29.getItemProp(processedItem_r2, \"icon\"))(\"ngStyle\", ctx_r29.getItemProp(processedItem_r2, \"iconStyle\"));\n    i0.ɵɵattribute(\"data-pc-section\", \"icon\")(\"aria-hidden\", true)(\"tabindex\", -1);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r30 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r30.getItemLabel(processedItem_r2));\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 20);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"innerHTML\", ctx_r31.getItemLabel(processedItem_r2), i0.ɵɵsanitizeHtml);\n    i0.ɵɵattribute(\"data-pc-section\", \"label\");\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(4).$implicit;\n    const ctx_r33 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r33.getItemProp(processedItem_r2, \"badgeStyleClass\"));\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(ctx_r33.getItemProp(processedItem_r2, \"badge\"));\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_ng_container_1_AngleDownIcon_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleDownIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-submenu-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"submenuicon\")(\"aria-hidden\", true);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_ng_container_1_AngleRightIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"AngleRightIcon\", 24);\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"styleClass\", \"p-submenu-icon\");\n    i0.ɵɵattribute(\"data-pc-section\", \"submenuicon\")(\"aria-hidden\", true);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_ng_container_1_AngleDownIcon_1_Template, 1, 3, \"AngleDownIcon\", 23)(2, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_ng_container_1_AngleRightIcon_2_Template, 1, 3, \"AngleRightIcon\", 23);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r39.root);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r39.root);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_2_ng_template_0_Template(rf, ctx) {}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_2_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n  if (rf & 2) {\n    i0.ɵɵproperty(\"data-pc-section\", \"submenuicon\")(\"aria-hidden\", true);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_ng_container_1_Template, 3, 2, \"ng-container\", 9)(2, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_2_Template, 1, 2, null, 22);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext(5);\n    const _r0 = i0.ɵɵreference(1);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !_r0.submenuIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r0.submenuIconTemplate);\n  }\n}\nconst _c2 = () => ({\n  exact: false\n});\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 25);\n    i0.ɵɵtemplate(1, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_span_1_Template, 1, 5, \"span\", 14)(2, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_span_2_Template, 2, 1, \"span\", 15)(3, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_template_3_Template, 1, 2, \"ng-template\", null, 26, i0.ɵɵtemplateRefExtractor)(5, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_span_5_Template, 2, 2, \"span\", 17)(6, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_ng_container_6_Template, 3, 2, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r32 = i0.ɵɵreference(4);\n    const processedItem_r2 = i0.ɵɵnextContext(3).$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", ctx_r12.getItemProp(processedItem_r2, \"routerLink\"))(\"queryParams\", ctx_r12.getItemProp(processedItem_r2, \"queryParams\"))(\"routerLinkActive\", \"p-menuitem-link-active\")(\"routerLinkActiveOptions\", ctx_r12.getItemProp(processedItem_r2, \"routerLinkActiveOptions\") || i0.ɵɵpureFunction0(21, _c2))(\"target\", ctx_r12.getItemProp(processedItem_r2, \"target\"))(\"ngClass\", i0.ɵɵpureFunction1(22, _c1, ctx_r12.getItemProp(processedItem_r2, \"disabled\")))(\"fragment\", ctx_r12.getItemProp(processedItem_r2, \"fragment\"))(\"queryParamsHandling\", ctx_r12.getItemProp(processedItem_r2, \"queryParamsHandling\"))(\"preserveFragment\", ctx_r12.getItemProp(processedItem_r2, \"preserveFragment\"))(\"skipLocationChange\", ctx_r12.getItemProp(processedItem_r2, \"skipLocationChange\"))(\"replaceUrl\", ctx_r12.getItemProp(processedItem_r2, \"replaceUrl\"))(\"state\", ctx_r12.getItemProp(processedItem_r2, \"state\"));\n    i0.ɵɵattribute(\"data-automationid\", ctx_r12.getItemProp(processedItem_r2, \"automationId\"))(\"tabindex\", -1)(\"aria-hidden\", true)(\"data-pc-section\", \"action\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.getItemProp(processedItem_r2, \"icon\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.getItemProp(processedItem_r2, \"escape\"))(\"ngIfElse\", _r32);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.getItemProp(processedItem_r2, \"badge\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.isItemGroup(processedItem_r2));\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenubarSub_ng_template_2_li_1_ng_container_3_a_1_Template, 7, 14, \"a\", 11)(2, MenubarSub_ng_template_2_li_1_ng_container_3_a_2_Template, 7, 24, \"a\", 12);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r8.getItemProp(processedItem_r2, \"routerLink\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.getItemProp(processedItem_r2, \"routerLink\"));\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_ng_container_4_1_ng_template_0_Template(rf, ctx) {}\nfunction MenubarSub_ng_template_2_li_1_ng_container_4_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MenubarSub_ng_template_2_li_1_ng_container_4_1_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nconst _c3 = a0 => ({\n  $implicit: a0\n});\nfunction MenubarSub_ng_template_2_li_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, MenubarSub_ng_template_2_li_1_ng_container_4_1_Template, 1, 0, null, 27);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r9.itemTemplate)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(2, _c3, processedItem_r2.item));\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_p_menubarSub_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"p-menubarSub\", 28);\n    i0.ɵɵlistener(\"itemClick\", function MenubarSub_ng_template_2_li_1_p_menubarSub_5_Template_p_menubarSub_itemClick_0_listener($event) {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r49 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r49.itemClick.emit($event));\n    })(\"itemMouseEnter\", function MenubarSub_ng_template_2_li_1_p_menubarSub_5_Template_p_menubarSub_itemMouseEnter_0_listener($event) {\n      i0.ɵɵrestoreView(_r50);\n      const ctx_r51 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r51.onItemMouseEnter($event));\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const processedItem_r2 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"itemTemplate\", ctx_r10.itemTemplate)(\"items\", processedItem_r2.items)(\"mobileActive\", ctx_r10.mobileActive)(\"autoDisplay\", ctx_r10.autoDisplay)(\"menuId\", ctx_r10.menuId)(\"activeItemPath\", ctx_r10.activeItemPath)(\"focusedItemId\", ctx_r10.focusedItemId)(\"level\", ctx_r10.level + 1);\n  }\n}\nfunction MenubarSub_ng_template_2_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r55 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 6, 7)(2, \"div\", 8);\n    i0.ɵɵlistener(\"click\", function MenubarSub_ng_template_2_li_1_Template_div_click_2_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const processedItem_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r53 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r53.onItemClick($event, processedItem_r2));\n    })(\"mouseenter\", function MenubarSub_ng_template_2_li_1_Template_div_mouseenter_2_listener($event) {\n      i0.ɵɵrestoreView(_r55);\n      const processedItem_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r56 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r56.onItemMouseEnter({\n        $event: $event,\n        processedItem: processedItem_r2\n      }));\n    });\n    i0.ɵɵtemplate(3, MenubarSub_ng_template_2_li_1_ng_container_3_Template, 3, 2, \"ng-container\", 9)(4, MenubarSub_ng_template_2_li_1_ng_container_4_Template, 2, 4, \"ng-container\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, MenubarSub_ng_template_2_li_1_p_menubarSub_5_Template, 1, 8, \"p-menubarSub\", 10);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r58 = i0.ɵɵnextContext();\n    const processedItem_r2 = ctx_r58.$implicit;\n    const index_r3 = ctx_r58.index;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(ctx_r5.getItemProp(processedItem_r2, \"styleClass\"));\n    i0.ɵɵproperty(\"ngStyle\", ctx_r5.getItemProp(processedItem_r2, \"style\"))(\"ngClass\", ctx_r5.getItemClass(processedItem_r2))(\"tooltipOptions\", ctx_r5.getItemProp(processedItem_r2, \"tooltipOptions\"));\n    i0.ɵɵattribute(\"id\", ctx_r5.getItemId(processedItem_r2))(\"data-pc-section\", \"menuitem\")(\"data-p-highlight\", ctx_r5.isItemActive(processedItem_r2))(\"data-p-focused\", ctx_r5.isItemFocused(processedItem_r2))(\"data-p-disabled\", ctx_r5.isItemDisabled(processedItem_r2))(\"aria-label\", ctx_r5.getItemLabel(processedItem_r2))(\"aria-disabled\", ctx_r5.isItemDisabled(processedItem_r2) || undefined)(\"aria-haspopup\", ctx_r5.isItemGroup(processedItem_r2) && !ctx_r5.getItemProp(processedItem_r2, \"to\") ? \"menu\" : undefined)(\"aria-expanded\", ctx_r5.isItemGroup(processedItem_r2) ? ctx_r5.isItemActive(processedItem_r2) : undefined)(\"aria-level\", ctx_r5.level + 1)(\"aria-setsize\", ctx_r5.getAriaSetSize())(\"aria-posinset\", ctx_r5.getAriaPosInset(index_r3));\n    i0.ɵɵadvance(2);\n    i0.ɵɵattribute(\"data-pc-section\", \"content\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.itemTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.itemTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.isItemVisible(processedItem_r2) && ctx_r5.isItemGroup(processedItem_r2));\n  }\n}\nfunction MenubarSub_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, MenubarSub_ng_template_2_li_0_Template, 1, 5, \"li\", 3)(1, MenubarSub_ng_template_2_li_1_Template, 6, 21, \"li\", 4);\n  }\n  if (rf & 2) {\n    const processedItem_r2 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isItemVisible(processedItem_r2) && ctx_r1.getItemProp(processedItem_r2, \"separator\"));\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.isItemVisible(processedItem_r2) && !ctx_r1.getItemProp(processedItem_r2, \"separator\"));\n  }\n}\nconst _c4 = (a0, a1) => ({\n  \"p-submenu-list\": a0,\n  \"p-menubar-root-list\": a1\n});\nconst _c5 = [\"menubutton\"];\nconst _c6 = [\"rootmenu\"];\nfunction Menubar_div_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Menubar_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵtemplate(1, Menubar_div_1_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r0.startTemplate);\n  }\n}\nfunction Menubar_a_2_BarsIcon_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"BarsIcon\");\n  }\n}\nfunction Menubar_a_2_3_ng_template_0_Template(rf, ctx) {}\nfunction Menubar_a_2_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, Menubar_a_2_3_ng_template_0_Template, 0, 0, \"ng-template\");\n  }\n}\nfunction Menubar_a_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"a\", 9, 10);\n    i0.ɵɵlistener(\"click\", function Menubar_a_2_Template_a_click_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.menuButtonClick($event));\n    })(\"keydown\", function Menubar_a_2_Template_a_keydown_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r13.menuButtonKeydown($event));\n    });\n    i0.ɵɵtemplate(2, Menubar_a_2_BarsIcon_2_Template, 1, 0, \"BarsIcon\", 11)(3, Menubar_a_2_3_Template, 1, 0, null, 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"aria-haspopup\", ctx_r1.model.length && ctx_r1.model.length > 0 ? true : false)(\"aria-expanded\", ctx_r1.mobileActive)(\"aria-controls\", ctx_r1.id)(\"aria-label\", ctx_r1.config.translation.aria.navigation)(\"data-pc-section\", \"button\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.menuIconTemplate);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r1.menuIconTemplate);\n  }\n}\nfunction Menubar_div_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction Menubar_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, Menubar_div_5_ng_container_1_Template, 1, 0, \"ng-container\", 8);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r3.endTemplate);\n  }\n}\nfunction Menubar_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c7 = a1 => ({\n  \"p-menubar p-component\": true,\n  \"p-menubar-mobile-active\": a1\n});\nconst _c8 = [\"*\"];\nlet MenubarService = /*#__PURE__*/(() => {\n  class MenubarService {\n    autoHide;\n    autoHideDelay;\n    mouseLeaves = new Subject();\n    mouseLeft$ = this.mouseLeaves.pipe(debounce(() => interval(this.autoHideDelay)), filter(mouseLeft => this.autoHide && mouseLeft));\n    static ɵfac = function MenubarService_Factory(t) {\n      return new (t || MenubarService)();\n    };\n    static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n      token: MenubarService,\n      factory: MenubarService.ɵfac\n    });\n  }\n  return MenubarService;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenubarSub = /*#__PURE__*/(() => {\n  class MenubarSub {\n    el;\n    renderer;\n    cd;\n    menubarService;\n    items;\n    itemTemplate;\n    root = false;\n    autoZIndex = true;\n    baseZIndex = 0;\n    mobileActive;\n    autoDisplay;\n    menuId;\n    ariaLabel;\n    ariaLabelledBy;\n    level = 0;\n    focusedItemId;\n    activeItemPath;\n    submenuIconTemplate;\n    itemClick = new EventEmitter();\n    itemMouseEnter = new EventEmitter();\n    menuFocus = new EventEmitter();\n    menuBlur = new EventEmitter();\n    menuKeydown = new EventEmitter();\n    menubarViewChild;\n    mouseLeaveSubscriber;\n    constructor(el, renderer, cd, menubarService) {\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.menubarService = menubarService;\n    }\n    ngOnInit() {\n      this.mouseLeaveSubscriber = this.menubarService.mouseLeft$.subscribe(() => {\n        this.cd.markForCheck();\n      });\n    }\n    onItemClick(event, processedItem) {\n      this.getItemProp(processedItem, 'command', {\n        originalEvent: event,\n        item: processedItem.item\n      });\n      this.itemClick.emit({\n        originalEvent: event,\n        processedItem,\n        isFocus: true\n      });\n    }\n    getItemProp(processedItem, name, params = null) {\n      return processedItem && processedItem.item ? ObjectUtils.getItemValue(processedItem.item[name], params) : undefined;\n    }\n    getItemId(processedItem) {\n      return processedItem.item && processedItem.item?.id ? processedItem.item.id : `${this.menuId}_${processedItem.key}`;\n    }\n    getItemKey(processedItem) {\n      return this.getItemId(processedItem);\n    }\n    getItemClass(processedItem) {\n      return {\n        ...this.getItemProp(processedItem, 'class'),\n        'p-menuitem': true,\n        'p-highlight': this.isItemActive(processedItem),\n        'p-menuitem-active': this.isItemActive(processedItem),\n        'p-focus': this.isItemFocused(processedItem),\n        'p-disabled': this.isItemDisabled(processedItem)\n      };\n    }\n    getItemLabel(processedItem) {\n      return this.getItemProp(processedItem, 'label');\n    }\n    getSeparatorItemClass(processedItem) {\n      return {\n        ...this.getItemProp(processedItem, 'class'),\n        'p-menuitem-separator': true\n      };\n    }\n    isItemVisible(processedItem) {\n      return this.getItemProp(processedItem, 'visible') !== false;\n    }\n    isItemActive(processedItem) {\n      if (this.activeItemPath) {\n        return this.activeItemPath.some(path => path.key === processedItem.key);\n      }\n    }\n    isItemDisabled(processedItem) {\n      return this.getItemProp(processedItem, 'disabled');\n    }\n    isItemFocused(processedItem) {\n      return this.focusedItemId === this.getItemId(processedItem);\n    }\n    isItemGroup(processedItem) {\n      return ObjectUtils.isNotEmpty(processedItem.items);\n    }\n    getAriaSetSize() {\n      return this.items.filter(processedItem => this.isItemVisible(processedItem) && !this.getItemProp(processedItem, 'separator')).length;\n    }\n    getAriaPosInset(index) {\n      return index - this.items.slice(0, index).filter(processedItem => this.isItemVisible(processedItem) && this.getItemProp(processedItem, 'separator')).length + 1;\n    }\n    onItemMouseLeave() {\n      this.menubarService.mouseLeaves.next(true);\n    }\n    onItemMouseEnter(param) {\n      if (this.autoDisplay) {\n        this.menubarService.mouseLeaves.next(false);\n        const {\n          event,\n          processedItem\n        } = param;\n        this.itemMouseEnter.emit({\n          originalEvent: event,\n          processedItem\n        });\n      }\n    }\n    ngOnDestroy() {\n      this.mouseLeaveSubscriber?.unsubscribe();\n    }\n    static ɵfac = function MenubarSub_Factory(t) {\n      return new (t || MenubarSub)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(MenubarService));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: MenubarSub,\n      selectors: [[\"p-menubarSub\"]],\n      viewQuery: function MenubarSub_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menubarViewChild = _t.first);\n        }\n      },\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        items: \"items\",\n        itemTemplate: \"itemTemplate\",\n        root: \"root\",\n        autoZIndex: \"autoZIndex\",\n        baseZIndex: \"baseZIndex\",\n        mobileActive: \"mobileActive\",\n        autoDisplay: \"autoDisplay\",\n        menuId: \"menuId\",\n        ariaLabel: \"ariaLabel\",\n        ariaLabelledBy: \"ariaLabelledBy\",\n        level: \"level\",\n        focusedItemId: \"focusedItemId\",\n        activeItemPath: \"activeItemPath\",\n        submenuIconTemplate: \"submenuIconTemplate\"\n      },\n      outputs: {\n        itemClick: \"itemClick\",\n        itemMouseEnter: \"itemMouseEnter\",\n        menuFocus: \"menuFocus\",\n        menuBlur: \"menuBlur\",\n        menuKeydown: \"menuKeydown\"\n      },\n      decls: 3,\n      vars: 11,\n      consts: [[\"role\", \"menubar\", 3, \"ngClass\", \"tabindex\", \"focus\", \"blur\", \"keydown\"], [\"menubar\", \"\"], [\"ngFor\", \"\", 3, \"ngForOf\"], [\"role\", \"separator\", 3, \"style\", \"ngClass\", 4, \"ngIf\"], [\"role\", \"menuitem\", \"pTooltip\", \"\", 3, \"ngStyle\", \"ngClass\", \"class\", \"tooltipOptions\", 4, \"ngIf\"], [\"role\", \"separator\", 3, \"ngClass\"], [\"role\", \"menuitem\", \"pTooltip\", \"\", 3, \"ngStyle\", \"ngClass\", \"tooltipOptions\"], [\"listItem\", \"\"], [1, \"p-menuitem-content\", 3, \"click\", \"mouseenter\"], [4, \"ngIf\"], [3, \"itemTemplate\", \"items\", \"mobileActive\", \"autoDisplay\", \"menuId\", \"activeItemPath\", \"focusedItemId\", \"level\", \"itemClick\", \"itemMouseEnter\", 4, \"ngIf\"], [\"pRipple\", \"\", 3, \"target\", \"ngClass\", 4, \"ngIf\"], [\"pRipple\", \"\", 3, \"routerLink\", \"queryParams\", \"routerLinkActive\", \"routerLinkActiveOptions\", \"target\", \"ngClass\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\", 4, \"ngIf\"], [\"pRipple\", \"\", 3, \"target\", \"ngClass\"], [\"class\", \"p-menuitem-icon\", 3, \"ngClass\", \"ngStyle\", 4, \"ngIf\"], [\"class\", \"p-menuitem-text\", 4, \"ngIf\", \"ngIfElse\"], [\"htmlLabel\", \"\"], [\"class\", \"p-menuitem-badge\", 3, \"ngClass\", 4, \"ngIf\"], [1, \"p-menuitem-icon\", 3, \"ngClass\", \"ngStyle\"], [1, \"p-menuitem-text\"], [1, \"p-menuitem-text\", 3, \"innerHTML\"], [1, \"p-menuitem-badge\", 3, \"ngClass\"], [4, \"ngTemplateOutlet\"], [3, \"styleClass\", 4, \"ngIf\"], [3, \"styleClass\"], [\"pRipple\", \"\", 3, \"routerLink\", \"queryParams\", \"routerLinkActive\", \"routerLinkActiveOptions\", \"target\", \"ngClass\", \"fragment\", \"queryParamsHandling\", \"preserveFragment\", \"skipLocationChange\", \"replaceUrl\", \"state\"], [\"htmlRouteLabel\", \"\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [3, \"itemTemplate\", \"items\", \"mobileActive\", \"autoDisplay\", \"menuId\", \"activeItemPath\", \"focusedItemId\", \"level\", \"itemClick\", \"itemMouseEnter\"]],\n      template: function MenubarSub_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ul\", 0, 1);\n          i0.ɵɵlistener(\"focus\", function MenubarSub_Template_ul_focus_0_listener($event) {\n            return ctx.menuFocus.emit($event);\n          })(\"blur\", function MenubarSub_Template_ul_blur_0_listener($event) {\n            return ctx.menuBlur.emit($event);\n          })(\"keydown\", function MenubarSub_Template_ul_keydown_0_listener($event) {\n            return ctx.menuKeydown.emit($event);\n          });\n          i0.ɵɵtemplate(2, MenubarSub_ng_template_2_Template, 2, 2, \"ng-template\", 2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(8, _c4, !ctx.root, ctx.root))(\"tabindex\", 0);\n          i0.ɵɵattribute(\"data-pc-section\", \"menu\")(\"aria-label\", ctx.ariaLabel)(\"aria-labelledBy\", ctx.ariaLabelledBy)(\"id\", ctx.menuId)(\"aria-activedescendant\", ctx.focusedItemId);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: () => [i1.NgClass, i1.NgForOf, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, i2.RouterLink, i2.RouterLinkActive, i3.Ripple, i4.Tooltip, AngleDownIcon, AngleRightIcon, MenubarSub],\n      encapsulation: 2\n    });\n  }\n  return MenubarSub;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n/**\n * Menubar is a horizontal menu component.\n * @group Components\n */\nlet Menubar = /*#__PURE__*/(() => {\n  class Menubar {\n    document;\n    platformId;\n    el;\n    renderer;\n    cd;\n    config;\n    menubarService;\n    /**\n     * An array of menuitems.\n     * @group Props\n     */\n    set model(value) {\n      this._model = value;\n      this._processedItems = this.createProcessedItems(this._model || []);\n    }\n    get model() {\n      return this._model;\n    }\n    /**\n     * Inline style of the element.\n     * @group Props\n     */\n    style;\n    /**\n     * Class of the element.\n     * @group Props\n     */\n    styleClass;\n    /**\n     * Whether to automatically manage layering.\n     * @group Props\n     */\n    autoZIndex = true;\n    /**\n     * Base zIndex value to use in layering.\n     * @group Props\n     */\n    baseZIndex = 0;\n    /**\n     * Whether to show a root submenu on mouse over.\n     * @defaultValue true\n     * @group Props\n     */\n    autoDisplay = true;\n    /**\n     * Whether to hide a root submenu when mouse leaves.\n     * @group Props\n     */\n    autoHide;\n    /**\n     * Delay to hide the root submenu in milliseconds when mouse leaves.\n     * @group Props\n     */\n    autoHideDelay = 100;\n    /**\n     * Current id state as a string.\n     * @group Props\n     */\n    id;\n    /**\n     * Defines a string value that labels an interactive element.\n     * @group Props\n     */\n    ariaLabel;\n    /**\n     * Identifier of the underlying input element.\n     * @group Props\n     */\n    ariaLabelledBy;\n    /**\n     * Callback to execute when button is focused.\n     * @param {FocusEvent} event - Focus event.\n     * @group Emits\n     */\n    onFocus = new EventEmitter();\n    /**\n     * Callback to execute when button loses focus.\n     * @param {FocusEvent} event - Focus event.\n     * @group Emits\n     */\n    onBlur = new EventEmitter();\n    templates;\n    menubutton;\n    rootmenu;\n    startTemplate;\n    endTemplate;\n    menuIconTemplate;\n    submenuIconTemplate;\n    itemTemplate;\n    mobileActive;\n    outsideClickListener;\n    resizeListener;\n    mouseLeaveSubscriber;\n    dirty = false;\n    focused = false;\n    activeItemPath = signal([]);\n    number = signal(0);\n    focusedItemInfo = signal({\n      index: -1,\n      level: 0,\n      parentKey: '',\n      item: null\n    });\n    searchValue = '';\n    searchTimeout;\n    _processedItems;\n    _model;\n    get visibleItems() {\n      const processedItem = this.activeItemPath().find(p => p.key === this.focusedItemInfo().parentKey);\n      return processedItem ? processedItem.items : this.processedItems;\n    }\n    get processedItems() {\n      if (!this._processedItems || !this._processedItems.length) {\n        this._processedItems = this.createProcessedItems(this.model || []);\n      }\n      return this._processedItems;\n    }\n    get focusedItemId() {\n      const focusedItem = this.focusedItemInfo();\n      return focusedItem.item && focusedItem.item?.id ? focusedItem.item.id : focusedItem.index !== -1 ? `${this.id}${ObjectUtils.isNotEmpty(focusedItem.parentKey) ? '_' + focusedItem.parentKey : ''}_${focusedItem.index}` : null;\n    }\n    constructor(document, platformId, el, renderer, cd, config, menubarService) {\n      this.document = document;\n      this.platformId = platformId;\n      this.el = el;\n      this.renderer = renderer;\n      this.cd = cd;\n      this.config = config;\n      this.menubarService = menubarService;\n      effect(() => {\n        const path = this.activeItemPath();\n        if (ObjectUtils.isNotEmpty(path)) {\n          this.bindOutsideClickListener();\n          this.bindResizeListener();\n        } else {\n          this.unbindOutsideClickListener();\n          this.unbindResizeListener();\n        }\n      });\n    }\n    ngOnInit() {\n      this.menubarService.autoHide = this.autoHide;\n      this.menubarService.autoHideDelay = this.autoHideDelay;\n      this.mouseLeaveSubscriber = this.menubarService.mouseLeft$.subscribe(() => this.unbindOutsideClickListener());\n      this.id = this.id || UniqueComponentId();\n    }\n    ngAfterContentInit() {\n      this.templates?.forEach(item => {\n        switch (item.getType()) {\n          case 'start':\n            this.startTemplate = item.template;\n            break;\n          case 'end':\n            this.endTemplate = item.template;\n            break;\n          case 'menuicon':\n            this.menuIconTemplate = item.template;\n            break;\n          case 'submenuicon':\n            this.submenuIconTemplate = item.template;\n            break;\n          case 'item':\n            this.itemTemplate = item.template;\n            break;\n          default:\n            this.itemTemplate = item.template;\n            break;\n        }\n      });\n    }\n    createProcessedItems(items, level = 0, parent = {}, parentKey = '') {\n      const processedItems = [];\n      items && items.forEach((item, index) => {\n        const key = (parentKey !== '' ? parentKey + '_' : '') + index;\n        const newItem = {\n          item,\n          index,\n          level,\n          key,\n          parent,\n          parentKey\n        };\n        newItem['items'] = this.createProcessedItems(item.items, level + 1, newItem, key);\n        processedItems.push(newItem);\n      });\n      return processedItems;\n    }\n    getItemProp(item, name) {\n      return item ? ObjectUtils.getItemValue(item[name]) : undefined;\n    }\n    menuButtonClick(event) {\n      this.toggle(event);\n    }\n    menuButtonKeydown(event) {\n      (event.code === 'Enter' || event.code === 'Space') && this.menuButtonClick(event);\n    }\n    onItemClick(event) {\n      const {\n        originalEvent,\n        processedItem\n      } = event;\n      const grouped = this.isProcessedItemGroup(processedItem);\n      const root = ObjectUtils.isEmpty(processedItem.parent);\n      const selected = this.isSelected(processedItem);\n      if (selected) {\n        const {\n          index,\n          key,\n          level,\n          parentKey,\n          item\n        } = processedItem;\n        this.activeItemPath.set(this.activeItemPath().filter(p => key !== p.key && key.startsWith(p.key)));\n        this.focusedItemInfo.set({\n          index,\n          level,\n          parentKey,\n          item\n        });\n        this.dirty = !root;\n        DomHandler.focus(this.rootmenu.menubarViewChild.nativeElement);\n      } else {\n        if (grouped) {\n          this.onItemChange(event);\n        } else {\n          const rootProcessedItem = root ? processedItem : this.activeItemPath().find(p => p.parentKey === '');\n          this.hide(originalEvent);\n          this.changeFocusedItemIndex(originalEvent, rootProcessedItem ? rootProcessedItem.index : -1);\n          this.mobileActive = false;\n          DomHandler.focus(this.rootmenu.menubarViewChild.nativeElement);\n        }\n      }\n    }\n    onItemMouseEnter(event) {\n      if (!DomHandler.isTouchDevice()) {\n        if (!this.mobileActive) {\n          this.onItemChange(event);\n        }\n      }\n    }\n    changeFocusedItemIndex(event, index) {\n      const processedItem = this.findVisibleItem(index);\n      if (this.focusedItemInfo().index !== index) {\n        const focusedItemInfo = this.focusedItemInfo();\n        this.focusedItemInfo.set({\n          ...focusedItemInfo,\n          item: processedItem.item,\n          index\n        });\n        this.scrollInView();\n      }\n    }\n    scrollInView(index = -1) {\n      const id = index !== -1 ? `${this.id}_${index}` : this.focusedItemId;\n      const element = DomHandler.findSingle(this.rootmenu.el.nativeElement, `li[id=\"${id}\"]`);\n      if (element) {\n        element.scrollIntoView && element.scrollIntoView({\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      }\n    }\n    onItemChange(event) {\n      const {\n        processedItem,\n        isFocus\n      } = event;\n      if (ObjectUtils.isEmpty(processedItem)) return;\n      const {\n        index,\n        key,\n        level,\n        parentKey,\n        items,\n        item\n      } = processedItem;\n      const grouped = ObjectUtils.isNotEmpty(items);\n      const activeItemPath = this.activeItemPath().filter(p => p.parentKey !== parentKey && p.parentKey !== key);\n      grouped && activeItemPath.push(processedItem);\n      this.focusedItemInfo.set({\n        index,\n        level,\n        parentKey,\n        item\n      });\n      this.activeItemPath.set(activeItemPath);\n      grouped && (this.dirty = true);\n      isFocus && DomHandler.focus(this.rootmenu.menubarViewChild.nativeElement);\n    }\n    toggle(event) {\n      if (this.mobileActive) {\n        this.mobileActive = false;\n        ZIndexUtils.clear(this.rootmenu.el.nativeElement);\n        this.hide();\n      } else {\n        this.mobileActive = true;\n        ZIndexUtils.set('menu', this.rootmenu.el.nativeElement, this.config.zIndex.menu);\n        setTimeout(() => {\n          this.show();\n        }, 0);\n      }\n      this.cd.markForCheck();\n      this.bindOutsideClickListener();\n      event.preventDefault();\n    }\n    hide(event, isFocus) {\n      if (this.mobileActive) {\n        setTimeout(() => {\n          DomHandler.focus(this.menubutton.nativeElement);\n        }, 0);\n      }\n      this.activeItemPath.set([]);\n      this.focusedItemInfo.set({\n        index: -1,\n        level: 0,\n        parentKey: '',\n        item: null\n      });\n      isFocus && DomHandler.focus(this.rootmenu?.menubarViewChild.nativeElement);\n      this.dirty = false;\n    }\n    show() {\n      const processedItem = this.findVisibleItem(this.findFirstFocusedItemIndex());\n      this.focusedItemInfo.set({\n        index: this.findFirstFocusedItemIndex(),\n        level: 0,\n        parentKey: '',\n        item: processedItem?.item\n      });\n      DomHandler.focus(this.rootmenu?.menubarViewChild.nativeElement);\n    }\n    onMenuFocus(event) {\n      this.focused = true;\n      const processedItem = this.findVisibleItem(this.findFirstFocusedItemIndex());\n      const focusedItemInfo = this.focusedItemInfo().index !== -1 ? this.focusedItemInfo() : {\n        index: this.findFirstFocusedItemIndex(),\n        level: 0,\n        parentKey: '',\n        item: processedItem?.item\n      };\n      this.focusedItemInfo.set(focusedItemInfo);\n      this.onFocus.emit(event);\n    }\n    onMenuBlur(event) {\n      this.focused = false;\n      this.focusedItemInfo.set({\n        index: -1,\n        level: 0,\n        parentKey: '',\n        item: null\n      });\n      this.searchValue = '';\n      this.dirty = false;\n      this.onBlur.emit(event);\n    }\n    onKeyDown(event) {\n      const metaKey = event.metaKey || event.ctrlKey;\n      switch (event.code) {\n        case 'ArrowDown':\n          this.onArrowDownKey(event);\n          break;\n        case 'ArrowUp':\n          this.onArrowUpKey(event);\n          break;\n        case 'ArrowLeft':\n          this.onArrowLeftKey(event);\n          break;\n        case 'ArrowRight':\n          this.onArrowRightKey(event);\n          break;\n        case 'Home':\n          this.onHomeKey(event);\n          break;\n        case 'End':\n          this.onEndKey(event);\n          break;\n        case 'Space':\n          this.onSpaceKey(event);\n          break;\n        case 'Enter':\n          this.onEnterKey(event);\n          break;\n        case 'Escape':\n          this.onEscapeKey(event);\n          break;\n        case 'Tab':\n          this.onTabKey(event);\n          break;\n        case 'PageDown':\n        case 'PageUp':\n        case 'Backspace':\n        case 'ShiftLeft':\n        case 'ShiftRight':\n          //NOOP\n          break;\n        default:\n          if (!metaKey && ObjectUtils.isPrintableCharacter(event.key)) {\n            this.searchItems(event, event.key);\n          }\n          break;\n      }\n    }\n    findVisibleItem(index) {\n      return ObjectUtils.isNotEmpty(this.visibleItems) ? this.visibleItems[index] : null;\n    }\n    findFirstFocusedItemIndex() {\n      const selectedIndex = this.findSelectedItemIndex();\n      return selectedIndex < 0 ? this.findFirstItemIndex() : selectedIndex;\n    }\n    findFirstItemIndex() {\n      return this.visibleItems.findIndex(processedItem => this.isValidItem(processedItem));\n    }\n    findSelectedItemIndex() {\n      return this.visibleItems.findIndex(processedItem => this.isValidSelectedItem(processedItem));\n    }\n    isProcessedItemGroup(processedItem) {\n      return processedItem && ObjectUtils.isNotEmpty(processedItem.items);\n    }\n    isSelected(processedItem) {\n      return this.activeItemPath().some(p => p.key === processedItem.key);\n    }\n    isValidSelectedItem(processedItem) {\n      return this.isValidItem(processedItem) && this.isSelected(processedItem);\n    }\n    isValidItem(processedItem) {\n      return !!processedItem && !this.isItemDisabled(processedItem.item) && !this.isItemSeparator(processedItem.item);\n    }\n    isItemDisabled(item) {\n      return this.getItemProp(item, 'disabled');\n    }\n    isItemSeparator(item) {\n      return this.getItemProp(item, 'separator');\n    }\n    isItemMatched(processedItem) {\n      return this.isValidItem(processedItem) && this.getProccessedItemLabel(processedItem).toLocaleLowerCase().startsWith(this.searchValue.toLocaleLowerCase());\n    }\n    isProccessedItemGroup(processedItem) {\n      return processedItem && ObjectUtils.isNotEmpty(processedItem.items);\n    }\n    searchItems(event, char) {\n      this.searchValue = (this.searchValue || '') + char;\n      let itemIndex = -1;\n      let matched = false;\n      if (this.focusedItemInfo().index !== -1) {\n        itemIndex = this.visibleItems.slice(this.focusedItemInfo().index).findIndex(processedItem => this.isItemMatched(processedItem));\n        itemIndex = itemIndex === -1 ? this.visibleItems.slice(0, this.focusedItemInfo().index).findIndex(processedItem => this.isItemMatched(processedItem)) : itemIndex + this.focusedItemInfo().index;\n      } else {\n        itemIndex = this.visibleItems.findIndex(processedItem => this.isItemMatched(processedItem));\n      }\n      if (itemIndex !== -1) {\n        matched = true;\n      }\n      if (itemIndex === -1 && this.focusedItemInfo().index === -1) {\n        itemIndex = this.findFirstFocusedItemIndex();\n      }\n      if (itemIndex !== -1) {\n        this.changeFocusedItemIndex(event, itemIndex);\n      }\n      if (this.searchTimeout) {\n        clearTimeout(this.searchTimeout);\n      }\n      this.searchTimeout = setTimeout(() => {\n        this.searchValue = '';\n        this.searchTimeout = null;\n      }, 500);\n      return matched;\n    }\n    getProccessedItemLabel(processedItem) {\n      return processedItem ? this.getItemLabel(processedItem.item) : undefined;\n    }\n    getItemLabel(item) {\n      return this.getItemProp(item, 'label');\n    }\n    onArrowDownKey(event) {\n      const processedItem = this.visibleItems[this.focusedItemInfo().index];\n      const root = processedItem ? ObjectUtils.isEmpty(processedItem.parent) : null;\n      if (root) {\n        const grouped = this.isProccessedItemGroup(processedItem);\n        if (grouped) {\n          this.onItemChange({\n            originalEvent: event,\n            processedItem\n          });\n          this.focusedItemInfo.set({\n            index: -1,\n            parentKey: processedItem.key,\n            item: processedItem.item\n          });\n          this.onArrowRightKey(event);\n        }\n      } else {\n        const itemIndex = this.focusedItemInfo().index !== -1 ? this.findNextItemIndex(this.focusedItemInfo().index) : this.findFirstFocusedItemIndex();\n        this.changeFocusedItemIndex(event, itemIndex);\n        event.preventDefault();\n      }\n    }\n    onArrowRightKey(event) {\n      const processedItem = this.visibleItems[this.focusedItemInfo().index];\n      const parentItem = processedItem ? this.activeItemPath().find(p => p.key === processedItem.parentKey) : null;\n      if (parentItem) {\n        const grouped = this.isProccessedItemGroup(processedItem);\n        if (grouped) {\n          this.onItemChange({\n            originalEvent: event,\n            processedItem\n          });\n          this.focusedItemInfo.set({\n            index: -1,\n            parentKey: processedItem.key,\n            item: processedItem.item\n          });\n          this.onArrowDownKey(event);\n        }\n      } else {\n        const itemIndex = this.focusedItemInfo().index !== -1 ? this.findNextItemIndex(this.focusedItemInfo().index) : this.findFirstFocusedItemIndex();\n        this.changeFocusedItemIndex(event, itemIndex);\n        event.preventDefault();\n      }\n    }\n    onArrowUpKey(event) {\n      const processedItem = this.visibleItems[this.focusedItemInfo().index];\n      const root = ObjectUtils.isEmpty(processedItem.parent);\n      if (root) {\n        const grouped = this.isProccessedItemGroup(processedItem);\n        if (grouped) {\n          this.onItemChange({\n            originalEvent: event,\n            processedItem\n          });\n          this.focusedItemInfo.set({\n            index: -1,\n            parentKey: processedItem.key,\n            item: processedItem.item\n          });\n          const itemIndex = this.findLastItemIndex();\n          this.changeFocusedItemIndex(event, itemIndex);\n        }\n      } else {\n        const parentItem = this.activeItemPath().find(p => p.key === processedItem.parentKey);\n        if (this.focusedItemInfo().index === 0) {\n          this.focusedItemInfo.set({\n            index: -1,\n            parentKey: parentItem ? parentItem.parentKey : '',\n            item: processedItem.item\n          });\n          this.searchValue = '';\n          this.onArrowLeftKey(event);\n          const activeItemPath = this.activeItemPath().filter(p => p.parentKey !== this.focusedItemInfo().parentKey);\n          this.activeItemPath.set(activeItemPath);\n        } else {\n          const itemIndex = this.focusedItemInfo().index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo().index) : this.findLastFocusedItemIndex();\n          this.changeFocusedItemIndex(event, itemIndex);\n        }\n      }\n      event.preventDefault();\n    }\n    onArrowLeftKey(event) {\n      const processedItem = this.visibleItems[this.focusedItemInfo().index];\n      const parentItem = processedItem ? this.activeItemPath().find(p => p.key === processedItem.parentKey) : null;\n      if (parentItem) {\n        this.onItemChange({\n          originalEvent: event,\n          processedItem: parentItem\n        });\n        const activeItemPath = this.activeItemPath().filter(p => p.parentKey !== this.focusedItemInfo().parentKey);\n        this.activeItemPath.set(activeItemPath);\n        event.preventDefault();\n      } else {\n        const itemIndex = this.focusedItemInfo().index !== -1 ? this.findPrevItemIndex(this.focusedItemInfo().index) : this.findLastFocusedItemIndex();\n        this.changeFocusedItemIndex(event, itemIndex);\n        event.preventDefault();\n      }\n    }\n    onHomeKey(event) {\n      this.changeFocusedItemIndex(event, this.findFirstItemIndex());\n      event.preventDefault();\n    }\n    onEndKey(event) {\n      this.changeFocusedItemIndex(event, this.findLastItemIndex());\n      event.preventDefault();\n    }\n    onSpaceKey(event) {\n      this.onEnterKey(event);\n    }\n    onEscapeKey(event) {\n      this.hide(event, true);\n      this.focusedItemInfo().index = this.findFirstFocusedItemIndex();\n      event.preventDefault();\n    }\n    onTabKey(event) {\n      if (this.focusedItemInfo().index !== -1) {\n        const processedItem = this.visibleItems[this.focusedItemInfo().index];\n        const grouped = this.isProccessedItemGroup(processedItem);\n        !grouped && this.onItemChange({\n          originalEvent: event,\n          processedItem\n        });\n      }\n      this.hide();\n    }\n    onEnterKey(event) {\n      if (this.focusedItemInfo().index !== -1) {\n        const element = DomHandler.findSingle(this.rootmenu.el.nativeElement, `li[id=\"${`${this.focusedItemId}`}\"]`);\n        const anchorElement = element && DomHandler.findSingle(element, 'a[data-pc-section=\"action\"]');\n        anchorElement ? anchorElement.click() : element && element.click();\n        const processedItem = this.visibleItems[this.focusedItemInfo().index];\n        const grouped = this.isProccessedItemGroup(processedItem);\n        !grouped && (this.focusedItemInfo().index = this.findFirstFocusedItemIndex());\n      }\n      event.preventDefault();\n    }\n    findLastFocusedItemIndex() {\n      const selectedIndex = this.findSelectedItemIndex();\n      return selectedIndex < 0 ? this.findLastItemIndex() : selectedIndex;\n    }\n    findLastItemIndex() {\n      return ObjectUtils.findLastIndex(this.visibleItems, processedItem => this.isValidItem(processedItem));\n    }\n    findPrevItemIndex(index) {\n      const matchedItemIndex = index > 0 ? ObjectUtils.findLastIndex(this.visibleItems.slice(0, index), processedItem => this.isValidItem(processedItem)) : -1;\n      return matchedItemIndex > -1 ? matchedItemIndex : index;\n    }\n    findNextItemIndex(index) {\n      const matchedItemIndex = index < this.visibleItems.length - 1 ? this.visibleItems.slice(index + 1).findIndex(processedItem => this.isValidItem(processedItem)) : -1;\n      return matchedItemIndex > -1 ? matchedItemIndex + index + 1 : index;\n    }\n    bindResizeListener() {\n      if (isPlatformBrowser(this.platformId)) {\n        if (!this.resizeListener) {\n          this.resizeListener = this.renderer.listen(this.document.defaultView, 'resize', event => {\n            if (!DomHandler.isTouchDevice()) {\n              this.hide(event, true);\n            }\n            this.mobileActive = false;\n          });\n        }\n      }\n    }\n    bindOutsideClickListener() {\n      if (isPlatformBrowser(this.platformId)) {\n        if (!this.outsideClickListener) {\n          this.outsideClickListener = this.renderer.listen(this.document, 'click', event => {\n            const isOutsideContainer = this.rootmenu.el.nativeElement !== event.target && !this.rootmenu.el.nativeElement.contains(event.target);\n            const isOutsideMenuButton = this.mobileActive && this.menubutton.nativeElement !== event.target && !this.menubutton.nativeElement.contains(event.target);\n            if (isOutsideContainer) {\n              isOutsideMenuButton ? this.mobileActive = false : this.hide();\n            }\n          });\n        }\n      }\n    }\n    unbindOutsideClickListener() {\n      if (this.outsideClickListener) {\n        this.outsideClickListener();\n        this.outsideClickListener = null;\n      }\n    }\n    unbindResizeListener() {\n      if (this.resizeListener) {\n        this.resizeListener();\n        this.resizeListener = null;\n      }\n    }\n    ngOnDestroy() {\n      this.mouseLeaveSubscriber?.unsubscribe();\n      this.unbindOutsideClickListener();\n      this.unbindResizeListener();\n    }\n    static ɵfac = function Menubar_Factory(t) {\n      return new (t || Menubar)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(PLATFORM_ID), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef), i0.ɵɵdirectiveInject(i5.PrimeNGConfig), i0.ɵɵdirectiveInject(MenubarService));\n    };\n    static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n      type: Menubar,\n      selectors: [[\"p-menubar\"]],\n      contentQueries: function Menubar_ContentQueries(rf, ctx, dirIndex) {\n        if (rf & 1) {\n          i0.ɵɵcontentQuery(dirIndex, PrimeTemplate, 4);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.templates = _t);\n        }\n      },\n      viewQuery: function Menubar_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c5, 5);\n          i0.ɵɵviewQuery(_c6, 5);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.menubutton = _t.first);\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.rootmenu = _t.first);\n        }\n      },\n      hostAttrs: [1, \"p-element\"],\n      inputs: {\n        model: \"model\",\n        style: \"style\",\n        styleClass: \"styleClass\",\n        autoZIndex: \"autoZIndex\",\n        baseZIndex: \"baseZIndex\",\n        autoDisplay: \"autoDisplay\",\n        autoHide: \"autoHide\",\n        autoHideDelay: \"autoHideDelay\",\n        id: \"id\",\n        ariaLabel: \"ariaLabel\",\n        ariaLabelledBy: \"ariaLabelledBy\"\n      },\n      outputs: {\n        onFocus: \"onFocus\",\n        onBlur: \"onBlur\"\n      },\n      features: [i0.ɵɵProvidersFeature([MenubarService])],\n      ngContentSelectors: _c8,\n      decls: 8,\n      vars: 25,\n      consts: [[3, \"ngClass\", \"ngStyle\"], [\"class\", \"p-menubar-start\", 4, \"ngIf\"], [\"tabindex\", \"0\", \"role\", \"button\", \"class\", \"p-menubar-button\", 3, \"click\", \"keydown\", 4, \"ngIf\"], [3, \"items\", \"itemTemplate\", \"menuId\", \"root\", \"baseZIndex\", \"autoZIndex\", \"mobileActive\", \"autoDisplay\", \"ariaLabel\", \"ariaLabelledBy\", \"focusedItemId\", \"submenuIconTemplate\", \"activeItemPath\", \"itemClick\", \"menuFocus\", \"menuBlur\", \"menuKeydown\", \"itemMouseEnter\"], [\"rootmenu\", \"\"], [\"class\", \"p-menubar-end\", 4, \"ngIf\", \"ngIfElse\"], [\"legacy\", \"\"], [1, \"p-menubar-start\"], [4, \"ngTemplateOutlet\"], [\"tabindex\", \"0\", \"role\", \"button\", 1, \"p-menubar-button\", 3, \"click\", \"keydown\"], [\"menubutton\", \"\"], [4, \"ngIf\"], [1, \"p-menubar-end\"]],\n      template: function Menubar_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵprojectionDef();\n          i0.ɵɵelementStart(0, \"div\", 0);\n          i0.ɵɵtemplate(1, Menubar_div_1_Template, 2, 1, \"div\", 1)(2, Menubar_a_2_Template, 4, 7, \"a\", 2);\n          i0.ɵɵelementStart(3, \"p-menubarSub\", 3, 4);\n          i0.ɵɵlistener(\"itemClick\", function Menubar_Template_p_menubarSub_itemClick_3_listener($event) {\n            return ctx.onItemClick($event);\n          })(\"menuFocus\", function Menubar_Template_p_menubarSub_menuFocus_3_listener($event) {\n            return ctx.onMenuFocus($event);\n          })(\"menuBlur\", function Menubar_Template_p_menubarSub_menuBlur_3_listener($event) {\n            return ctx.onMenuBlur($event);\n          })(\"menuKeydown\", function Menubar_Template_p_menubarSub_menuKeydown_3_listener($event) {\n            return ctx.onKeyDown($event);\n          })(\"itemMouseEnter\", function Menubar_Template_p_menubarSub_itemMouseEnter_3_listener($event) {\n            return ctx.onItemMouseEnter($event);\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵtemplate(5, Menubar_div_5_Template, 2, 1, \"div\", 5)(6, Menubar_ng_template_6_Template, 2, 0, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          const _r5 = i0.ɵɵreference(7);\n          i0.ɵɵclassMap(ctx.styleClass);\n          i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(23, _c7, ctx.mobileActive))(\"ngStyle\", ctx.style);\n          i0.ɵɵattribute(\"data-pc-section\", \"root\")(\"data-pc-name\", \"menubar\");\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.startTemplate);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ctx.model && ctx.model.length > 0);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"items\", ctx.processedItems)(\"itemTemplate\", ctx.itemTemplate)(\"menuId\", ctx.id)(\"root\", true)(\"baseZIndex\", ctx.baseZIndex)(\"autoZIndex\", ctx.autoZIndex)(\"mobileActive\", ctx.mobileActive)(\"autoDisplay\", ctx.autoDisplay)(\"ariaLabel\", ctx.ariaLabel)(\"ariaLabelledBy\", ctx.ariaLabelledBy)(\"focusedItemId\", ctx.focused ? ctx.focusedItemId : undefined)(\"submenuIconTemplate\", ctx.submenuIconTemplate)(\"activeItemPath\", ctx.activeItemPath());\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngIf\", ctx.endTemplate)(\"ngIfElse\", _r5);\n        }\n      },\n      dependencies: () => [i1.NgClass, i1.NgIf, i1.NgTemplateOutlet, i1.NgStyle, BarsIcon, MenubarSub],\n      styles: [\"@layer primeng{.p-menubar{display:flex;align-items:center}.p-menubar ul{margin:0;padding:0;list-style:none}.p-menubar .p-menuitem-link{cursor:pointer;display:flex;align-items:center;text-decoration:none;overflow:hidden;position:relative}.p-menubar .p-menuitem-text{line-height:1}.p-menubar .p-menuitem{position:relative}.p-menubar-root-list{display:flex;align-items:center;flex-wrap:wrap}.p-menubar-root-list>li ul{display:none;z-index:1}.p-menubar-root-list>.p-menuitem-active>p-menubarsub>.p-submenu-list{display:block}.p-menubar .p-submenu-list{display:none;position:absolute;z-index:2}.p-menubar .p-submenu-list>.p-menuitem-active>p-menubarsub>.p-submenu-list{display:block;left:100%;top:0}.p-menubar .p-submenu-list .p-menuitem-link .p-submenu-icon:not(svg){margin-left:auto}.p-menubar .p-menubar-root-list .p-icon-wrapper,.p-menubar .p-submenu-list .p-menuitem-link .p-icon-wrapper{margin-left:auto}.p-menubar .p-menubar-custom,.p-menubar .p-menubar-end{margin-left:auto;align-self:center}.p-menubar-button{display:none;cursor:pointer;align-items:center;justify-content:center}}\\n\"],\n      encapsulation: 2,\n      changeDetection: 0\n    });\n  }\n  return Menubar;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet MenubarModule = /*#__PURE__*/(() => {\n  class MenubarModule {\n    static ɵfac = function MenubarModule_Factory(t) {\n      return new (t || MenubarModule)();\n    };\n    static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n      type: MenubarModule\n    });\n    static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n      imports: [CommonModule, RouterModule, RippleModule, TooltipModule, SharedModule, BarsIcon, AngleDownIcon, AngleRightIcon, RouterModule, TooltipModule, SharedModule]\n    });\n  }\n  return MenubarModule;\n})();\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Menubar, MenubarModule, MenubarService, MenubarSub };\n","import { ChangeDetectionStrategy, Component,OnInit } from '@angular/core';\r\nimport { NavbarComponent } from '../navbar/navbar.component';\r\nimport { MenubarModule } from 'primeng/menubar';\r\nimport { RouterLink } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  standalone: true,\r\n  imports: [NavbarComponent, MenubarModule, RouterLink],\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css', './header.responsive.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class HeaderComponent implements OnInit{\r\n  totalPriceInCart: number = 0;\r\n\r\n  ngOnInit(): void {\r\n  }\r\n}\r\n","<header class=\"header__container\">\r\n    <div class=\"header__content\">\r\n        <a routerLink=\"/product\" class=\"header__brand\">\r\n            <img src=\"./assets/brand/android-chrome-512x512.png\" alt=\"logo da ACFarma\" class=\"brand\">\r\n        </a>\r\n        <app-navbar class=\"header__navbar\" />\r\n    </div>\r\n</header>","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  standalone: true,\r\n  imports: [],\r\n  templateUrl: './footer.component.html',\r\n  styleUrl: './footer.component.css'\r\n})\r\nexport class FooterComponent {\r\n\r\n}\r\n","<p>footer works!</p>\r\n","import { Component } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterOutlet } from '@angular/router';\r\nimport { ButtonModule } from 'primeng/button';\r\nimport { HeaderComponent } from './templates/header/header.component';\r\nimport { FooterComponent } from './templates/footer/footer.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  standalone: true,\r\n  imports: [\r\n    CommonModule,\r\n    RouterOutlet,\r\n    ButtonModule,\r\n    HeaderComponent,\r\n    FooterComponent,\r\n    FontAwesomeModule\r\n  ],\r\n  templateUrl: './app.component.html',\r\n  styleUrl: './app.component.css',\r\n})\r\nexport class AppComponent {\r\n  title = 'farmacia-devedor';\r\n}\r\n","<app-header />\r\n<main >\r\n  <router-outlet></router-outlet>\r\n</main>\r\n<app-footer />\r\n","import { bootstrapApplication } from '@angular/platform-browser';\r\nimport { appConfig } from './app/app.config';\r\nimport { AppComponent } from './app/app.component';\r\n\r\nbootstrapApplication(AppComponent, appConfig)\r\n  .catch((err) => console.error(err));\r\n"],"mappings":"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","names":["PRIMARY_OUTLET","RouteTitleKey","ParamsAsMap","params","name","v","convertToParamMap","defaultUrlMatcher","segments","segmentGroup","route","parts","posParams","index","part","segment","shallowEqualArrays","a","b","i","shallowEqual","k1","getDataKeys","k2","key","equalArraysOrString","obj","aSorted","bSorted","val","last","wrapIntoObservable","value","isObservable","isPromise","from","of","pathCompareMap","equalSegmentGroups","containsSegmentGroup","paramCompareMap","equalParams","containsParams","containsTree","container","containee","options","matrixParams","equalPath","matrixParamsMatch","c","containsSegmentGroupHelper","containeePaths","current","next","containerPaths","containeeSegment","UrlTree","root","UrlSegmentGroup","queryParams","fragment","DEFAULT_SERIALIZER","children","serializePaths","UrlSegment","path","parameters","serializePath","equalSegments","as","bs","mapChildrenIntoArray","fn","res","childOutlet","child","UrlSerializer","_UrlSerializer","t","ɵɵdefineInjectable","DefaultUrlSerializer","url","p","UrlParser","tree","serializeSegment","query","serializeQueryParams","encodeUriFragment","primary","k","encodeUriString","s","encodeUriQuery","encodeUriSegment","decode","decodeQuery","serializeMatrixParams","strParams","SEGMENT_RE","matchSegments","str","match","MATRIX_PARAM_SEGMENT_RE","matchMatrixKeySegments","QUERY_PARAM_RE","matchQueryParams","QUERY_PARAM_VALUE_RE","matchUrlQueryParamValue","RuntimeError","valueMatch","decodedKey","decodedVal","currentVal","allowPrimary","outletName","createRoot","rootCandidate","squashSegmentGroup","newChildren","childCandidate","grandChildOutlet","grandChild","mergeTrivialChildren","isUrlTree","createUrlTreeFromSnapshot","relativeTo","commands","relativeToUrlSegmentGroup","createSegmentGroupFromRoute","createUrlTreeFromSegmentGroup","targetGroup","createSegmentGroupFromRouteRecursive","currentRoute","childOutlets","childSnapshot","rootSegmentGroup","nav","computeNavigation","position","findStartingPositionForTargetGroup","newSegmentGroup","updateSegmentGroupChildren","updateSegmentGroup","isMatrixParams","command","isCommandWithOutlets","oldRoot","oldSegmentGroup","qp","replaceSegment","newRoot","oldSegment","newSegment","Navigation","isAbsolute","numberOfDoubleDots","cmdWithOutlet","cmd","cmdIdx","outlets","urlPart","partIndex","Position","processChildren","target","modifier","createPositionApplyingDoubleDots","group","g","ci","dd","getOutlets","startIndex","m","prefixedWith","slicedCommands","createNewSegmentGroup","o","childrenOfEmptyChild","outlet","currentCommandIndex","currentPathIndex","noMatch","curr","compare","paths","createNewSegmentChildren","stringify","IMPERATIVE_NAVIGATION","EventType","RouterEvent","id","NavigationStart","navigationTrigger","restoredState","NavigationEnd","urlAfterRedirects","NavigationCancellationCode","NavigationSkippedCode","NavigationCancel","reason","code","NavigationSkipped","NavigationError","error","RoutesRecognized","state","GuardsCheckStart","GuardsCheckEnd","shouldActivate","ResolveStart","ResolveEnd","RouteConfigLoadStart","RouteConfigLoadEnd","ChildActivationStart","snapshot","ChildActivationEnd","ActivationStart","ActivationEnd","Scroll","routerEvent","anchor","pos","BeforeActivateRoutes","RedirectRequest","OutletContext","ChildrenOutletContexts","_ChildrenOutletContexts","childName","outlet","context","contexts","t","ɵɵdefineInjectable","Tree","root","p","n","findNode","findPath","c","cc","s","value","node","child","path","TreeNode","children","nodeChildrenAsMap","map","RouterState","snapshot","setRouterState","createEmptyState","rootComponent","createEmptyStateSnapshot","emptyUrl","BehaviorSubject","UrlSegment","emptyParams","emptyData","emptyQueryParams","fragment","activated","ActivatedRoute","PRIMARY_OUTLET","ActivatedRouteSnapshot","RouterStateSnapshot","urlSubject","paramsSubject","queryParamsSubject","fragmentSubject","dataSubject","component","futureSnapshot","d","RouteTitleKey","of","convertToParamMap","getInherited","route","parent","paramsInheritanceStrategy","inherited","routeConfig","__spreadValues","hasStaticTitle","url","params","queryParams","data","resolve","segment","matched","serializeNode","state","advanceActivatedRoute","currentSnapshot","nextSnapshot","shallowEqual","shallowEqualArrays","equalParamsAndUrlSegments","a","b","equalUrlParams","equalSegments","parentsMismatch","config","RouterOutlet","_RouterOutlet","EventEmitter","inject","ViewContainerRef","ChangeDetectorRef","EnvironmentInjector","INPUT_BINDER","changes","firstChange","previousValue","outletName","RuntimeError","cmp","ref","activatedRoute","environmentInjector","location","childContexts","injector","OutletInjector","ɵɵdefineDirective","ɵɵNgOnChangesFeature","token","notFoundValue","InjectionToken","RoutedComponentInputBinder","_RoutedComponentInputBinder","dataSubscription","combineLatest","switchMap","index","mirror","reflectComponentType","templateName","createRouterState","routeReuseStrategy","curr","prevState","createNode","createOrReuseChildren","detachedRouteHandle","tree","createActivatedRoute","NAVIGATION_CANCELING_ERROR","redirectingNavigationError","urlSerializer","redirect","redirectTo","navigationBehaviorOptions","isUrlTree","error","navigationCancelingError","NavigationCancellationCode","message","code","isRedirectingNavigationCancelingError","isNavigationCancelingError","ɵEmptyOutletComponent","_ɵEmptyOutletComponent","ɵɵdefineComponent","ɵɵStandaloneFeature","rf","ctx","ɵɵelement","getOrCreateRouteInjectorIfNeeded","currentInjector","createEnvironmentInjector","standardizeConfig","r","children","c","__spreadProps","__spreadValues","PRIMARY_OUTLET","ɵEmptyOutletComponent","getOutlet","route","sortByMatchingOutlets","routes","outletName","sortedConfig","getClosestRouteInjector","snapshot","s","activateRoutes","rootContexts","routeReuseStrategy","forwardEvent","inputBindingEnabled","map","t","ActivateRoutes","futureState","currState","parentContexts","futureRoot","currRoot","advanceActivatedRoute","futureNode","currNode","contexts","children","nodeChildrenAsMap","futureChild","childOutletName","v","parentContext","future","curr","context","route","treeNode","componentRef","c","ActivationEnd","ChildActivationEnd","stored","injector","getClosestRouteInjector","CanActivate","path","CanDeactivate","component","getAllRouteGuards","getChildRouteGuards","getCanActivateChild","p","canActivateChild","getTokenOrFunctionIdentity","tokenOrFunction","NOT_FOUND","result","isInjectable","futurePath","checks","prevChildren","getRouteGuards","k","deactivateRouteAndItsChildren","shouldRun","shouldRunGuardsAndResolvers","mode","equalPath","shallowEqual","equalParamsAndUrlSegments","r","childName","node","isFunction","isBoolean","isCanLoad","guard","isCanActivate","isCanActivateChild","isCanDeactivate","isCanMatch","isEmptyError","e","EmptyError","INITIAL_VALUE","prioritizedGuardValue","switchMap","obs","combineLatest","o","take","startWith","results","UrlTree","filter","item","checkGuards","mergeMap","targetSnapshot","currentSnapshot","canActivateChecks","canDeactivateChecks","of","__spreadProps","__spreadValues","runCanDeactivateChecks","canDeactivate","runCanActivateChecks","guardsResult","futureRSS","currRSS","from","check","runCanDeactivate","first","futureSnapshot","concatMap","concat","fireChildActivationStart","fireActivationStart","runCanActivateChild","runCanActivate","snapshot","ActivationStart","ChildActivationStart","futureARS","canActivate","canActivateObservables","defer","closestInjector","guardVal","runInInjectionContext","wrapIntoObservable","canActivateChildGuardsMapped","_","d","guardsMapped","currARS","canDeactivateObservables","runCanLoadGuards","segments","urlSerializer","canLoad","canLoadObservables","injectionToken","redirectIfUrlTree","pipe","tap","isUrlTree","redirectingNavigationError","runCanMatchGuards","canMatch","canMatchObservables","NoMatch","segmentGroup","AbsoluteRedirect","urlTree","noMatch$1","throwError","namedOutletsRedirect","redirectTo","throwError","RuntimeError","canLoadFails","route","navigationCancelingError","NavigationCancellationCode","ApplyRedirects","urlSerializer","urlTree","res","c","of","PRIMARY_OUTLET","segments","posParams","newTree","AbsoluteRedirect","newRoot","UrlTree","redirectToParams","actualParams","k","v","sourceName","group","updatedSegments","children","name","child","UrlSegmentGroup","redirectToSegments","actualSegments","redirectToUrlSegment","pos","idx","s","noMatch","matchWithChecks","segmentGroup","injector","result","match","getOrCreateRouteInjectorIfNeeded","runCanMatchGuards","map","__spreadValues","createWildcardMatchResult","defaultUrlMatcher","parameters","last","split","consumedSegments","slicedSegments","config","containsEmptyPathMatchesWithNamedOutlets","createChildrenForEmptyPaths","containsEmptyPathMatches","addEmptyPathsToChildrenIfNeeded","routes","r","emptyPathMatch","getOutlet","primarySegment","isImmediateMatch","rawSegment","outlet","noLeftoversInUrl","NoLeftoversInUrl","recognize$1","configLoader","rootComponentType","paramsInheritanceStrategy","Recognizer","MAX_ALLOWED_REDIRECTS","rootSegmentGroup","root","ActivatedRouteSnapshot","rootNode","TreeNode","routeState","RouterStateSnapshot","tree","createUrlTreeFromSnapshot","catchError","e","NoMatch","routeNode","parent","i","getInherited","n","childOutlets","from","concatMap","childOutlet","sortedConfig","sortByMatchingOutlets","scan","outletChildren","defaultIfEmpty","mergeMap","noMatch$1","mergedChildren","mergeEmptyPathMatches","sortActivatedRouteSnapshots","allowRedirects","first","x","isEmptyError","matched","positionalParamSegments","remainingSegments","newSegments","matchResult","switchMap","childConfig","childInjector","snapshot","getData","getResolve","matchedOnOutlet","runCanLoadGuards","shouldLoadResult","tap","cfg","nodes","a","b","hasEmptyPathConfig","node","mergedNodes","duplicateEmptyPathNode","resultNode","mergedNode","getData","route","getResolve","recognize","injector","configLoader","rootComponentType","config","serializer","paramsInheritanceStrategy","mergeMap","t","recognize$1","map","targetSnapshot","urlAfterRedirects","__spreadProps","__spreadValues","resolveData","canActivateChecks","of","routesWithResolversToRun","check","routesNeedingDataUpdates","newRoute","flattenRouteTree","routesProcessed","from","concatMap","runResolve","getInherited","tap","takeLast","_","EMPTY","descendants","child","futureARS","futureRSS","resolve","hasStaticTitle","RouteTitleKey","resolveNode","resolvedData","keys","getDataKeys","data","key","getResolver","first","value","mapTo","catchError","e","isEmptyError","throwError","injectionToken","closestInjector","getClosestRouteInjector","resolver","getTokenOrFunctionIdentity","resolverValue","runInInjectionContext","wrapIntoObservable","switchTap","next","switchMap","v","nextResult","TitleStrategy","_TitleStrategy","snapshot","pageTitle","PRIMARY_OUTLET","ɵɵdefineInjectable","inject","DefaultTitleStrategy","_DefaultTitleStrategy","title","ɵɵinject","Title","ROUTER_CONFIGURATION","InjectionToken","ROUTES","RouterConfigLoader","_RouterConfigLoader","Compiler","loadRunner","maybeUnwrapDefaultExport","component","finalize","loader","ConnectableObservable","Subject","refCount","parentInjector","loadChildren","compiler","onLoadEndListener","NgModuleFactory$1","factoryOrRoutes","rawRoutes","requireStandaloneComponents","standardizeConfig","isWrappedDefaultExport","input","UrlHandlingStrategy","_UrlHandlingStrategy","DefaultUrlHandlingStrategy","_DefaultUrlHandlingStrategy","url","newUrlPart","wholeUrl","CREATE_VIEW_TRANSITION","VIEW_TRANSITION_OPTIONS","createViewTransition","to","transitionOptions","document","DOCUMENT","NgZone","resolveViewTransitionStarted","viewTransitionStarted","transition","createRenderPromise","onViewTransitionCreated","afterNextRender","NavigationTransitions","_NavigationTransitions","EnvironmentInjector","UrlSerializer","ChildrenOutletContexts","Location","INPUT_BINDER","onLoadStart","r","RouteConfigLoadStart","onLoadEnd","RouteConfigLoadEnd","request","id","router","initialUrlTree","initialRouterState","BehaviorSubject","IMPERATIVE_NAVIGATION","filter","overallTransitionState","completed","errored","urlTransition","onSameUrlNavigation","reason","NavigationSkipped","NavigationSkippedCode","NavigationStart","routesRecognized","RoutesRecognized","extractedUrl","source","restoredState","extras","navStart","createEmptyState","guardsStart","GuardsCheckStart","getAllRouteGuards","checkGuards","evt","isUrlTree","redirectingNavigationError","guardsEnd","GuardsCheckEnd","NavigationCancellationCode","resolveStart","ResolveStart","dataResolved","resolveEnd","ResolveEnd","loadComponents","loaders","loadedComponent","combineLatest","defaultIfEmpty","take","currentSnapshot","targetRouterState","createRouterState","BeforeActivateRoutes","activateRoutes","NavigationEnd","takeUntil","err","isNavigationCancelingError","NavigationCancel","isRedirectingNavigationCancelingError","RedirectRequest","NavigationError","ee","code","navCancel","isBrowserTriggeredNavigation","RouteReuseStrategy","_RouteReuseStrategy","DefaultRouteReuseStrategy","BaseRouteReuseStrategy","detachedTree","future","curr","_DefaultRouteReuseStrategy","ɵDefaultRouteReuseStrategy_BaseFactory","ɵɵgetInheritedFactory","StateManager","_StateManager","HistoryStateManager","_HistoryStateManager","UrlTree","listener","event","currentTransition","rawUrl","path","currentBrowserPageId","state","navigation","restoringFromCaughtError","targetPagePosition","navigationId","routerPageId","ɵHistoryStateManager_BaseFactory","NavigationResult","afterNextNavigation","action","result","defaultErrorHandler","error","exactMatchOptions","subsetMatchOptions","Router","_Router","Console","PendingTasks","Subscription","subscription","currentNavigation","mergedTree","isPublicRouterEvent","stateCopy","urlTree","commands","navigationExtras","relativeTo","queryParams","fragment","queryParamsHandling","preserveFragment","f","q","relativeToUrlSegmentGroup","relativeToSnapshot","createSegmentGroupFromRoute","createUrlTreeFromSegmentGroup","validateCommands","matchOptions","options","containsTree","params","priorPromise","reject","promise","res","rej","taskId","i","RuntimeError","RouterLink","_RouterLink","tabIndexAttribute","renderer","el","locationStrategy","tagName","s","newTabIndex","changes","button","ctrlKey","shiftKey","altKey","metaKey","sanitizedValue","ɵɵsanitizeUrlOrResourceUrl","attrName","attrValue","nativeElement","ɵɵdirectiveInject","ActivatedRoute","ɵɵinjectAttribute","Renderer2","ElementRef","LocationStrategy","ɵɵdefineDirective","rf","ctx","ɵɵlistener","$event","ɵɵattribute","InputFlags","booleanAttribute","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","RouterLinkActive","_RouterLinkActive","element","cdr","link","EventEmitter","mergeAll","allLinkChanges","classes","c","hasActiveLinks","isActiveMatchOptions","isActiveCheckFn","ChangeDetectorRef","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","PreloadingStrategy","RouterPreloader","_RouterPreloader","router","compiler","injector","preloadingStrategy","loader","filter","e","NavigationEnd","concatMap","routes","res","route","createEnvironmentInjector","injectorForCurrentRoute","injectorForChildren","from","mergeAll","loadedChildren$","of","recursiveLoadChildren$","mergeMap","config","loadComponent$","t","ɵɵinject","Router","Compiler","EnvironmentInjector","PreloadingStrategy","RouterConfigLoader","ɵɵdefineInjectable","ROUTER_SCROLLER","InjectionToken","RouterScroller","_RouterScroller","urlSerializer","transitions","viewportScroller","zone","options","NavigationStart","NavigationSkipped","NavigationSkippedCode","Scroll","routerEvent","anchor","ɵɵinvalidFactory","provideRouter","features","makeEnvironmentProviders","ROUTES","ActivatedRoute","rootRoute","APP_BOOTSTRAP_LISTENER","getBootstrapListener","feature","routerFeature","kind","providers","getBootstrapListener","injector","inject","Injector","bootstrappedComponentRef","ref","ApplicationRef","router","Router","bootstrapDone","BOOTSTRAP_DONE","INITIAL_NAVIGATION","ROUTER_PRELOADER","InjectFlags","ROUTER_SCROLLER","InjectionToken","Subject","withEnabledBlockingInitialNavigation","routerFeature","APP_INITIALIZER","locationInitialized","LOCATION_INITIALIZED","resolve","afterNextNavigation","NavigationTransitions","of","withDisabledInitialNavigation","ROUTER_PRELOADER","InjectionToken","withPreloading","preloadingStrategy","routerFeature","RouterPreloader","PreloadingStrategy","withComponentInputBinding","routerFeature","RoutedComponentInputBinder","INPUT_BINDER","withViewTransitions","options","providers","CREATE_VIEW_TRANSITION","createViewTransition","VIEW_TRANSITION_OPTIONS","__spreadValues","ROUTER_FORROOT_GUARD","InjectionToken","ROUTER_PROVIDERS","Location","UrlSerializer","DefaultUrlSerializer","Router","ChildrenOutletContexts","ActivatedRoute","rootRoute","RouterConfigLoader","RouterModule","_RouterModule","guard","routes","config","ROUTES","provideForRootGuard","Optional","SkipSelf","ROUTER_CONFIGURATION","provideHashLocationStrategy","providePathLocationStrategy","provideRouterScroller","withPreloading","provideInitialNavigation","withComponentInputBinding","withViewTransitions","provideRouterInitializer","t","ɵɵinject","ɵɵdefineNgModule","ɵɵdefineInjector","ROUTER_SCROLLER","viewportScroller","inject","ViewportScroller","zone","NgZone","transitions","NavigationTransitions","urlSerializer","RouterScroller","LocationStrategy","HashLocationStrategy","PathLocationStrategy","router","withDisabledInitialNavigation","withEnabledBlockingInitialNavigation","ROUTER_INITIALIZER","getBootstrapListener","APP_BOOTSTRAP_LISTENER","InjectableAnimationEngine","_InjectableAnimationEngine","AnimationEngine","doc","driver","normalizer","inject","ChangeDetectionScheduler","t","ɵɵinject","DOCUMENT","AnimationDriver","AnimationStyleNormalizer","ɵɵdefineInjectable","instantiateDefaultStyleNormalizer","WebAnimationsStyleNormalizer","instantiateRendererFactory","renderer","engine","zone","AnimationRendererFactory","SHARED_ANIMATION_PROVIDERS","RendererFactory2","DomRendererFactory2","NgZone","BROWSER_ANIMATIONS_PROVIDERS","WebAnimationsDriver","ANIMATION_MODULE_TYPE","BROWSER_NOOP_ANIMATIONS_PROVIDERS","NoopAnimationDriver","provideAnimations","performanceMarkFeature","BROWSER_ANIMATIONS_PROVIDERS","RouterLink","then","m","ButtonActionComponent","FreeShippingComponent","CurrencyPipe","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","ɵɵpipeBind2","ctx_r2","productBeforePrice","ɵɵelement","ɵɵtemplate","CardComponent_Defer_0_Conditional_9_Template","ɵɵproperty","ɵɵpureFunction1","_c0","ctx_r0","paramUrl","productImgSrc","ɵɵsanitizeUrl","productDescription","ɵɵconditional","isSale","productPrice","CardComponent","constructor","faTruckFast","productId","signal","productStars","category","ngOnInit","inputId","id","set","inputImgSrc","imgSrc","inputDescription","description","inputBefore","beforePrice","inputPrice","price","inputStars","star","inputCategory","inputIsSale","selectors","inputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","CardComponent_Defer_0_Template","CardComponent_DeferLoading_1_Template","ɵɵdefer","CardComponent_Defer_2_DepsFn","FontAwesomeModule","CommonModule","styles","_CardComponent","fakerDbProducts","ProductService","constructor","products","getAllProducts","fakerDbProducts","getProduct","id","product","find","factory","ɵfac","providedIn","_ProductService","ɵɵelement","ɵɵproperty","product_r3","id","imgProduct","description","priceBefore","price","isSale","ɵɵtemplate","HomeComponent_For_22_Conditional_0_Conditional_0_Template","ɵɵconditional","category","ctx_r8","HomeComponent_For_22_Conditional_0_Template","HomeComponent_For_22_Conditional_1_Template","ctx_r1","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","HomeComponent","constructor","productService","productCartService","quantityCartService","route","searchIcon","faMagnifyingGlass","searchProduct","products","ngOnInit","getAllProducts","queryParamMap","subscribe","params","get","toLocaleLowerCase","filter","p","toLowerCase","includes","updatedPriceTotal","getTotalInCart","map","product","push","onSearchProduct","event","target","value","setCategory","console","log","productIsContains","productDescription","match","ɵɵdirectiveInject","ProductService","ProductCartService","QuantityCartService","ActivatedRoute","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵlistener","$event","HomeComponent_Conditional_19_Template","ɵɵrepeaterCreate","HomeComponent_For_22_Template","ɵɵrepeaterTrackByIndex","HomeComponent_ForEmpty_23_Template","ɵɵadvance","ɵɵrepeater","CardComponent","FontAwesomeModule","FaIconComponent","styles","_HomeComponent","NotFoundComponent","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","_NotFoundComponent","faHeart","NG_VALUE_ACCESSOR","InjectionToken","NG_VALIDATORS","InjectionToken","isPresent","o","toObservable","value","isPromise","from","mergeErrors","arrayOfErrors","res","errors","__spreadValues","executeValidators","control","validators","validator","isValidatorFn","normalizeValidators","c","compose","presentValidators","composeValidators","composeAsync","observables","forkJoin","map","composeAsyncValidators","makeValidatorsArray","validators","hasValidator","validator","addValidators","currentValidators","current","v","removeValidators","ngControlStatusHost","ngGroupStatusHost","__spreadProps","__spreadValues","VALID","INVALID","PENDING","DISABLED","pickValidators","validatorOrOpts","isOptionsObj","coerceToValidator","validator","composeValidators","pickAsyncValidators","asyncValidator","coerceToAsyncValidator","composeAsyncValidators","assertControlPresent","parent","isGroup","key","controls","RuntimeError","assertAllValuesPresent","control","value","_","AbstractControl","validators","asyncValidators","validatorFn","asyncValidatorFn","addValidators","removeValidators","hasValidator","opts","skipPristineCheck","__spreadProps","__spreadValues","changeFn","ctrl","emitEvent","obs","toObservable","errors","path","currPath","name","errorCode","x","EventEmitter","status","fn","onlySelf","parentDirty","FormGroup","options","controlName","acc","subtreeUpdated","updated","child","cb","condition","initValue","res","FormRecord","FormGroup","removeListItem","list","el","index","isFormControlState","formState","FormControl","AbstractControl","validatorOrOpts","asyncValidator","pickValidators","pickAsyncValidators","isOptionsObj","value","options","changeFn","condition","fn","cb","FormArray","AbstractControl","controls","validatorOrOpts","asyncValidator","pickValidators","pickAsyncValidators","index","control","options","adjustedIndex","value","assertAllValuesPresent","newValue","assertControlPresent","subtreeUpdated","updated","child","cb","condition","name","isAbstractControlOptions","options","FormBuilder","_FormBuilder","nnfb","controls","reducedControls","newOptions","FormGroup","FormRecord","formState","validatorOrOpts","asyncValidator","FormControl","__spreadProps","__spreadValues","createdControls","c","FormArray","controlName","AbstractControl","value","validator","t","ɵɵdefineInjectable","hasV8BreakIterator","Platform","_Platform","_platformId","isPlatformBrowser","t","ɵɵinject","PLATFORM_ID","ɵɵdefineInjectable","supportsPassiveEvents","supportsPassiveEventListeners","normalizePassiveListenerOptions","options","shadowDomIsSupported","_supportsShadowDom","head","_getShadowRoot","element","rootNode","_getEventTarget","event","_isTestEnvironment","coerceArray","value","coerceElement","elementOrRef","ElementRef","mediaQueriesForWebkitCompatibility","mediaQueryStyleNode","MediaMatcher","_MediaMatcher","_platform","_nonce","noopMatchMedia","query","createEmptyStyleRule","t","ɵɵinject","Platform","CSP_NONCE","ɵɵdefineInjectable","nonce","e","BreakpointObserver","_BreakpointObserver","_mediaMatcher","_zone","Subject","value","splitQueries","coerceArray","mediaQuery","observables","stateObservable","combineLatest","concat","take","skip","debounceTime","map","breakpointStates","response","matches","mql","output","Observable","observer","handler","startWith","takeUntil","NgZone","queries","a1","a2","isFakeMousedownFromScreenReader","event","isFakeTouchstartFromScreenReader","touch","INPUT_MODALITY_DETECTOR_OPTIONS","InjectionToken","INPUT_MODALITY_DETECTOR_DEFAULT_OPTIONS","TOUCH_BUFFER_MS","modalityEventListenerOptions","normalizePassiveListenerOptions","InputModalityDetector","_InputModalityDetector","_platform","ngZone","document","options","BehaviorSubject","keyCode","_getEventTarget","__spreadValues","skip","distinctUntilChanged","t","ɵɵinject","Platform","NgZone","DOCUMENT","ɵɵdefineInjectable","FocusMonitorDetectionMode","FOCUS_MONITOR_DEFAULT_OPTIONS","InjectionToken","captureEventListenerOptions","normalizePassiveListenerOptions","FocusMonitor","_FocusMonitor","_ngZone","_platform","_inputModalityDetector","document","options","Subject","event","target","_getEventTarget","element","checkChildren","nativeElement","coerceElement","of","rootNode","_getShadowRoot","cachedInfo","info","elementInfo","origin","focusedElement","currentElement","_info","focusEventTarget","isFromInteraction","ms","TOUCH_BUFFER_MS","rootNodeFocusListeners","takeUntil","modality","results","mostRecentTarget","mostRecentModality","labels","i","t","ɵɵinject","NgZone","Platform","InputModalityDetector","DOCUMENT","ɵɵdefineInjectable","HighContrastMode","BLACK_ON_WHITE_CSS_CLASS","WHITE_ON_BLACK_CSS_CLASS","HIGH_CONTRAST_MODE_ACTIVE_CSS_CLASS","HighContrastModeDetector","_HighContrastModeDetector","_platform","document","inject","BreakpointObserver","testElement","documentWindow","computedStyle","computedColor","bodyClasses","mode","t","ɵɵinject","Platform","DOCUMENT","ɵɵdefineInjectable","BidiModule","_BidiModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","_c5","_c6","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","InjectionToken","MatCommonModule","_MatCommonModule","highContrastModeDetector","_sanityChecks","_document","name","_isTestEnvironment","t","ɵɵinject","HighContrastModeDetector","DOCUMENT","ɵɵdefineNgModule","ɵɵdefineInjector","BidiModule","RippleState","RippleRef","_renderer","element","config","_animationForciblyDisabledThroughCss","passiveCapturingEventOptions$1","normalizePassiveListenerOptions","RippleEventManager","event","target","_getEventTarget","handlers","handler","ngZone","name","handlersForEvent","handlersForElement","defaultRippleAnimationConfig","ignoreMouseEventsTimeout","passiveCapturingEventOptions","pointerDownEvents","pointerUpEvents","_RippleRenderer","_target","_ngZone","elementOrElementRef","_platform","coerceElement","x","y","containerRect","animationConfig","__spreadValues","radius","distanceToFurthestCorner","offsetX","offsetY","enterDuration","ripple","computedStyles","userTransitionProperty","userTransitionDuration","animationForciblyDisabledThroughCss","rippleRef","eventListeners","onTransitionEnd","onTransitionCancel","rippleEl","type","isMostRecentTransientRipple","persistent","isFakeMousedown","isFakeMousedownFromScreenReader","isSyntheticEvent","isFakeTouchstartFromScreenReader","touches","i","isVisible","trigger","RippleRenderer","rect","distX","distY","MAT_RIPPLE_GLOBAL_OPTIONS","InjectionToken","MatRipple","_MatRipple","value","_elementRef","platform","globalOptions","_animationMode","configOrX","t","ɵɵdirectiveInject","ElementRef","NgZone","Platform","ANIMATION_MODULE_TYPE","ɵɵdefineDirective","rf","ctx","ɵɵclassProp","InputFlags","_MatInternalFormField","__MatInternalFormField","t","ɵɵdefineComponent","rf","ctx","ɵɵclassProp","ɵɵStandaloneFeature","_c5","_c6","ɵɵprojectionDef","ɵɵprojection","_c0","MatSlideToggle_Conditional_10_Template","rf","ctx","ɵɵelementStart","ɵɵnamespaceSVG","ɵɵelement","ɵɵelementEnd","_c1","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","InjectionToken","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","NG_VALUE_ACCESSOR","forwardRef","MatSlideToggle","MatSlideToggleChange","source","checked","nextUniqueId","_MatSlideToggle","isChecked","value","_elementRef","_focusMonitor","_changeDetectorRef","tabIndex","defaults","animationMode","_","EventEmitter","focusOrigin","changes","fn","control","isDisabled","t","ɵɵdirectiveInject","ElementRef","FocusMonitor","ChangeDetectorRef","ɵɵinjectAttribute","ANIMATION_MODULE_TYPE","ɵɵdefineComponent","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","ɵɵhostProperty","ɵɵattribute","ɵɵclassMap","ɵɵclassProp","InputFlags","booleanAttribute","numberAttribute","ɵɵProvidersFeature","NG_VALIDATORS","ɵɵInputTransformsFeature","ɵɵNgOnChangesFeature","ɵɵStandaloneFeature","ɵɵprojectionDef","ɵɵlistener","ɵɵtemplate","$event","ɵɵprojection","_r0","ɵɵreference","ɵɵproperty","ɵɵadvance","ɵɵconditional","MatRipple","_MatInternalFormField","MatSlideToggleModule","_MatSlideToggleModule","t","ɵɵdefineNgModule","ɵɵdefineInjector","MatSlideToggle","MatCommonModule","ɵɵtext","ɵɵtextInterpolate1","ctx_r1","description","ɵɵelementStart","ɵɵelementEnd","ɵɵtemplate","MessageAddComponent_Conditional_0_Conditional_5_Template","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","title","ɵɵconditional","MessageAddComponent","constructor","signal","showMessage","EventEmitter","inputTitle","set","inputDescription","ngOnInit","onShowMessage","setTimeout","emit","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","MessageAddComponent_Conditional_0_Template","_MessageAddComponent","ɵɵelement","ɵɵproperty","ɵɵpureFunction0","_c0","_c1","_c2","_c3","ɵɵelementStart","ɵɵelementEnd","ɵɵtext","ɵɵlistener","$event","ɵɵrestoreView","_r5","ctx_r4","ɵɵnextContext","ɵɵresetView","onToggleValue","ctx_r6","onToggleFavorite","ɵɵtemplate","ProductComponent_Defer_0_Conditional_25_Template","ProductComponent_Defer_0_Conditional_26_Template","ctx_r7","addToCart","ɵɵadvance","ctx_r0","produto","imgProduct","ɵɵsanitizeUrl","description","ɵɵtextInterpolate","quantityInStock","ɵɵpipeBind2","priceBefore","price","ɵɵconditional","isFavorite","_c4","_r9","ctx_r8","onShowMessage","ctx_r1","ProductComponent","constructor","route","produtoService","faIcons","fb","productCartService","quantityCartService","id","amount","showMessage","ngOnInit","addIcons","farHeart","fasHeart","fasCart","paramMap","subscribe","params","get","getProduto","productForm","group","quantity","favorite","addCart","getProduct","Number","value","product","__spreadProps","__spreadValues","quantityProducts","getQuantityProducts","setProductCart","updatedProductInCart","isShowMessage","updatedQuantityInCart","updatedPriceTotal","ɵɵdirectiveInject","ActivatedRoute","ProductService","FaIconLibrary","FormBuilder","ProductCartService","QuantityCartService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ProductComponent_Defer_0_Template","ɵɵdefer","ProductComponent_Defer_1_DepsFn","ProductComponent_Conditional_3_Template","FontAwesomeModule","CommonModule","MatSlideToggleModule","MessageAddComponent","styles","_ProductComponent","MessageDeleteComponent","constructor","isDeleteMessage","EventEmitter","closeMessage","itemTitle","signal","inputItemTitle","title","set","onDeleteMessage","emit","onCloseMessage","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","ɵɵadvance","ɵɵtextInterpolate1","_MessageDeleteComponent","ɵɵelementStart","ɵɵlistener","$event","ɵɵrestoreView","_r2","ctx_r1","ɵɵnextContext","ɵɵresetView","onCloseMessage","ctx_r3","onToggleDelete","product","ɵɵelementEnd","ɵɵproperty","ctx_r0","CartCardComponent","constructor","quantityCartService","productCartService","isOpenDialog","isDeleteItem","onChangeDeleteEmit","EventEmitter","quantityProductEmit","trashIcon","faTrashCan","productVoid","id","imgProduct","description","quantityInStock","price","priceBefore","category","isSale","signal","ngOnInit","updatedQuantityInCart","inputProduct","set","onToggleValue","value","updatedCart","emit","updatedPriceTotal","openMessage","deleteProductInCart","isClose","ɵɵdirectiveInject","QuantityCartService","ProductCartService","selectors","inputs","outputs","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelement","ɵɵtext","ɵɵtemplate","CartCardComponent_Conditional_17_Template","ɵɵadvance","ɵɵsanitizeUrl","ɵɵtextInterpolate1","ɵɵpipeBind2","ɵɵconditional","FontAwesomeModule","FaIconComponent","ProductQuantityComponent","CommonModule","CurrencyPipe","MessageDeleteComponent","styles","_CartCardComponent","ɵɵelementStart","ɵɵlistener","$event","product_r2","ɵɵrestoreView","_r8","$implicit","ctx_r7","ɵɵnextContext","ɵɵresetView","getQuantity","ctx_r9","getCart","ɵɵelementEnd","ɵɵadvance","ɵɵproperty","ɵɵtext","CartComponent","constructor","productCartService","quantityCartService","products","quantity","signal","priceTotal","icons","basketShooping","faBasketShopping","dollar","faSackDollar","ngOnInit","set","getPriceTotal","getTotalInCart","updatedPriceTotal","updatedQuantityTotal","value","id","setQuantityProductsById","updatedQuantityInCart","update","oldValue","ɵɵdirectiveInject","ProductCartService","QuantityCartService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelement","ɵɵrepeaterCreate","CartComponent_For_22_Template","ɵɵrepeaterTrackByIndex","CartComponent_ForEmpty_23_Template","ɵɵrepeater","ɵɵtextInterpolate","ɵɵpipeBind2","FontAwesomeModule","FaIconComponent","ButtonActionComponent","CartCardComponent","CommonModule","CurrencyPipe","styles","_CartComponent","ContactComponent","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","_ContactComponent","routes","path","redirectTo","pathMatch","component","CartComponent","title","HomeComponent","ProductComponent","ContactComponent","NotFoundComponent","ANIMATION_PREFIX","AsyncAnimationRendererFactory","_AsyncAnimationRendererFactory","doc","delegate","zone","animationType","moduleImpl","inject","ChangeDetectionScheduler","e","RuntimeError","ɵcreateEngine","ɵAnimationRendererFactory","rendererFactory","hostElement","rendererType","renderer","dynamicRenderer","DynamicDelegationRenderer","animationRendererFactory","animationRenderer","t","ɵɵinvalidFactory","ɵɵdefineInjectable","impl","fn","name","namespace","value","parent","newChild","refChild","isMove","oldChild","isHostElement","selectorOrNode","preserveContent","node","el","style","flags","target","eventName","callback","propOrEventName","provideAnimationsAsync","type","performanceMarkFeature","makeEnvironmentProviders","RendererFactory2","DOCUMENT","DomRendererFactory2","NgZone","ANIMATION_MODULE_TYPE","appConfig","providers","provideRouter","routes","provideAnimations","provideHttpClient","withFetch","provideAnimationsAsync","ObjectUtils","_ObjectUtils","value","empty","obj1","obj2","field","arrA","arrB","i","length","key","dateA","dateB","regexpA","regexpB","keys","data","fields","len","obj","from","to","target","item","index","arr","sourceArr","injected","list","val","str","input","value1","value2","locale","order","result","emptyValue1","emptyValue2","nullSortOrder","finalSortOrder","__spreadValues","char","params","callback","a","b","lastId","UniqueComponentId","prefix","ZIndexUtils","zIndexes","generateZIndex","baseZIndex","lastZIndex","newZIndex","revertZIndex","zIndex","getCurrentZIndex","getZIndex","el","zindexutils","SharedModule","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","_c0","BaseIcon","isLabelEmpty","ObjectUtils","ɵɵdefineComponent","ɵɵStandaloneFeature","rf","ctx","ɵɵprojectionDef","ɵɵprojection","SpinnerIcon","BaseIcon","UniqueComponentId","ɵSpinnerIcon_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","ɵɵadvance","ɵɵproperty","RippleModule","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","ButtonModule","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","RippleModule","SharedModule","SpinnerIcon","NavbarComponent","constructor","faBasketShopping","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵadvance","ɵɵproperty","ɵɵpureFunction0","_c0","RouterLink","RouterLinkActive","FontAwesomeModule","FaIconComponent","CommonModule","styles","changeDetection","_NavbarComponent","AngleDownIcon","BaseIcon","ɵAngleDownIcon_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","AngleRightIcon","BaseIcon","ɵAngleRightIcon_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","BarsIcon","BaseIcon","ɵBarsIcon_BaseFactory","t","ɵɵgetInheritedFactory","ɵɵdefineComponent","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","rf","ctx","ɵɵnamespaceSVG","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵclassMap","ɵɵattribute","TooltipModule","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","MenubarModule","ɵɵdefineNgModule","ɵɵdefineInjector","CommonModule","RouterModule","RippleModule","TooltipModule","SharedModule","BarsIcon","AngleDownIcon","AngleRightIcon","HeaderComponent","constructor","totalPriceInCart","ngOnInit","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","NavbarComponent","MenubarModule","RouterLink","styles","changeDetection","_HeaderComponent","FooterComponent","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","_FooterComponent","AppComponent","constructor","title","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","template","rf","ctx","ɵɵelement","ɵɵelementStart","ɵɵelementEnd","CommonModule","RouterOutlet","ButtonModule","HeaderComponent","FooterComponent","FontAwesomeModule","styles","_AppComponent","bootstrapApplication","AppComponent","appConfig","catch","err","console","error"],"x_google_ignoreList":[0,1,10,11,12,13,14,15,16,17,18,32,34,35,36,37,38,39,42,43,44,45,46]}